C:\Users\J\Documents\GitHub\ML_Final_Project\venv\Scripts\python.exe C:\Users\J\Documents\GitHub\ML_Final_Project\src\ml_model.py
C:\Users\J\Documents\GitHub\ML_Final_Project\src\ml_model.py:1: DeprecationWarning: The Tix Tk extension is unmaintained, and the tkinter.tix wrapper module is deprecated in favor of tkinter.ttk
  from tkinter.tix import MAX
loading data (0.17 GiB)...
C:\Users\J\Documents\GitHub\ML_Final_Project\src\ml_model.py:38: UserWarning: Could not infer format, so each element will be parsed individually, falling back to `dateutil`. To ensure parsing is consistent and as-expected, please specify a format.
  dataset = pd.read_csv(combined_features_filename, index_col=0, parse_dates=True, dtype=dtypes)
dataset:
       ('o', 'h')  ('h', 'r')  ...  ('S', 'X')                        label
ID                             ...
1               0           0  ...           0                        Shell
2               0           0  ...           0                       Polish
3               0           0  ...           0                    Portugese
4               0           0  ...           0  Modern Ecclesiastical Latin
5               0           0  ...           0                        Dutch
...           ...         ...  ...         ...                          ...
9996            0           0  ...           0               Middle English
9997            0           0  ...           0                       Polish
9998            0           0  ...           0                    Portugese
9999            0           0  ...           0                      Finnish
10000           0           0  ...           0                      Haitian

[10000 rows x 9261 columns]
size in RAM: 0.17 GiB
--------
dataset dtypes:
('o', 'h')    uint16
('h', 'r')    uint16
('r', 'n')    uint16
('n', 'g')    uint16
('g', 'f')    uint16
               ...
('w', 'ö')    uint16
('e', ']')    uint16
('E', 'l')    uint16
('S', 'X')    uint16
label         object
Length: 9261, dtype: object
--------
columns:
["('o', 'h')", "('h', 'r')", "('r', 'n')", "('n', 'g')", "('g', 'f')", "('f', 'i')", "('i', 'o')", "('o', 'r')", "('n', 'i')", "('i', 'n')", "('n', 'k')", "('k', ' ')", "(' ', 'd')", "('d', 'o')", "('o', 'p')", "('p', ' ')", "(' ', 'c')", "('c', ' ')", "(' ', 'e')", "('e', 'r')", "('r', 'j')", "('j', 'b')", "('b', 'd')", "('d', 's')", "('s', 'p')", "('p', 'v')", "('v', 'i')", "('i', 's')", "('s', 'a')", "('a', 'd')", "('d', 'h')", "('h', 'p')", "('p', 'o')", "('o', ' ')", "(' ', 'f')", "('f', 'j')", "('j', 's')", "('s', 'd')", "('d', 'k')", "('k', 'j')", "('b', 'a')", "('a', 'u')", "('u', 'e')", "('r', 'g')", "('g', 'h')", "('h', 'b')", "('b', ' ')", "('r', 'k')", "('k', 'h')", "('h', ' ')", "(' ', 'j')", "('j', 'y')", "('y', 'g')", "('g', 'u')", "('u', 'j')", "('g', ' ')", "('c', 'i')", "('i', 'k')", "('k', 'o')", "(' ', 'y')", "('y', 'v')", "('v', 'f')", "('f', 'd')", "('d', 'c')", "('c', 'x')", "('x', 's')", "('c', 'v')", "('f', 'b')", "('b', 'g')", "('g', 'n')", "('n', 'h')", "(' ', 't')", "('t', 'u')", "('u', 's')", "('s', 's')", "('s', 'u')", "('s', 'c')", "('c', 't')", "('t', 'c')", "('c', 's')", "('s', 'j')", "('y', 'j')", "('j', 'w')", "('w', ' ')", "(' ', 'n')", "('n', ' ')", "(' ', 'b')", "('a', 'n')", "('n', 'p')", "('p', 'e')", "('e', 'o')", "('o', 'k')", "('k', 'g')", "('g', 'o')", "('p', 'a')", "('a', 'w')", "('w', 'h')", "(' ', 'w')", "(' ', 'h')", "('h', 'v')", "('s', 'z')", "('z', 'a')", "('w', 'e')", "('e', ' ')", "(' ', 'i')", "('i', 'u')", "('u', 'd')", "('d', 'n')", "('n', 's')", "('s', ' ')", "(' ', 'g')", "('g', 'b')", "('b', 'p')", "('p', 'z')", "('z', 's')", "('s', 'e')", "('e', 'f')", "('f', 'g')", "(' ', 'x')", "('x', 'c')", "('c', 'm')", "('m', 'v')", "('v', 'b')", "(' ', 'u')", "('j', ' ')", "('f', ' ')", "('c', 'r')", "('r', 'v')", "('g', 'v')", "('f', 't')", "('t', 'd')", "('d', ' ')", "(' ', 'l')", "('l', 'i')", "('i', 'a')", "('u', 'w')", "('e', 'w')", "('w', 'r')", "('r', 'h')", "('h', 'e')", "('e', 'i')", "('i', 'g')", "('g', 'l')", "('l', 'j')", "(' ', 'r')", "('r', 'e')", "(' ', 'v')", "('v', ' ')", "('e', 'h')", "('h', 'd')", "('d', 'i')", "('o', 'q')", "('q', 'j')", "('j', 'o')", "('q', 'p')", "(' ', 'z')", "('z', 'h')", "('h', 'j')", "('j', 't')", "('t', 'x')", "('x', 'k')", "('k', 'u')", "('e', 't')", "('t', 'i')", "('r', 't')", "('t', 'w')", "('w', 'o')", "('o', 'w')", "('w', 'b')", "('g', 'i')", "('i', 'w')", "('o', 'i')", "('i', ' ')", "('d', 'e')", "('e', 's')", "('d', 'f')", "('g', 't')", "('t', 'r')", "('r', 'f')", "('h', 'y')", "('y', ' ')", "('h', 'g')", "('u', ' ')", "('f', 'x')", "('x', 'r')", "('r', 'd')", "('g', 'g')", "('g', 's')", "('s', 'k')", "('d', 'j')", "('j', 'k')", "('k', 'i')", "('u', 'h')", "('j', 'd')", "('e', 'c')", "('d', 't')", "('t', 'v')", "('v', 'y')", "('y', 'b')", "('j', 'n')", "('j', 'i')", "('w', 'i')", "('i', 'f')", "('y', 'k')", "('k', 'y')", "('y', 'o')", "('i', 'x')", "('x', ' ')", "('c', 'b')", "('s', 'i')", "('i', 'j')", "('k', 'e')", "('e', 'm')", "('m', 'd')", "('j', 'e')", "('r', 'm')", "('m', 'f')", "('d', 'u')", "('k', 'n')", "('n', 'e')", "('h', 'o')", "('e', 'x')", "('s', 't')", "('v', 'r')", "('r', ' ')", "(' ', 'a')", "('a', 's')", "('k', 'l')", "('l', 'f')", "('f', 'l')", "('l', 'a')", "('a', 'a')", "('a', ' ')", "('r', 'r')", "('v', 's')", "('k', 'c')", "('r', 'u')", "('u', 'r')", "('t', 'y')", "('y', 'e')", "('y', 't')", "('i', 't')", "('t', 'f')", "('d', 'r')", "('j', 'g')", "('l', 'k')", "('j', 'r')", "('d', 'l')", "('l', ' ')", "(' ', 'o')", "('u', 'b')", "('a', 'r')", "('r', 'i')", "(' ', 'm')", "('m', 'n')", "('x', 'z')", "('z', 'f')", "('f', 'u')", "('e', 'd')", "('d', 'w')", "('w', 'p')", "('p', 'b')", "('b', 'v')", "('v', 't')", "('t', ' ')", "('h', 'm')", "('m', 'y')", "('y', 'i')", "('l', 'o')", "('p', 'h')", "('d', 'g')", "('e', 'k')", "('k', 'w')", "('o', 'o')", "('p', 'i')", "('f', 'p')", "('x', 'y')", "('k', 'x')", "('v', 'j')", "('j', 'z')", "('z', 'r')", "('r', 'y')", "('y', 'c')", "('r', 's')", "('j', 'm')", "('r', 'b')", "('a', 'e')", "('u', 'f')", "('f', 'a')", "('a', 'j')", "('u', 'c')", "('c', 'j')", "(' ', 'p')", "('p', 'j')", "('g', 'p')", "('h', 'u')", "('u', 'y')", "('t', 'h')", "('g', 'y')", "('y', 'p')", "('p', 'w')", "('w', 'y')", "('y', 'r')", "('r', 'q')", "('j', 'a')", "('a', 'f')", "('f', 'e')", "('l', 'b')", "('h', 'n')", "('n', 'y')", "('k', 't')", "('x', 'j')", "('w', 's')", "(' ', 'q')", "('q', 'c')", "('b', 'e')", "('y', 'h')", "('b', 'w')", "('d', 'a')", "('s', 'f')", "('l', 'd')", "('h', 'f')", "('j', 'p')", "('p', 'q')", "('q', 'q')", "('q', ' ')", "('w', 'q')", "('q', 'd')", "('a', 'k')", "('b', 'l')", "('l', 'q')", "('q', 'b')", "('b', 'h')", "('h', 'q')", "('q', 'h')", "('b', 'u')", "('u', 'g')", "('g', 'e')", "('j', 'l')", "('a', 'h')", "('f', 'h')", "('h', 'l')", "('g', 'x')", "('x', 'e')", "('e', 'g')", "('g', 'j')", "('j', 'h')", "('h', 'w')", "('k', 'd')", "('i', 'q')", "('q', 'o')", "('e', 'u')", "(' ', 's')", "('s', 'h')", "('b', 'q')", "('q', 'l')", "('l', 'l')", "('a', 'l')", "('l', 'v')", "('s', 'l')", "('p', 'g')", "('j', 'j')", "('j', 'f')", "('k', 'f')", "('h', 's')", "('x', 'w')", "('k', 'm')", "('m', 'w')", "('o', 'j')", "('o', 'a')", "('r', 'o')", "('w', 'f')", "('s', 'o')", "('t', 'b')", "('b', 'j')", "('n', 'q')", "('e', 'p')", "('p', 'r')", "('n', 'x')", "('x', 'd')", "('r', 'c')", "('c', 'c')", "('o', 's')", "('s', 'g')", "('e', 'z')", "('a', 'x')", "('h', 'i')", "('g', 'w')", "('w', 'a')", "('u', 'i')", "('o', 'e')", "('h', 'h')", "('o', 'y')", "('b', 'i')", "('u', 'p')", "('b', 'k')", "('g', 'k')", "('h', 'a')", "('u', 'k')", "('u', 'v')", "('v', 'z')", "('h', 'z')", "('z', 'z')", "('z', ' ')", "('i', 'c')", "('c', 'n')", "('n', 'j')", "('c', 'd')", "('t', 'o')", "('e', 'y')", "('f', 'v')", "('v', 'u')", "('k', 'b')", "('n', 'm')", "('m', 'p')", "('o', 'n')", "('n', 'r')", "('i', 'y')", "('b', 'o')", "('d', 'x')", "('o', 'm')", "('m', 't')", "('j', 'q')", "('q', 'f')", "('i', 'h')", "('o', 'g')", "('f', 'r')", "('n', 'z')", "('a', 'o')", "('s', 'r')", "('a', 'g')", "('g', 'r')", "('f', 'n')", "('k', 'v')", "('v', 'n')", "('o', 'd')", "('a', 'm')", "('v', 'o')", "('y', 'd')", "('i', 'b')", "('d', 'v')", "('b', 's')", "('w', 'g')", "('g', 'm')", "('m', 'k')", "('v', 'c')", "('i', 'd')", "('l', 't')", "('t', 'g')", "('n', 'f')", "('l', 'r')", "('r', 'w')", "('i', 'l')", "(' ', 'k')", "('v', 'a')", "('s', 'n')", "('n', 'l')", "('w', 'n')", "('k', 'k')", "('m', 's')", "('h', 'c')", "('c', 'a')", "('y', 'a')", "('n', 'b')", "('i', 'm')", "('m', 'e')", "('n', 'a')", "('s', 'x')", "('y', 'u')", "('u', 't')", "('w', 'v')", "('t', 'j')", "('m', 'o')", "('z', 'v')", "('v', 'l')", "('l', 'z')", "('z', 'g')", "('i', 'v')", "('t', 's')", "('v', 'd')", "('l', 'u')", "('e', 'n')", "('o', 't')", "('g', 'd')", "('l', 's')", "('u', 'u')", "('v', 'h')", "('u', 'o')", "('j', 'c')", "('c', 'p')", "('p', 'k')", "('m', ' ')", "('m', 'i')", "('j', 'u')", "('x', 't')", "('c', 'o')", "('e', 'j')", "('b', 'x')", "('s', 'b')", "('e', 'v')", "('o', 'v')", "('v', 'g')", "('c', 'l')", "('n', 'o')", "('o', 'f')", "('p', 'x')", "('x', 'h')", "('u', 'n')", "('n', 'v')", "('v', 'e')", "('w', 'z')", "('s', 'v')", "('v', 'p')", "('p', 'n')", "('n', 'w')", "('o', 'u')", "('d', 'b')", "('b', 'f')", "('f', 'o')", "('d', 'q')", "('q', 'u')", "('s', 'q')", "('i', 'i')", "('g', 'q')", "('q', 'w')", "('w', 'c')", "('c', 'h')", "('f', 'f')", "('e', 'a')", "('a', 'c')", "('j', 'x')", "('r', 'a')", "('i', 'p')", "('a', 'p')", "('t', 'z')", "('c', 'e')", "('v', 'w')", "('d', 'z')", "('z', 'x')", "('x', 'f')", "('l', 'n')", "('m', 'l')", "('t', 'e')", "('p', 'u')", "('a', 'v')", "('q', 'g')", "('o', 'c')", "('c', 'u')", "('v', 'm')", "('d', 'd')", "('p', 'f')", "('p', 'p')", "('d', 'p')", "('b', 'n')", "('q', 'r')", "('f', 'y')", "('m', 'h')", "('n', 'c')", "('i', 'e')", "('a', 't')", "('v', 'k')", "('f', 'w')", "('w', 'k')", "('a', 'i')", "('z', 'd')", "('k', 's')", "('a', 'q')", "('q', 'n')", "('n', 'n')", "('g', 'c')", "('z', 'l')", "('q', 'v')", "('t', 'k')", "('k', 'r')", "('t', 't')", "('w', 'j')", "('q', 'i')", "('p', 's')", "('n', 'u')", "('n', 't')", "('n', 'd')", "('l', 'e')", "('u', 'a')", "('b', 't')", "('y', 'w')", "('m', 'r')", "('f', 'c')", "('v', 'v')", "('j', 'v')", "('k', 'a')", "('a', 'b')", "('i', 'r')", "('y', 'l')", "('l', 'h')", "('z', 'b')", "('w', 'd')", "('s', 'm')", "('m', 'c')", "('x', 'g')", "('l', 'x')", "('h', 't')", "('t', 'n')", "('w', 'u')", "('e', 'q')", "('w', 'm')", "('f', 's')", "('e', 'l')", "('m', 'u')", "('r', 'l')", "('o', 'z')", "('o', 'b')", "('b', 'c')", "('c', 'f')", "('t', 'q')", "('m', 'a')", "('z', 'e')", "('g', 'a')", "('d', 'm')", "('b', 'm')", "('u', 'm')", "('q', 'x')", "('x', 'q')", "('c', 'k')", "('k', 'q')", "('p', 'y')", "('b', 'b')", "('f', 'm')", "('m', 'j')", "('e', 'b')", "('s', 'y')", "('z', 'p')", "('d', 'y')", "('o', 'l')", "('c', 'w')", "('r', 'p')", "('t', 'p')", "('s', 'w')", "('u', 'l')", "('u', 'x')", "('x', 'u')", "('w', 'l')", "('c', 'g')", "('y', 'y')", "('b', 'r')", "('q', 'e')", "('f', 'q')", "('u', 'z')", "('f', 'k')", "('w', 't')", "('z', 'k')", "('p', 'd')", "('x', 'o')", "('x', 'm')", "('p', 't')", "('r', 'x')", "('w', 'w')", "('h', 'k')", "('c', 'y')", "('k', 'z')", "('z', 'q')", "('q', 'a')", "('g', 'z')", "('m', 'm')", "('x', 'p')", "('a', 'z')", "('l', 'g')", "('f', 'z')", "('z', 'm')", "('m', 'z')", "('z', 'i')", "('i', 'z')", "('e', 'e')", "('b', 'y')", "('x', 'b')", "('y', 's')", "('y', 'f')", "('l', 'w')", "('x', 'l')", "('z', 'u')", "('k', 'p')", "('c', 'q')", "('m', 'q')", "('q', 'z')", "('x', 'n')", "('y', 'n')", "('z', 'w')", "('p', 'm')", "('w', 'x')", "('z', 'j')", "('o', 'x')", "('l', 'c')", "('y', 'x')", "('z', 'c')", "('b', 'z')", "('l', 'p')", "('p', 'c')", "('x', 'a')", "('x', 'v')", "('q', 'k')", "('u', 'q')", "('h', 'x')", "('t', 'm')", "('a', 'y')", "('t', 'l')", "('p', 'l')", "('r', 'z')", "('m', 'g')", "('t', 'a')", "('y', 'm')", "('l', 'm')", "('x', 'x')", "('m', 'x')", "('v', 'x')", "('y', 'z')", "('m', 'b')", "('z', 'n')", "('l', 'y')", "('x', 'i')", "('z', 'o')", "('v', 'q')", "('q', 's')", "('z', 'y')", "('Ģ', 'r')", "('<', 'd')", "('A', 'ī')", "('d', '5')", "('ņ', '.')", "('C', 'U')", "('T', ':')", "('A', 'h')", "('c', ']')", "('ä', ';')", "('ü', 'ß')", "('B', '1')", "('Ĥ', 'o')", "('\\xa0', 'R')", "('a', 'ĵ')", "('⌈', 'k')", "('\\xa0', 'A')", "('z', '“')", "('w', '?')", "('«', '-')", "('.', 'J')", "('y', 'q')", "('Ī', 's')", "('g', 'ä')", "('Ā', 'n')", '(\'C\', \'"\')', "('B', 'ą')", "('3', '5')", "('G', 'r')", '(\'l\', \'"\')', "('Ř', 'v')", "('è', '-')", "('t', 'H')", "(',', '\\u202f')", "('e', 'þ')", "('ř', 'u')", "('L', 'w')", '(\'q\', "\'")', "('ň', 's')", "('J', 'e')", "('1', 'f')", "('í', 'ř')", "('O', 'ž')", "('p', 'E')", "('`', 'L')", "('3', 'F')", "('$', 'P')", "('g', '&')", "('F', 'æ')", "('r', 'O')", "('ó', '!')", "('e', 'ä')", "('d', 'ę')", "('t', 'ã')", "('J', 'C')", "('T', 'u')", '("\'", \'2\')', "(':', '+')", "('0', 'E')", "(':', '\\\\')", "('\\xa0', ' ')", "('!', ':')", "('ā', ';')", "('g', 'ž')", "('-', 'U')", "('B', 'i')", "('m', 'í')", "('W', 'y')", "('à', 'r')", '(\'8\', "\'")', "('B', 'ī')", "('8', ',')", "('ā', '?')", "('L', '3')", "('o', 'C')", "('w', 'ò')", "('Q', ';')", '(\'"\', \'3\')', "('d', 'M')", "('-', 'ſ')", "('r', 'L')", "('á', '.')", "('b', 'L')", "('ā', 'i')", "('e', 'F')", "('e', 'ť')", "('u', 'ū')", "('W', 'ä')", "('v', 'í')", "('[', 'O')", "('g', 'C')", "('#', '0')", "('W', 'K')", "('ê', 'p')", '(\'"\', \'m\')', "('P', 'õ')", "('?', 'i')", "(' ', ' ')", "('&', 'T')", "('C', 'ā')", "('ý', 'k')", "('?', '“')", "('ſ', 'm')", "('E', 'Ĝ')", "('7', 'm')", "('ç', 'à')", "('É', 'p')", "('æ', ';')", "('h', 'E')", '(\'j\', "\'")', "('@', '$')", "('.', 'Y')", "('o', 'ń')", "('>', '3')", "('\\\\', 'S')", "('ķ', ' ')", "('A', 'ū')", "('ň', ' ')", "('B', 'ů')", "('ů', '-')", "('Y', 'V')", "('m', '–')", "('u', '[')", "('ą', ';')", "('ū', 'ž')", "('C', 'i')", "(' ', 'Č')", '(\'"\', \'.\')', "('ſ', 's')", "('á', 't')", "('í', ';')", "('z', ']')", "('è', 's')", "('h', 'L')", "('š', ';')", "('ī', 'n')", "('g', 'ø')", "('ò', '!')", "('l', '\\t')", "('v', '=')", "(' ', 'G')", "('č', 't')", "('Z', 'è')", "('Á', 'r')", "('\\u202f', 'm')", "('O', 'r')", "('T', 'R')", "('ö', ' ')", "('8', ':')", "('m', 'ě')", "('.', ']')", "('p', 'č')", "('7', 'S')", "('ŭ', 'e')", "('O', 'B')", "('ņ', 'ģ')", "('ň', ')')", "('W', 'H')", "('s', 'î')", "('ā', '!')", "('í', '!')", "('.', 'c')", "('Y', 'N')", "('ū', ':')", "('ŭ', ';')", "('N', '_')", "('Y', 'e')", "('z', 'ą')", "('s', 'ü')", "('o', 'ï')", "('S', 'Q')", "('å', ';')", "('M', 'r')", "('ü', 'r')", "('R', 't')", "('b', 'š')", "('8', '5')", "('K', 'D')", "('i', 'ť')", "('å', 'g')", "(' ', 'B')", "('«', 'A')", "('P', 'R')", "('d', '%')", "(',', 't')", "('Ó', 'd')", "('ô', 'n')", "('æ', 'p')", "('J', 'á')", "('A', 'R')", "('B', 'A')", "('t', 'ê')", "('ä', '.')", "('a', 'ď')", "('p', 'ę')", "('š', 'm')", "('â', 'c')", "('č', 's')", '(\'m\', \'"\')', "('r', 'A')", "('.', '(')", "('ö', 'v')", "('(', 'i')", "('ú', 'm')", "('H', ',')", "('6', '0')", "('h', 'T')", "('»', 'f')", "('.', 'r')", "('U', 'U')", "('A', 'ŝ')", "('î', 'l')", "('ď', ':')", "('C', 'ē')", "('8', 'n')", "(' ', 'Ú')", "('*', 'D')", "('l', 'ã')", "('o', 'ł')", "('>', 'i')", "('S', 'm')", "('ŭ', 'u')", "('F', 'ò')", '("\'", \'»\')', "('c', 'z')", "('—', 'p')", "('C', '3')", "('-', '!')", "('e', 'ã')", "('#', 'p')", "('[', '3')", '(\'f\', "\'")', "('n', '–')", "('P', 'u')", "('ò', 'p')", "('m', 'ó')", "('ł', 'b')", "('>', 'm')", "('(', 'R')", "('8', '2')", "('“', 'd')", "('t', 'L')", "('/', 'h')", "('s', 'ą')", "('M', 'M')", "('H', 'P')", "('ŝ', 's')", "('ó', 'd')", "('-', 'q')", "('m', '/')", "('Z', ',')", "('i', 'T')", "('ż', ' ')", "('Z', 'h')", "('c', '0')", "('d', 'ą')", "('„', 'Ó')", "('_', '2')", "('ů', 'ž')", "('a', 'E')", "('!', 't')", "('S', 'E')", "('6', '1')", "(',', 'F')", "('H', 'ö')", "('*', '`')", "('⌈', 'F')", "('ł', 'c')", "('ê', 'i')", "('ļ', 'a')", "(';', '⌉')", "('ž', '!')", "('!', 'M')", "('ę', 'm')", "('l', 'é')", "('N', 'ô')", "('-', '(')", "('j', 'æ')", "('í', ':')", "('N', 'B')", "('L', 'P')", "('⌈', 'Ú')", "('S', 'F')", "('d', 'ž')", "('Z', 'k')", "('«', 'e')", "(']', '?')", "(' ', 'I')", "('ā', 'ņ')", "('î', 'u')", '(\'u\', \'"\')', "('ŝ', '!')", "('ę', 'd')", "('i', 'ģ')", "('š', '.')", "('9', ';')", "('b', '?')", "('s', '?')", "('#', '6')", "('Ģ', 'i')", "('<', 'x')", "('k', 'ę')", "(',', '#')", "('á', 'i')", "('ū', 't')", "('!', 'g')", "('l', '=')", "('e', 'æ')", "('l', '\\u202f')", "('⌈', 'e')", "('á', '–')", "('Č', 'í')", "('ó', 'i')", "('í', 'š')", "('\\xad', 'g')", "('Ȝ', 'e')", "('@', 't')", '("\'", \'É\')', "('[', '[')", "('5', '9')", "('#', '!')", "('d', 'ø')", "(')', '}')", "('>', '&')", "('ř', 'p')", "('D', 'R')", "('B', 'Z')", "('+', 'c')", "('b', 'û')", "('R', 'H')", "('ď', '?')", "('0', '8')", "('S', 'D')", '(\'3\', "\'")', "('x', 'B')", "('ź', 'o')", "(':', 'V')", "('i', '\\\\')", "('ó', 'ď')", "('D', '2')", "('C', '8')", "('p', 'ö')", "('y', '1')", "('Á', 'š')", "('ā', 'n')", "('v', 'ê')", "('ī', 'p')", "('I', ')')", "('-', 'Ķ')", "('S', '3')", "('(', 'ķ')", "('ó', 'w')", '("\'", \'0\')', "('’', 'N')", "('ä', 'l')", "('k', 'å')", "('ö', 'k')", "('R', 'u')", '(\'"\', \'f\')', "(' ', ':')", "('E', 'ņ')", "('?', ':')", "('V', 'p')", "('C', 'O')", "('ë', 't')", "('p', 'S')", "('\\xa0', 'M')", "('S', 'O')", '(\'á\', "\'")', "('T', 'S')", "('\\xa0', 'ó')", '("\'", \'f\')', "('m', '-')", "('h', 'H')", "('W', 'E')", "('5', ')')", "('ö', 't')", "('K', 'Y')", '(\'1\', "\'")', "('–', 'n')", "(' ', '😬')", "('è', 'f')", "('.', 'P')", "('ë', 'l')", "('8', '7')", "('„', 'E')", "('G', '.')", "('ö', ':')", "('ń', '.')", "('t', 'ń')", "(')', '/')", "('“', ']')", "('8', ' ')", "('V', 'T')", "('ū', 'm')", "('Č', 't')", "('S', 'V')", '(\'Q\', \'"\')', "('E', 'A')", "('I', ']')", "('E', 'x')", '("\'", \'首\')', "('C', '7')", "('f', '9')", "('p', 'ť')", "('n', 'þ')", "('1', '7')", "('Á', 'k')", "('R', 'M')", "('â', 't')", "('s', 'ō')", "('L', 'á')", "('v', 'ň')", "('#', 'f')", "('ŝ', 'h')", "('å', ',')", "('\\\\', 's')", "('t', '(')", "('1', '4')", "('K', 'h')", "('U', 'W')", "('!', 'L')", "('K', 'r')", "('M', 'P')", "('ó', ' ')", "('“', 'É')", "('»', 'P')", "('d', 'ł')", "('y', 'þ')", "('N', 'V')", "('é', 'h')", "('1', '2')", "('-', 'w')", "('8', 'd')", "('þ', 'g')", "('{', 'w')", "('I', 'J')", "('[', 'Q')", "('G', '0')", '(\'"\', \'4\')', "('“', 'Ļ')", "('>', ';')", "('s', 'š')", "('ā', '”')", "('T', 'H')", "('v', 'ô')", "('ä', 'k')", "('ý', 'n')", "('§', '.')", "('B', '8')", "('j', 'ň')", "('k', 'N')", "('O', 'L')", "('t', 'N')", "('.', '6')", "(' ', 'É')", "('å', 'm')", "('ß', 'g')", "(' ', 'ø')", "('ņ', ',')", "('c', '8')", "('d', '>')", "('Š', 'p')", "('l', 'č')", "('ò', ';')", "('e', 'ś')", "('ā', 'd')", "('7', '7')", "('6', 'y')", "('H', 'Y')", "('l', '5')", "('í', '.')", "('w', '-')", "('b', ';')", "('(', 'T')", "('i', 'B')", "('n', 'ĥ')", "('Ā', 'l')", "('`', 'w')", "('.', 'O')", "('ř', ' ')", "('ī', 'ņ')", "('á', 'o')", "('A', 'X')", "('#', 'e')", "('P', 'á')", "('š', 'g')", "('p', 'ú')", "('z', 'ò')", "('D', 'ã')", "('A', 'G')", "('ĥ', 'n')", "('s', ',')", "('ó', 'j')", "('`', 'D')", "('f', 'ř')", "('ň', '?')", "('b', 'J')", "('í', 'f')", "('a', '3')", "('e', 'ź')", "('ļ', 'ā')", "('l', 'P')", "('9', 'E')", "('G', 'V')", "(')', ']')", '(\'A\', "\'")', "('R', 'V')", "('于', 'A')", "('d', 'ś')", "('_', '0')", "('4', 'E')", "('l', '–')", "('„', 'Č')", "('!', '’')", "('P', 'ļ')", "('z', 'ī')", "('S', 'f')", '("\'", \'á\')', "('k', 'ĝ')", "('z', '!')", "('+', ']')", "('Š', 'á')", "(',', 'l')", "('í', '?')", "('*', '.')", "('k', 'š')", "('ļ', 'ķ')", "('[', '„')", "('ŝ', 'b')", "('9', '2')", "('1', '/')", "('p', 'ģ')", "('S', 'd')", "('y', 'ż')", "('{', 'Q')", "('$', 'n')", "('Y', ' ')", "('ě', ';')", "('v', 'ä')", "('S', 'n')", "('w', ')')", "('á', 'ť')", "('L', 'i')", "('j', '.')", "(' ', 'Ż')", "('4', '-')", "('T', 'ó')", "('ů', 'n')", "('#', 'i')", "('y', '⌉')", '(\'"\', \'p\')', "('/', '.')", "('á', 'č')", "('ń', ':')", "('«', 'g')", "('R', 'Ý')", "('>', ')')", "('1', 'w')", "('H', 'N')", "('b', 'ą')", "('é', 'c')", "('D', 'E')", "('D', 'v')", "('G', 'i')", "('\\\\', 'r')", "('C', 'D')", "('\\u202f', 'r')", "('a', '`')", "('E', 'Q')", "('“', 'I')", "('B', 'u')", "('Ĉ', 'i')", "('æ', '’')", '(\'.\', \'"\')', "('“', '–')", "('ě', 'l')", "('u', 'ć')", "('1', 's')", "('„', 'p')", "('-', '2')", "('a', '–')", "(' ', '{')", "('G', 'G')", "('`', 'S')", "('á', 'a')", "('E', 'y')", "('C', 'è')", "('h', 'ā')", '(\'G\', "\'")', "('ž', 'ļ')", "('w', 'M')", "('r', 'ĉ')", "('r', '/')", "(' ', 'è')", "('ż', 'a')", "('8', 'D')", "('ø', 's')", "('M', 'ö')", "('l', 'â')", "('n', 'L')", "('ŝ', ',')", "('y', '6')", "('n', 'ģ')", "(' ', 'ő')", '(\'t\', "\'")', "('ú', ';')", "('ì', 'n')", "('ř', 'v')", "('y', 'F')", "('C', ']')", "('s', 'œ')", "('k', 'T')", "('-', 'ĉ')", "('K', 'ē')", "('c', 'ę')", "('h', 'D')", '("\'", \'A\')', "('í', 'ť')", "('a', 'M')", "('g', 'ö')", "('o', 'M')", "('c', '%')", "('}', 'd')", "('x', 'T')", "('ē', 'l')", '(\'T\', \'"\')', "('(', '`')", "('A', 'K')", "('P', 'P')", "('H', 'O')", "('ý', 'š')", '("\'", \'L\')', "('»', 'a')", "('/', 'H')", "('F', 'å')", "('û', 't')", "('`', 'Y')", "('b', 'B')", "('v', 'ó')", "('I', ':')", "('L', 'D')", '(\'>\', "\'")', "(' ', '+')", '(\'"\', \'L\')', "('ā', '“')", "('f', 'ě')", "('7', '8')", "('E', 'H')", "('i', 'ĝ')", "('.', '2')", "('’', 'r')", "('r', 'ł')", "('v', '[')", "('3', '0')", "('4', 'f')", "('e', 'ř')", "('F', 'ä')", "('»', '!')", "('ē', 'ķ')", "('n', 'è')", "('{', '{')", "('o', '”')", "('p', 'L')", "('u', 'ł')", "('/', 'u')", "('r', 'ū')", "('p', 'N')", "('ż', 'e')", "('U', 'S')", "('!', 's')", "('C', 'ã')", "('é', 'e')", "('g', 'F')", "(';', 'l')", "('ž', 'p')", '(\'"\', \'R\')', "('a', '>')", "('R', 'É')", "('\\xa0', '…')", "(' ', 'œ')", "('ã', 'e')", "('d', 'í')", "('b', 'ò')", "(']', '(')", "('n', 'í')", "('v', '⌉')", "('!', ')')", "('Z', 't')", "('!', 'h')", '(\'"\', \'y\')', "('-', 'K')", "('Ž', 'h')", "('æ', 'i')", '(\'ó\', \'"\')', "('-', 'x')", "('e', '_')", "('b', 'ó')", "('b', 'ā')", "('ä', '§')", "('ń', 't')", "('ś', '?')", "('%', ',')", "('c', 'ā')", "('ļ', ' ')", "('\\xa0', 'Á')", "('ř', 'h')", "('Z', 'X')", "('ů', '⌈')", '("\'", \'H\')', "('G', 'ô')", "('t', 'Š')", "('ŭ', 'l')", "('ĉ', 'o')", "('p', '`')", "('ĝ', 'p')", "('þ', ';')", "('S', 'B')", "(';', 'r')", "('5', '.')", "('⌈', 'N')", "('*', 'i')", "('n', 'æ')", "('Ż', 'ą')", "('c', 'I')", "('J', 'z')", "('Š', 'l')", "('v', '/')", "('L', 'h')", "('s', 'û')", "('ò', 'v')", "('`', '%')", "('ý', 'm')", "(' ', ']')", "('<', '3')", "('ß', 'm')", "('P', '=')", "('.', '?')", "('m', 'č')", "('J', 'ó')", "('B', 'ū')", "('b', 'æ')", "('è', ')')", "('C', 'ī')", "('t', '⌈')", "('Ŝ', 't')", "('u', 'I')", "('R', 'K')", "('_', 'n')", "('à', 's')", "('W', 'V')", "('(', 'X')", '("\'", \'s\')', '("\'", \'À\')', "('E', 'K')", "('ł', 'ć')", "('A', '4')", "('=', '{')", "('&', 'f')", "('J', 'n')", "('6', 'k')", "('o', 'í')", "('ī', '.')", "('a', 'ò')", "('!', '”')", "('ø', 'g')", "('K', 'b')", "('L', 'e')", "('W', 'r')", "('l', ';')", "('Š', 'e')", "('U', 'n')", "('V', 'r')", "('l', '>')", "('0', 'A')", "('J', '4')", "('!', 'd')", "('ū', 'j')", "('ź', 'l')", "('i', 'E')", "('ç', 'ó')", "('c', 'í')", "('Ū', 'p')", "('ď', '.')", "('ã', '.')", "('o', 'ö')", "('“', 'H')", "('T', 'F')", "('.', ':')", "('Q', '³')", "('e', 'ú')", "('A', 'N')", "('\\xa0', 'š')", "('Í', 'r')", "('.', 'W')", "('Ö', 'p')", "('r', 'ń')", "('š', 'l')", "('L', 'T')", "('f', 'þ')", "('H', 'T')", "('a', 'î')", "('r', '>')", '("\'", \':\')', "('×', 'a')", "('\\\\', '*')", '(\'e\', "\'")', "('\\xa0', 'u')", "(',', 'j')", "('P', 'E')", "('ò', 'k')", "('`', 'E')", "('u', 'ź')", "('.', '}')", "('-', ' ')", "('í', 'ů')", "('ú', 'o')", "('u', 'ď')", "('t', 'M')", "('q', '(')", "('—', ';')", "('V', 'ī')", "('o', '[')", "('ī', 't')", "('F', 'O')", "(' ', '3')", "('D', 'u')", "('ê', 'l')", "('\\xa0', 'É')", "('ć', 'd')", "('!', 'f')", "('?', 'K')", "('r', 'D')", "('V', 'D')", "('ò', 't')", "('i', 'ś')", "('`', ':')", "('*', 'S')", "('_', 'h')", "('>', 'y')", "('K', 'o')", "('ó', '⌉')", "('页', '面')", "('ò', '?')", "('q', '.')", "('e', '.')", "('\\xa0', 'ř')", "('<', 'e')", "('e', 'U')", "('9', 'h')", "('r', 'ņ')", "('m', 'ã')", "('S', 'Y')", "('Z', 'o')", "('b', 'ê')", "('z', ')')", "(',', 'v')", "('4', 'D')", "('č', '!')", "('a', '9')", "('S', 'y')", "('B', 'B')", "('=', '5')", "('y', '§')", "(' ', '„')", "('Ļ', 'a')", "('s', 'H')", "(',', '!')", "('n', 'á')", "('L', 'ū')", "('U', 'k')", "('e', 'V')", "('N', 'D')", "('u', 'ņ')", "('b', 'ň')", "('n', 'î')", "('Ĉ', 'e')", "(' ', '9')", "('s', 'S')", "('2', '.')", "('e', 'C')", "('o', 'W')", '(\'#\', \'"\')', "('Ȝ', 'a')", '(\'í\', "\'")', "('Å', 'h')", "('ȝ', 'e')", "('h', '}')", "('v', '5')", "(' ', 'ā')", "(';', ',')", "('ŝ', 'k')", "('.', 'y')", "('æ', 'l')", "('s', 'ĉ')", "('_', 'k')", "('’', '”')", '(\'`\', \'"\')', "('H', 'b')", '(\'(\', \'"\')', "('E', 'O')", "('m', '⌉')", "(' ', 'W')", "('F', 'r')", "('-', 'Ŝ')", "('Š', 'ó')", "('o', 'R')", "('»', 'E')", "('ȝ', 'b')", "('<', 'y')", "('ř', 'a')", "('o', 'î')", "('j', 'ø')", "('»', 'A')", "('\\u202f', 'c')", '(\'"\', \'l\')', "('«', 'å')", "('„', '⌈')", "('>', 'h')", "('r', 'æ')", "('ï', 't')", "('*', 'B')", "('n', 'E')", "('ē', '.')", "('v', '-')", "('þ', 'm')", "('d', 'î')", "('i', 'í')", "('C', ';')", "('ě', '.')", "('N', 'U')", "('w', '}')", "('l', 'ū')", "('I', 's')", "('P', 'f')", "('c', '3')", "('⌉', '?')", "('l', '\\xa0')", "('a', 'T')", "('F', 'A')", "('ě', ',')", "(')', 'w')", "('G', 'é')", "('o', '}')", "('d', '0')", "('b', 'ł')", "('o', 'ź')", "('p', '*')", "('x', '_')", "('a', '*')", "('a', 'ņ')", "('B', 'ò')", "('.', 'd')", "(')', '\\\\')", "('f', 'é')", "('m', 'ř')", "('h', 'õ')", "('R', '.')", "('[', 'J')", "('m', 'M')", "('{', '2')", "('k', 'ŝ')", "('?', '–')", "('`', 'H')", "('l', 'ø')", "('ě', '-')", "('n', 'F')", "('s', '|')", "('ß', '”')", "('å', 'd')", "(',', 'p')", "('B', 'â')", "('C', ' ')", "('»', 's')", "(']', 'g')", "('s', ')')", "('#', 'D')", "('Y', '-')", "('a', 'O')", "('A', 'x')", "('â', 'l')", "('ī', 'h')", "('ů', 'j')", "('e', '”')", "('t', 'ą')", "('l', 'ś')", "(' ', 'Ë')", "('T', 'b')", "('X', '0')", "('„', 'n')", "('ſ', 'g')", "('H', 'I')", "('s', 'C')", "(' ', 'Ä')", "('*', 'd')", "('l', 'þ')", "('W', 't')", "('s', 'ň')", "('_', 'a')", "('n', '*')", "('í', ' ')", "('E', 'ļ')", "('Z', 'r')", "('h', '–')", "('ï', 'l')", "('Å', 's')", "('O', '!')", "('z', 'ś')", "('n', 'M')", "('O', 'F')", "('J', 'ï')", "('#', '1')", "('*', 'r')", "('n', 'â')", "('`', '$')", "('Y', 'A')", "('I', 'U')", "('6', '}')", '("\'", \'/\')', "('D', ',')", "('u', 'ĥ')", "('u', 'B')", "('e', '2')", "('-', 'Ĉ')", "('(', 'A')", "('–', 'a')", "('g', 'ú')", "('`', 'g')", "('»', 'Ä')", "('‘', 'L')", "('?', '[')", "('r', '`')", "('ŝ', 'ĥ')", "('#', 'w')", "('r', '+')", "('T', '>')", "('Ú', 'm')", "('Z', 'E')", '(\'"\', \'+\')', "('这', '里')", "('9', ' ')", "('Ú', 'z')", "('P', 'ů')", "('ò', 'b')", "('h', 'á')", "('û', 'm')", "('P', 'ī')", "('«', 'a')", "('k', '=')", "('+', '=')", "('L', '2')", "('(', 'b')", "('$', 'F')", "('n', '⌉')", "('h', 'C')", "('t', 'â')", "('ī', 'ž')", "('ř', 'k')", "('Y', 'f')", "('_', 'S')", "('E', 'C')", "('q', ']')", "('3', 'T')", "('\\xa0', 'Š')", "('ó', 'ż')", "('a', '_')", "(':', 'S')", "('ż', 't')", "('ą', 'k')", "('R', 'F')", "('n', 'K')", "('<', 'q')", "('3', 'B')", "('>', '{')", "('C', 'a')", "('N', ':')", "('ä', 'g')", "('«', 's')", "('0', 'B')", "(' ', 'Í')", "('\\xa0', 't')", "('i', '?')", "('X', 'T')", '(\'’\', \'"\')', "('(', 'Š')", "('ú', 'b')", "('Á', 'p')", "('>', 'b')", "('e', '?')", "('o', 'č')", "('H', '.')", "('“', 'i')", "('U', 'r')", "('A', '_')", "('e', 'ſ')", '(\'S\', "\'")', "('\\\\', '0')", "('å', 's')", "('\\\\', 'D')", "('S', 'I')", "('Þ', 'o')", "('ä', 'x')", "('Þ', 'a')", "('n', '$')", "('m', 'ä')", "('y', '*')", "('T', 'Z')", "('è', 'o')", "('ž', 'š')", "('*', '2')", "('&', 'v')", "('l', 'û')", "(';', '|')", "('!', 'o')", "('_', '$')", "('ó', 'ř')", "('c', ':')", "('è', 'h')", '(\'Y\', \'"\')', "('Y', 'H')", "('ģ', 'ē')", "('w', 'A')", "('n', 'ø')", "('I', 'E')", "('r', '\\xa0')", "('1', '}')", "('A', '0')", "('O', 's')", "('á', 'l')", "(':', '\\u202f')", "('ĥ', 'j')", "('š', 'o')", "('“', 'Q')", "('&', 'i')", "('o', 'ż')", "('l', 'ē')", "('ē', ',')", "('G', 'ø')", "('á', 'ž')", "('p', ';')", "('P', 'ú')", "('Y', 'R')", "('é', 'ž')", "('=', '3')", "('Ŝ', 'u')", "('j', ':')", "('ú', 'j')", "('T', 'è')", "('j', 'è')", "('d', '*')", "('.', 'T')", "('R', 'G')", "('m', 'é')", "(']', ':')", "('U', 'C')", "('T', 'ü')", "('y', '\\xa0')", "('t', 'K')", "('O', 'c')", "(';', 'O')", "('ö', '!')", "('X', ',')", "('[', '&')", "('\\t', ' ')", "('é', '⌉')", "('R', 'ó')", "('2', '>')", "('T', 'ý')", "('z', '?')", "('P', 'S')", "('I', 'r')", "('c', 'ī')", "('u', 'ĝ')", "('K', 'i')", "('h', ':')", "('ú', 'ž')", "('a', '’')", "('ř', '?')", "(':', 'B')", "(' ', '1')", "('*', '(')", "('.', '_')", "('é', '.')", "('l', '?')", "('C', 'Y')", "('Ö', 's')", "('ń', 'c')", "('ñ', 'o')", "('Z', 'ö')", "('l', '(')", "('ķ', 'ī')", "('T', 'i')", '(\' \', \'"\')', "('ī', ':')", "('G', 'ö')", "('P', 'y')", "('ó', 'g')", "('h', '$')", '(\'"\', \'h\')', "('G', 'ū')", "('i', 'ļ')", "('-', 'h')", "('X', '-')", "('e', 'ñ')", "('á', 's')", "('{', 'i')", "('t', 'ä')", "('$', 'c')", "('V', 'ä')", "('3', 'o')", "('Ç', 'Õ')", "('~', 'G')", "('A', 'ï')", "('o', 'ë')", "('š', 's')", "(':', 'D')", "('é', 's')", "('7', '6')", "('L', 'ú')", "('}', 'p')", "('#', '{')", "('R', 'J')", "('x', ']')", "('D', ')')", "('ň', ':')", "('#', 'S')", "('D', 'T')", "('Ĥ', 'e')", "('n', ')')", "('0', ']')", "('K', 'a')", "('>', 'k')", "('\\xa0', 'B')", "(']', ';')", "('e', 'A')", "('s', 'ó')", "('1', '>')", "('j', '»')", "('w', 'C')", "('4', '3')", "('ĥ', 'o')", "('“', 'Y')", "('0', '*')", "('è', '.')", "('u', 'M')", "('Č', 'i')", "('s', '/')", "('“', '?')", "('ę', 'ż')", "('W', 'C')", "('r', 'ü')", '("\'", \'i\')', "('’', 'a')", "('y', 'č')", "('Ä', ' ')", '(\'"\', \'d\')', "('F', 'ø')", '("\'", \'u\')', "('y', 'N')", "(']', '<')", "('y', 'L')", "('o', 'þ')", "('M', 'Z')", "(':', 'i')", "('ů', 'l')", "('p', '/')", "('b', 'ě')", "('s', 'E')", "('ļ', 'n')", "('S', 'A')", "('x', '!')", "('h', 'P')", "('ę', 'n')", "('g', '’')", "('r', 'å')", "('g', 'ļ')", "('a', 'č')", "('e', 'è')", "('*', '*')", "('-', 'A')", "('Ś', 'c')", "('^', '(')", "('✘', ']')", "('J', 'ū')", "('t', 'ì')", "('à', ']')", "('Z', 'y')", "('=', 'c')", "('E', '5')", "('S', 'è')", "('S', 'U')", "('B', 'ë')", "('O', '_')", "(')', 'u')", "('M', 'ą')", "('ś', 'w')", "('t', 'G')", "('x', 'í')", "('ü', 'e')", "('A', 'ā')", "('»', 'Ö')", "(',', 'o')", "('š', 'c')", '(\'é\', "\'")', "('Z', ']')", "('i', '-')", "(' ', 'Ř')", "('D', 'ū')", "('æ', 'm')", "('Y', 't')", '("\'", \'>\')', "('b', '\\\\')", "('a', 'í')", "('p', 'ó')", "('è', 'v')", "('c', '.')", "('ď', 's')", "('U', 'h')", "('ł', ':')", "(' ', 'È')", "('ò', ':')", "('ļ', '?')", "('ň', ';')", "('ř', '.')", "('u', 'á')", "('\\t', 'i')", "('3', ']')", "('<', 'c')", "('å', ':')", "(')', '.')", "('L', '0')", "('?', '.')", "('o', 'ň')", "('u', '-')", "('ì', 's')", "('l', '_')", "('»', 'I')", "('f', 'è')", "('G', 'í')", "('S', 't')", "('Ī', 'L')", "('k', 'í')", "('2', '8')", "('ū', 'd')", "('ż', 'c')", "('š', ')')", "('í', 'm')", "('c', '2')", "('p', 'é')", "('A', '!')", "('}', '2')", "('M', 'L')", "('ö', ';')", "('D', ';')", "('/', '>')", "('ò', 'g')", "('č', 'm')", "('{', 'p')", "('⌈', 'f')", "('_', 'j')", "('6', 'D')", "('…', '⌉')", "('ſ', 'ſ')", "('.', 'I')", "('p', 'ļ')", "('i', '!')", "('l', 'J')", "('ł', '?')", "('å', ' ')", "('*', '4')", "('u', '(')", "('P', 'I')", "('Ĝ', 'u')", '(\'_\', "\'")', "('u', 'ó')", "('B', 't')", "('C', ':')", "('u', '⌉')", "('`', 'U')", "('t', '…')", "('q', 'ü')", "('5', '/')", "('R', 'R')", "('&', 'a')", "('í', 'ň')", "('ô', ',')", "('þ', 'w')", "('(', 'O')", "('ï', 'm')", "('D', 'e')", "('6', '2')", "('Ç', 'w')", "('Ř', 'í')", "('3', 'J')", "('i', '{')", "('“', 'p')", "('-', 'Ĥ')", "('V', '=')", "('_', '\\\\')", "('I', '-')", "('M', 'è')", "('»', 'R')", "('e', 'ü')", "('t', 'ú')", "('U', 'u')", "('i', 'õ')", "('h', '⌉')", "('á', ']')", "('p', 'ø')", "('ĥ', ';')", "(' ', 'à')", "('I', 'R')", "('G', 't')", "('m', 'ę')", "('ą', 'g')", "('v', '2')", "('f', ']')", "('3', ':')", "('-', 'a')", "('ü', '.')", "('\\u202f', 'R')", "('}', 'D')", "('2', 'M')", "('-', 'E')", "('ê', 'm')", "('2', '/')", "('y', 'B')", "('ó', ';')", "('ę', '!')", "('d', 'ē')", "('e', '!')", "('m', 'A')", "('p', '>')", "('n', ',')", "('`', 'G')", "('F', 'w')", "('q', '3')", "('M', 'S')", "('ã', '-')", "('\\\\', 't')", "('ö', 'ß')", "('n', '»')", "('ß', 'c')", "('é', '”')", "('6', ' ')", "('Ž', 'ē')", "('S', 'e')", "('2', '*')", "('L', ',')", "('p', '?')", "('L', 'Z')", "('!', '(')", "('V', 'u')", '(\'"\', \'Â\')', "(',', '-')", "('M', 'j')", "('B', 'ł')", "('y', '2')", "('v', ')')", "('ą', 'ż')", "('y', 'ſ')", "('H', 'B')", "('\\u202f', 't')", "(' ', 'Ū')", "('ż', 'ę')", "('p', 'F')", "('b', '>')", "('z', 'á')", "('Z', 'n')", "('”', '–')", "(' ', 'C')", "('ó', 'n')", "('F', 'U')", "('á', '-')", "('»', 'V')", "('A', 'Y')", "('»', 'b')", "('_', '.')", "('«', 'M')", '(\'"\', \'c\')', "('+', ' ')", "('f', '2')", "('è', 'g')", "('o', 'ž')", "('M', 'u')", "(' ', '$')", "('r', 'E')", "('t', 'õ')", "('á', 'x')", "('i', 'þ')", "('ü', 'd')", "(' ', 'č')", "('W', 'e')", "('h', 'ů')", "('y', 'I')", "('2', ',')", "('d', 'ü')", "('J', 'U')", "('h', 'î')", "('O', 'j')", '(\'"\', \'”\')', "('{', 'F')", "('.', 'q')", "('v', 'č')", "('的', 'M')", "('N', 'K')", "('ť', '?')", "('o', '`')", "('S', 'l')", "('l', '3')", "('-', '1')", "('D', 'r')", "('*', '7')", "(',', 'u')", "('č', 'ň')", "('ū', 'n')", "('‘', 'F')", "('ó', 'a')", "('3', '8')", "('y', ';')", "('I', ';')", "('Ú', 'd')", "('t', 'E')", "('h', '/')", "('š', 'p')", "('u', 'ř')", "('-', 'F')", '("\'", "\'")', "('á', '\\xa0')", "('á', 'ď')", "('ś', ' ')", "('«', 'b')", "('ń', 'w')", "('ň', '!')", "('R', 'ą')", "('M', 'T')", "(':', '\\xa0')", "('i', 'Y')", "('[', '1')", "('V', 'č')", "('ś', ';')", "('þ', 'i')", "('E', 'X')", "('⌈', 'I')", "('S', 'ů')", "('S', 'ķ')", "('ř', 't')", "('F', 'i')", "('⌈', 'M')", "('E', 'i')", "('n', 'ſ')", "('*', '8')", "('«', 'ø')", "('\\xa0', '⌈')", "('ĥ', 'p')", "('C', 'y')", "('e', 'õ')", "('V', 'M')", "('O', 'V')", "('E', 'ĥ')", "(',', '“')", "('2', 'r')", "('t', '�')", "('é', 'ň')", "('T', 'J')", "('z', 'ķ')", "('e', 'å')", "('e', 'H')", "('#', '[')", "('ã', ')')", "('A', 'A')", "('Ž', 'a')", "('x', '…')", "('!', '“')", "('B', 'l')", "('Å', 'n')", '("\'", \'l\')', "(']', '.')", "('Ž', 'e')", "('Ø', 'k')", "('–', ' ')", "('e', 'ł')", "('t', 'ņ')", "('L', 'E')", "('z', 'é')", "('-', 'B')", "(',', 'm')", "('B', 'S')", "(' ', ';')", "('«', 'I')", "('R', 'B')", "('–', 'í')", "(':', 'v')", "('i', 'ņ')", "('m', 'V')", "('š', 'ļ')", "('I', 'S')", "('W', 'I')", "('a', '—')", "('ģ', 'e')", "('a', 'ē')", "('d', ']')", "('å', 'h')", "('R', 'ę')", "(' ', '*')", "('f', '3')", "('i', '⌉')", "('a', 'I')", "('`', 'O')", "(';', '.')", "('W', 'N')", "('E', 'p')", "('s', 'ā')", "('b', '”')", "('.', '”')", "('p', '⌉')", "('k', ':')", "('“', ';')", "('ď', '!')", "('ß', 'v')", "('`', '/')", "('a', 'ã')", "('D', 'I')", "('*', 'p')", "('h', 'Y')", "('Ú', 's')", "('Ó', 'g')", "('Y', 'J')", "('L', 's')", "('c', '=')", "('M', 'ê')", "('$', 'a')", "(']', 'i')", "('.', 'U')", "('í', '\\xa0')", "('5', '6')", "('G', 'ò')", "('K', 'y')", "('ģ', 'ļ')", "('þ', 'r')", "('E', 'o')", "('H', 'ū')", "('„', 'T')", "('i', '–')", "(':', 'G')", "('[', '0')", "('ø', 'u')", "('O', 'o')", "('.', 'k')", "('n', 'ž')", "('ď', 'm')", "('U', ':')", "('D', 'ó')", "('k', 'ž')", "('—', 'o')", "('h', 'ï')", "('[', 'z')", "('\\xa0', ';')", "('ē', 'c')", "('d', '=')", "('ň', '⌉')", "('ē', 'ģ')", "('_', 'o')", '(\'n\', "\'")', "('O', 'u')", "('ö', 's')", "('h', '?')", "('í', '[')", "('H', 'â')", "('ò', 'c')", "('n', 'I')", "(' ', 'Ĥ')", "('V', '0')", '(\'Z\', \'"\')', '(\'D\', \'"\')', "('(', 'j')", "('⌈', 'b')", "('x', '7')", "('ř', '!')", "('v', 'é')", "('a', 'ú')", '(\'A\', \'"\')', "('3', 'a')", "('<', 'E')", "('Ē', 'n')", "('-', 'Á')", "('d', 'G')", "('U', 'P')", "('F', 'F')", "('+', 'f')", "('ī', 'm')", "('-', '}')", "('[', 'k')", "('ů', ']')", "('a', 'ź')", "('ě', 'b')", "('3', ' ')", "('u', '.')", "('æ', 's')", "('„', 'I')", "('m', ',')", "('P', 'A')", "('=', '>')", "('G', 'E')", "('H', 't')", "('M', 'U')", "(':', '„')", "('r', '3')", "('\\t', 'b')", "('u', '»')", "('ą', 'm')", "('A', ';')", "('L', 'n')", "('ū', 'ķ')", "('ý', 'r')", "('m', ';')", "('_', 'F')", "('N', 'ē')", "('0', '4')", '(\'"\', \',\')', "('!', 'n')", "('W', 'a')", "('⌈', 'ř')", "('ň', 'k')", '("\'", \'k\')', "('(', 'Ĉ')", "('*', 'e')", "('ê', ':')", "('U', 'y')", "(':', 'n')", "('”', 'J')", "('ï', ' ')", "('i', 'A')", "('è', 'c')", "('O', 'G')", "('O', 't')", "('E', 'ŝ')", "('u', '?')", "('ŝ', ')')", "('*', 'o')", "('k', 'C')", "('F', '-')", "('D', '_')", "('ł', 't')", "('V', 'š')", "('à', ' ')", "('W', 'W')", "('e', ',')", "('p', '!')", "('Š', 't')", "('!', 'P')", "('à', 'q')", "('ā', '(')", "('«', 'N')", "('O', ')')", "('E', ' ')", "('»', 'o')", "('l', 'O')", "('ä', 'o')", "('(', '|')", "('l', 'è')", '(\'c\', \'"\')', "('*', 'P')", "('Ó', 'n')", "('S', 'j')", "('.', 'é')", "('7', '3')", "('Þ', 'e')", "('L', 'u')", "('z', 'E')", "('G', 'å')", "('\\xa0', 'J')", "('„', 'B')", "(':', '0')", "('ù', ',')", '("\'", \'J\')', "('r', 'J')", "('T', 'a')", "('0', 'C')", "('\\\\', 'c')", "(']', ' ')", "('m', '_')", "('D', 'í')", "('«', 'D')", "('ŝ', 'p')", "('(', 'ä')", "('—', ':')", "('F', ' ')", "(' ', 'ż')", "('+', '0')", "('⌈', 'L')", "('9', 'p')", "('ę', 'k')", "('Ŝ', 'i')", "('s', '_')", '(\'M\', \'"\')', "('e', '⌉')", "('»', 'ö')", "(' ', 'Þ')", "('F', 'S')", "('h', 'ä')", "('D', 'ê')", "('Q', 'i')", "('L', 'ä')", "('d', 'C')", "(' ', 'Î')", "('e', 'Š')", "(',', '…')", "('z', 'í')", "('a', '<')", "(')', 'c')", "(' ', '(')", '("\'", \'Ö\')', "('d', ':')", "('K', 'S')", "('_', '|')", "('ö', 'o')", "('P', 'ę')", "('o', 'S')", "('o', '–')", "('E', '6')", "('d', '<')", "('e', '<')", "('(', 'Ē')", "('>', 'l')", "('G', 'U')", "('-', 'b')", "('`', 'R')", "('y', '>')", "('(', 'D')", '("\'", \'#\')', '(\'"\', \';\')', "('Ż', 'n')", "('N', 'v')", "(';', 'i')", "(',', 'k')", "('%', '>')", "('b', '_')", "('⌈', 'J')", "('n', 'û')", "('d', '中')", "('u', 'X')", "('g', 'å')", "('\\t', '-')", "('Z', 'i')", "('ŝ', 'u')", "('L', 'ę')", "('q', '>')", "('č', 'á')", "('D', 'A')", "('V', 'å')", "('Ã', 'E')", "('c', 'â')", '("\'", \'x\')', "('L', 'K')", "('o', '\\xa0')", "('s', '&')", "('P', 'm')", "('S', ')')", '(\'P\', "\'")', "('ü', 'h')", '(\'"\', \'9\')', "('f', '`')", "('h', '|')", "('„', 'Ē')", "('6', 'I')", "('Ž', 'r')", "('»', 'Å')", "('š', '–')", "('É', 'r')", "('ž', 'k')", "('r', 'í')", "('è', ':')", "('ž', 't')", "('l', 'U')", "('i', 'ĉ')", "('u', 'ť')", "('ĥ', 'e')", "('B', 'K')", "('(', 'C')", "('m', 'î')", "('c', 'æ')", "('h', '5')", "('h', 'ú')", "('[', 'a')", "('8', '8')", '(\'<\', \'"\')', "(':', '<')", "('N', 'N')", "('p', 'á')", "('(', '0')", "('D', 'n')", "('R', 'á')", "('.', 'm')", "('9', '.')", "('D', 'B')", "('h', 'ž')", '(\'"\', \'_\')', "('m', 'ý')", "('J', 'i')", "('ŭ', '-')", "(' ', '”')", "('a', '.')", "('k', '’')", "('T', 'M')", "('l', '{')", "('«', 'H')", "('U', 'v')", '(\'"\', \'8\')', "('ú', 'g')", '(\'"\', \'b\')', "('á', 'š')", "('p', 'V')", "('n', '`')", "('M', 'ø')", "('(', '&')", "('.', 'F')", "('e', '}')", "('w', '(')", "('!', 'a')", "('u', 'â')", "('ȝ', 'a')", "('i', 'R')", "('D', 'Z')", "('Å', 'i')", "('注', '册')", "('1', 'F')", "('9', 'D')", '(\'G\', \'"\')', "('H', 'é')", '(\'r\', "\'")', "('á', 'e')", "('P', 'D')", "('4', 'b')", "('É', 'z')", "('ā', 'e')", "('p', 'Y')", "('S', 'ú')", "('M', 'é')", "('’', '»')", "('?', ' ')", "('í', 'a')", "('k', '“')", "('8', ';')", "('A', 'í')", "('G', '_')", "('Ø', 'v')", "('\\xad', 't')", "('K', 'ý')", "('ķ', 'ū')", "('N', 'í')", "('Ē', 'd')", "('1', '3')", "('g', 'ü')", "('N', ',')", "('H', '7')", "('/', '1')", "('-', 'S')", "('o', '-')", "('>', 'q')", "('\\xa0', 'a')", "('h', 'ū')", "('Y', 'n')", '(\'$\', "\'")', "('L', 'ø')", "('A', 'i')", "('y', '.')", "('a', ',')", "('+', '+')", "('g', 'þ')", "('t', '-')", "('E', 't')", "('N', ';')", "('⌈', 'E')", "('-', 'y')", "('x', ',')", "('N', 'ě')", "('–', 'ó')", "('2', 'T')", "('L', '_')", "('m', 'ô')", "('þ', 'þ')", "('8', '9')", "('s', 'T')", "(';', '\\\\')", "('«', '\\u202f')", "(')', '&')", "('F', 'C')", "('i', '»')", "('č', 'i')", "('6', 'E')", "('<', 'a')", "('A', 'H')", "(' ', ')')", "(' ', '⌉')", "('Ô', 't')", "('\\u202f', 'I')", "('ĝ', 'v')", "('v', '0')", "('4', 'd')", "('m', 'Q')", "('V', 'í')", "('T', 'ū')", "('(', 'ū')", "('k', 'M')", "('{', 'x')", "('9', '-')", "('P', 'T')", "('m', ':')", "('J', 'a')", "('Š', 'ú')", "('á', 'z')", "('0', 'x')", "('6', '-')", "('(', 't')", "('$', '#')", "('_', 'T')", "('D', 'N')", "('T', 'N')", "('→', ' ')", "('.', 'f')", "('F', '9')", "('f', 'ĵ')", "('4', ']')", "('i', 'ū')", "(' ', 'Ø')", "('(', '⌈')", '(\'N\', "\'")', "('_', 'N')", "('e', '+')", "('H', 'C')", "('e', 'ŭ')", "('X', ';')", "('H', ';')", "(']', '[')", "(')', '(')", "('A', 'W')", "('M', 'E')", "('X', ')')", "('X', 'V')", "('✔', ']')", "('S', 'ô')", "('.', 'n')", "('.', '{')", "('Y', ',')", "('‘', 'C')", "('⌈', 'z')", "('l', 'ť')", "('>', 'g')", "('ř', 's')", "('“', 'u')", "('E', 'a')", "('K', 'ů')", "(']', '}')", "('ä', 'r')", "('M', 'ū')", "('f', 'L')", '(\'-\', \'"\')', "('ȝ', ' ')", "('2', '_')", "('ļ', 'š')", "('Ö', 'k')", "(':', '[')", "('G', ' ')", "('[', ']')", '(\'i\', "\'")', '(\'"\', \'E\')', '(\'o\', \'"\')', "('M', 'ł')", '(\'"\', \'H\')', "('<', 'i')", "('K', 'ú')", "('í', 'w')", "('ž', ']')", "('X', 'J')", "('=', 'N')", "('N', '?')", "('|', '^')", "('T', 'ò')", "('c', 'U')", "('G', 'á')", "('č', 'u')", "('7', '4')", "('y', 'V')", "('ň', 'm')", "('[', 'c')", "('ĥ', 'u')", "('ń', ' ')", "('=', 't')", "('<', 'o')", "('O', 'w')", "('o', 'ď')", "('ý', '⌉')", "('}', ';')", "('u', 'ā')", "('I', '2')", "('-', 'P')", "('h', 'S')", "('á', '⌈')", "('.', 'E')", "('x', '8')", "('ó', 'r')", "('m', 'š')", "('f', 'ą')", "('’', 'S')", "('j', ',')", "('t', 'ô')", "('A', 'ĉ')", "('t', 'î')", "('b', 'ö')", "('a', ']')", "('U', 'ł')", "('Z', 'a')", "('`', 'N')", "('e', 'ç')", "('ô', 'g')", "('ģ', 'ī')", "('r', '“')", "('ø', '!')", "('-', 'Ā')", "('U', 'H')", "('`', ' ')", "('d', 'ň')", "('n', 'D')", "('[', '4')", "('Ó', '\\xa0')", "('D', 'p')", "('ķ', 'o')", "('P', 'r')", "('_', '`')", "('_', 'w')", "('6', 'F')", "('ö', 'b')", "('I', 'ſ')", "('E', 'W')", "(' ', 'Ś')", "('J', '0')", "('6', ',')", "('H', 'R')", "('R', 'W')", "('v', 'è')", "('t', 'P')", "('l', 'T')", "('è', 't')", "('v', 'ā')", "('X', ':')", "('«', 'd')", "('G', 'Y')", "('o', 'G')", "('8', '+')", "('$', 'S')", "('B', 'n')", "('j', 'ć')", "('I', 'q')", "('[', '}')", "('―', ' ')", "('c', '”')", "('[', '✘')", "('0', 'L')", "('D', 'F')", "('V', 'ó')", "('j', 'å')", "('&', 'E')", "('ó', 'ć')", "(':', 'e')", "('M', '.')", "('F', 'y')", "('u', '\\xa0')", "('Ĥ', 'i')", "('n', 'ü')", "('d', '’')", "('Z', 'ī')", "('%', 'c')", "('L', '!')", "('j', 'ř')", "('N', 'H')", "('P', 'U')", "('ď', ' ')", "('ç', 'e')", "('w', 'Q')", "('ā', 'u')", "('o', '2')", "('a', 'ë')", "('ę', 'ł')", "('U', ' ')", "('2', ')')", '(\'D\', "\'")', "('ž', 'i')", "('k', 'ò')", "('.', 'u')", "('ž', ' ')", "('o', 'ŝ')", "('ō', 'e')", "('*', 'c')", "('t', 'é')", "('ú', 'v')", "('ň', 'á')", "('.', '–')", "('\\\\', '.')", "('/', 'B')", "('6', 'm')", "('\\\\', 'o')", "('G', 'n')", "('“', 'v')", "(' ', '⌈')", "('7', '2')", "('`', 'u')", "('B', 'L')", "('Ø', 'r')", "('z', 'ž')", "('ê', '?')", "('a', 'ȝ')", "('L', 'z')", "('⌉', ']')", "('8', 'p')", "('>', 'R')", "('E', 'h')", "('S', 'H')", "('⌈', 'Ž')", "('ř', 'l')", "('ê', '!')", "('h', '-')", "('z', 'ň')", "('(', 'E')", "('Y', 'è')", "('b', ',')", "('Š', 'é')", "('l', '»')", "('z', 'õ')", "('V', 'ſ')", "('G', 'P')", "('ą', 'd')", "('g', '\\\\')", "('ü', 's')", "('»', 'N')", "('Z', 'H')", '(\'"\', \'$\')', "('ū', 'r')", "('1', ';')", "('á', 'ň')", "('ã', '!')", "('å', '»')", "('<', '!')", "('~', ' ')", "('«', 'Y')", "('T', 'ú')", "('ž', 's')", "('ž', 'č')", "('ß', 'b')", "('ĝ', 'f')", "(')', ':')", "(' ', 'í')", "('7', 'F')", "('a', ';')", "('â', 's')", "('i', '×')", "('á', 'g')", "('”', ' ')", "('E', 'þ')", "('Ĉ', 'I')", "('}', ' ')", "(']', 'o')", "('1', 'b')", "('x', '@')", "('ŭ', 'j')", "('i', 'ů')", '(\'"\', \'1\')', "('o', 'ĉ')", "('s', '’')", "('M', ' ')", "('.', 'B')", "('ó', 's')", "('r', '_')", "(';', '0')", "('@', 'g')", "('c', 'ê')", "('q', ')')", "('ȝ', 't')", '(\'"\', \'"\')', "(';', '}')", "(')', '<')", "('N', 'I')", "('Ĵ', 'u')", "('{', 'd')", "('ć', 'ż')", "('ø', ' ')", "(' ', 'L')", "('é', 'è')", "('/', 'g')", "('.', 'D')", "('ģ', 'u')", "('ę', 's')", "('ý', 'b')", "('D', '=')", "('-', 'H')", "('t', '<')", "(' ', 'T')", "('Y', 'T')", "('V', 'y')", "('@', '{')", "('O', 'č')", "('Y', 'h')", "(' ', '4')", '("\'", \'Ó\')', "('g', '?')", "('a', 'N')", "('k', 'A')", "('ž', 'h')", "('æ', 'r')", "('-', '=')", "('ż', 'y')", "('k', 'æ')", "('ś', 'u')", "('#', 'M')", "('O', 'I')", "('š', 'j')", "('E', ',')", "('ý', ',')", "('O', 'p')", "('X', 'i')", "('F', 'í')", "('7', '.')", "('\\xa0', '[')", "('\\u202f', 'Ô')", "('ø', '’')", "('g', '/')", "('g', '}')", "('A', 'm')", "('b', 'G')", "('>', 'M')", "('L', 'ā')", "('p', 'R')", "(']', '\\xa0')", "('M', 'W')", "('l', 'M')", "('»', 'v')", "('O', 'C')", "('L', 'ů')", "('N', 'J')", "('l', 'ņ')", "('O', 'f')", "('i', 'W')", "('M', 'n')", "('“', 'h')", "('X', 'g')", "('=', 'p')", "('r', '0')", "('ź', 'ń')", "('»', 'k')", '(\'[\', \'"\')', "('y', 'ö')", "('w', 'ż')", "('j', ')')", "('W', 'd')", "('ņ', 'r')", "('(', 'ā')", "('e', 'ģ')", "(' ', 'Ņ')", "('I', 'o')", "('(', '>')", "('»', 'H')", "('F', 'è')", "('m', 'ś')", "('d', 'ã')", "('[', '#')", "(',', '⌉')", "('“', 'S')", "('P', '/')", "('N', 'ö')", '(\'"\', \'P\')', "('m', '»')", "('.', '`')", "('Z', 'v')", "('r', '[')", "('W', 'p')", "('a', '(')", "('š', 'ā')", "('$', 'T')", "('o', 'å')", "(':', 'L')", "('x', ';')", "('Ķ', 'e')", "('x', ')')", '(\'p\', \'"\')', "('d', 'B')", "('W', 'u')", "('b', 'ř')", "('/', 'a')", "('k', 'č')", "('×', ' ')", "('1', 'U')", '("\'", \'ê\')', "(' ', 'À')", "('t', ',')", "('k', ')')", "('u', 'ą')", "('é', 'n')", "('ſ', 'o')", "('k', 'Q')", "('ſ', 'þ')", "('Ú', 'r')", "('m', '2')", "('[', 'ô')", "('«', 'P')", "('O', '\\xa0')", "('J', 'b')", "('z', 'N')", "('ä', 'v')", "('Å', 'l')", "('S', 'ę')", "('ß', ' ')", "('Ż', 'e')", "('0', '%')", '(\'"\', \'%\')', "('A', 'r')", "('W', 'ą')", "('9', ')')", "('è', 'r')", "('{', 'D')", "('E', 's')", "('ř', 'e')", "('E', 'c')", "(')', 'p')", "('í', 'b')", "('Ď', 'á')", "('P', 'v')", "('j', 'é')", "('r', ':')", "('Q', 'L')", "('U', 'ē')", "('„', 'm')", "('b', ':')", "('l', '1')", "('(', 'ż')", '(\'"\', \'2\')', "('V', 'e')", "('é', ',')", "('A', 'E')", "('y', 'ř')", "('T', 'e')", "('O', 'g')", "('\\u202f', 'à')", "('-', 'Y')", "('N', '[')", "('U', 'f')", "('ņ', 'ē')", "('L', ')')", "('t', '2')", "('5', '-')", "('Ö', 'v')", "('a', '@')", "('3', 'f')", '(\'e\', \'"\')', "('ø', '.')", "('ſ', 'r')", "('}', 'l')", "('R', 'k')", "('⌉', ' ')", "('Z', 'w')", "('t', 'ò')", "('|', 'g')", "('\\xa0', 'e')", "('>', 's')", "('x', ':')", "('I', 'p')", "('„', 'š')", "('ŭ', 'p')", "('o', ':')", "('ņ', 'u')", "('–', 'é')", "('ę', 'l')", "('J', 'ú')", "('E', 'm')", "(':', 'f')", "('ó', 'ł')", "('ź', ',')", "('7', 'c')", "('.', 's')", "('U', '!')", "('b', 'A')", "(' ', 'ś')", "('u', 'ö')", "('首', '页')", "('S', 'ø')", "('ã', ':')", "('a', 'F')", "('4', 'c')", "('/', ',')", "('b', '�')", "('e', 'X')", "('G', 'ä')", "('.', 'e')", "('&', 'r')", "('d', 'ú')", "('E', 'n')", "('G', 'R')", "('+', '3')", "('(', '{')", "('é', 'u')", "('J', 'O')", '(\'C\', "\'")', "('3', 'D')", "('O', '(')", "('ý', ' ')", "('t', 'Z')", "('>', ':')", "('/', '#')", "('q', 'D')", "('ż', 'l')", "('ä', '?')", "('ě', '!')", "('ď', 'á')", "('\\xa0', '„')", "('o', 'ß')", "('H', 'ř')", "('ĉ', 'a')", "('1', 'm')", "('M', 'B')", "('{', ']')", "('d', '»')", "('Ó', 'm')", "('d', '\\xa0')", "('7', ']')", "('Ú', 't')", "('2', 't')", "('[', 'T')", "('K', 'j')", "('p', '{')", "('K', 'á')", "('r', 'ē')", "(']', '*')", "('`', 'V')", "('b', '-')", "('K', 'N')", "('2', '0')", "('?', 'q')", "('⌉', '⌉')", "('’', ' ')", "('Z', 'W')", "('u', '{')", "('s', 'O')", "('V', 'é')", "('ï', 'r')", "('Ć', 'w')", "('Õ', 'E')", "('O', 'ù')", "('5', 's')", "('5', '4')", "('K', 'I')", "('.', 'H')", '(\'"\', \'Q\')', "('ſ', 'n')", "('R', 'N')", "('ä', 'p')", "('ã', '?')", "('{', 'P')", "('n', 'ȝ')", '(\',\', \'"\')', "('Ž', 'á')", "('%', ')')", "('ü', 'm')", "('X', 'L')", "('a', 'ķ')", "('þ', 'y')", "('r', '!')", "('…', '“')", "('ā', 'b')", "('ć', 'w')", "('G', '9')", "('z', 'ú')", "('`', 'c')", "('î', 'o')", "('n', 'ö')", "('ú', 'p')", "('=', 'm')", "('g', ')')", "('⌈', 'i')", "('B', 'j')", "('A', 'Ç')", "('_', 'W')", "('N', '=')", "('O', 'h')", "('ĥ', 'z')", '(\'"\', \'É\')', "('ž', 'ů')", "('=', '7')", "('u', ':')", "('a', 'è')", "('l', '⌈')", "('ř', ';')", "(' ', '&')", "('e', 'ļ')", "('G', 'e')", "('r', '-')", "('h', 'ę')", "('3', '_')", "('.', 'V')", "('ł', '.')", "('e', '*')", "('A', 'f')", "('}', '(')", "('ô', 'a')", "('É', 'c')", "('Y', 'k')", "('$', '{')", "('ž', '.')", "('N', 'e')", "('U', 'ſ')", "('O', 'D')", "('c', 'ó')", "('ż', 'ń')", "('y', '0')", '("\'", \'K\')', "('/', '2')", "('Í', 'n')", "('ö', 'i')", "('Æ', 'n')", "('m', 'ů')", "('K', 'w')", "('K', 's')", "('o', 'ć')", '(\'j\', \'"\')', "('y', 'M')", "(',', '(')", "(' ', '\\\\')", "(' ', '_')", "('z', ':')", "('M', 'm')", "('C', 'K')", "('d', '2')", "('Y', 'X')", "('A', 'o')", "('0', '2')", "('x', '1')", "(',', 'ž')", "('P', '<')", "('ó', 'f')", "('i', 'ß')", "('b', 'ü')", "('ď', 'u')", "('É', ',')", "('d', '!')", '(\'"\', \'I\')', "('\\xa0', 'O')", "('k', '!')", "('é', 'q')", "('-', '3')", '(\'"\', \'@\')', "('”', ',')", "('v', '“')", "('“', 'N')", "('o', 'ú')", "('w', '.')", "('E', 'u')", "('[', 'h')", "('n', 'ç')", "('v', 'ã')", "('c', 'á')", "('d', '…')", "('y', '<')", "('E', 'B')", "('B', ')')", "('î', 'r')", "('l', 'K')", "('a', 'é')", "('x', 'é')", "('V', 'C')", "('\\u202f', 'd')", "('K', 'A')", "('4', '_')", "('i', 'ď')", "('{', 'n')", "('-', 'v')", "('ú', 'k')", "('\\u202f', 'J')", "('[', '5')", "('Ĵ', 'O')", "('a', '2')", "('U', '\\xa0')", "('æ', 'u')", "('G', 'ú')", "('e', '’')", "('c', 'V')", "('ī', 'j')", "('I', '\\xa0')", "('ę', 'c')", "('\\xa0', 'k')", "('c', '(')", "('h', 'M')", "('C', 'C')", "('s', ';')", "('t', 'R')", "(' ', 'A')", "('p', 'ê')", "('i', ',')", "('ĉ', 'm')", "('r', 'S')", "('.', 'G')", "('R', 'U')", "('«', 'G')", "('ö', 'm')", '("\'", \'P\')', "('r', 'â')", "('0', 'ù')", "('ĥ', 't')", "('<', '=')", "('á', 'b')", "('V', 'd')", "('H', 'A')", "('ä', 'a')", "('9', '8')", "('ĥ', 'c')", "('\\u202f', 'H')", "('b', '–')", "('þ', 'p')", "('!', '?')", '(\'g\', "\'")', "('b', 'E')", "('ń', ';')", "('ö', 'e')", "('_', 'g')", "('W', 'M')", '(\'"\', \'<\')', "('p', '1')", "('ö', '»')", "('\\xa0', 'V')", "('R', ';')", "('E', '0')", "('ż', '.')", "('5', 'D')", "('A', 'ŭ')", "('á', '⌉')", "('È', 'v')", "('2', 'x')", "('U', 'A')", "('å', 'l')", "('7', 'D')", "('q', '0')", "('Ĉ', 'A')", "('„', 'v')", "('$', '/')", "('ž', 'v')", '(\'Q\', "\'")', "('«', 'Æ')", '(\'X\', "\'")', "('f', ';')", "('i', 'J')", "('\\xa0', 'Í')", "('ü', 'f')", "('w', 'I')", "('–', 'A')", "('n', 'U')", "(';', 'G')", "('Ë', 'd')", "('N', 'Z')", "('J', '8')", "('N', 'G')", "('T', 'ř')", "('þ', 'f')", "('y', 'ä')", "('n', '…')", "('`', 'T')", '(\'g\', \'"\')', "('ā', 'Š')", "('⌈', 'g')", "('`', 'P')", "('æ', ' ')", "('e', 'ž')", "('.', 'x')", "('ȝ', 'n')", "('\\xa0', 'G')", "('K', 'ū')", "('要', '在')", "('j', '<')", "('!', '-')", "('_', 'A')", "('`', '*')", "('/', 'Z')", "('y', 'C')", "('æ', 'v')", "('ó', '”')", "('I', 'i')", "('=', '$')", "('v', 'ý')", "('.', 'a')", "('f', 'æ')", "('’', '.')", "('»', 'O')", "('-', 'c')", "('|', ' ')", "(';', 'f')", "('0', '0')", "('s', 'D')", "(' ', 'ĵ')", "('I', '.')", "('\\\\', '(')", "('[', 'D')", "('=', '=')", "('á', 'k')", "('V', 'k')", "('L', 't')", "('\\u202f', 'e')", "('å', 'k')", "('B', ';')", "('X', 'O')", "('t', 'ö')", "('(', 's')", "('b', '[')", "('4', '+')", "('ý', '?')", "('z', '\\xa0')", "('S', 'w')", "('d', '{')", "('ą', 'z')", "('都', '要')", "('d', 'â')", "('d', 'ſ')", "('H', ' ')", "('ſ', 'i')", "('_', ',')", "('k', 'ý')", "('Å', '!')", "('p', 'ř')", "('H', 'ó')", "('m', '>')", "('g', 'à')", "('“', '.')", '(\':\', "\'")', "('<', '1')", "('š', '?')", "('S', 'ü')", "('ù', '.')", "('w', 'ą')", "('R', 'ò')", "('P', 'ē')", "('E', '*')", "('ē', '?')", "('ē', 't')", "('d', 'ź')", "('3', 'E')", "('Þ', 'u')", "('b', '<')", '(\'"\', \']\')', "('X', 'C')", "('f', 'ø')", "(' ', 'ŝ')", "('ä', 'ö')", "('ŝ', '-')", "('ā', ' ')", "('“', 'a')", "('H', 'ø')", "('u', '<')", "('!', '.')", "('⌈', 'a')", "('„', 'H')", "('t', 'B')", "('f', '=')", "('B', 'e')", "('i', 'G')", "('t', '\\\\')", "('P', 'ó')", "('Z', 'j')", "('<', '-')", '("\'", \'Z\')', "('`', '[')", "('!', '*')", "(' ', 'ź')", "('í', '⌉')", "('P', 'ô')", "('ĥ', '-')", "('g', 'í')", "('a', '6')", "('ć', '?')", "('é', 'v')", "('g', 'S')", "('K', '\\xa0')", "('k', 'K')", "('„', ']')", "('>', '>')", "('0', '[')", "('#', ' ')", "('‘', 'U')", "('è', 'l')", "('j', 'ò')", "('h', '=')", "('V', 'A')", "('ß', 'i')", "('j', 'š')", "('i', 'ĥ')", "('+', '2')", "('m', 'P')", "('z', '>')", "('B', 'c')", "('ē', ' ')", "('Å', ',')", "('(', 'Ö')", "('g', 'E')", "('ò', 'l')", "('s', 'á')", "('ú', '?')", "('f', 'ä')", "('@', '^')", "('i', ']')", "('o', '_')", "('R', 'v')", "('M', 'Ä')", "('ň', 'o')", "('H', '4')", "(':', ' ')", "('[', 'd')", "('ň', 'B')", "('>', 't')", "('\\xa0', 'E')", "(' ', '相')", "('`', 'Þ')", "('l', 'ý')", "('1', 'Z')", '(\'>\', \'"\')', "('2', 'u')", '(\'"\', \'0\')', "('Ņ', 'ē')", "(']', ',')", "('S', 'î')", "('`', 'n')", "('M', 'O')", "('ó', 'l')", "('ň', 'u')", "('ã', 'z')", "('h', 'K')", "('/', 'N')", "('1', '[')", "('è', 'd')", "('a', '1')", '(\'=\', \'"\')', "('G', 'ü')", "('k', '\\\\')", "('y', 'O')", "('u', '3')", '(\'E\', \'"\')', "('Á', 's')", "('ĥ', 'b')", "('<', 'f')", "('>', 'J')", "('š', ':')", "('f', '_')", "('B', 'E')", "('ū', 'ļ')", "('L', 'ó')", "('O', 'K')", "('⌉', '.')", "('(', 'ļ')", "('«', 'm')", "('á', 'v')", "('P', 'K')", "('–', 'g')", "('[', '6')", "('g', ';')", '(\'/\', \'"\')', "('u', 'ê')", "('&', 'p')", "('[', '~')", "('0', ' ')", "('s', 'è')", "('E', 'ŭ')", "('V', '.')", "('a', 'þ')", "('9', 'a')", "('ß', 'o')", "('A', '5')", "('P', 'â')", "('o', 'T')", "('t', 'ļ')", "('w', 'N')", "('e', 'ĥ')", "('2', '4')", '("\'", \'T\')', "('k', '(')", "('c', ';')", "('ě', 'm')", "('P', 'N')", "('L', 'a')", "('<', 't')", "('Ž', 'í')", "('y', '`')", "('„', 'k')", "('ū', 'š')", "('ł', ' ')", "('A', 'c')", "('“', 'J')", '(\'Y\', "\'")', "('þ', 't')", "('O', 'i')", "('O', 'a')", '("\'", \'.\')', "('n', 'ú')", "('b', '.')", "('ś', 'j')", "('\\u202f', 'G')", "('’', 'u')", "(':', 'K')", "('«', 'R')", "(')', 'm')", "('ĉ', 'i')", "('O', ':')", "('H', 'u')", "('1', ':')", "(')', ' ')", "('Z', '.')", "('#', 'l')", "('>', 'G')", "('Ņ', 'e')", '(\'"\', \'N\')', "('�', 'o')", "('c', '>')", "(' ', '`')", "(' ', '‘')", "('*', '>')", "('n', 'B')", "('[', 'U')", "('Q', 'v')", "('S', ',')", '(\'O\', \'"\')', "('?', ',')", '("\'", \'m\')', "('`', 'd')", "('ó', 'u')", "('É', 'q')", "('_', 'X')", '(\'"\', \'O\')', "('Ĉ', 'a')", "('w', 'U')", "('þ', 'n')", "('š', 't')", "('T', 'å')", "('o', 'ą')", "('Ī', 't')", "('R', 'h')", "('ż', 'ó')", "('[', 'à')", "('<', 'l')", "('»', '[')", "('č', 'g')", "('o', 'ſ')", "('ŝ', '.')", "('y', ',')", "('4', '5')", "('#', 'A')", "('e', 'J')", "('0', 'o')", "('“', 'o')", "('ę', ')')", "('E', '-')", "('5', '\\\\')", "('è', 'q')", "('y', 'ò')", "('V', 'I')", "('W', 'ò')", "('q', 'T')", "('ł', 'n')", "(')', '⌉')", "('è', 'p')", "('ś', ':')", "('\\xa0', 'F')", '("\'", \'V\')', "('s', 'ę')", "('§', ',')", "('\\u202f', 'Q')", "('6', '/')", "('e', 'O')", "('[', 'Z')", "('\\u202f', 'M')", "('-', 'ā')", "('j', '1')", "('Ä', 'i')", "('ŭ', 'm')", "('n', 'å')", "('i', '\\u202f')", "('E', 'b')", "('e', 'L')", "('b', 'ů')", "('T', 'ö')", "('ç', 'û')", '(\'z\', \'"\')', "('b', 'ż')", "('!', 'l')", "('C', 'R')", "('+', 'i')", "('„', 'Ž')", "('-', 'n')", "('à', '-')", "('z', '…')", "('\\\\', '`')", "('ą', ':')", "('S', ';')", "('c', 'ą')", "(',', '\\xa0')", "('d', 'ê')", '(\'"\', \' \')', "('D', 'V')", "('–', 'C')", "('⌉', '“')", "('(', 'Ā')", "('ú', 'č')", "('n', 'S')", "('r', 'Y')", "('S', 'K')", "(' ', '\\u202f')", '("\'", \'1\')', '(\'"\', \'M\')', "('(', 'š')", "('P', 'k')", "('`', 'h')", "(' ', 'E')", "('g', 'R')", '("\'", \'I\')', "('o', 'ť')", "('ł', 'z')", "('û', 'l')", "('_', 'Q')", "('[', '«')", "('E', '=')", "('e', 'ń')", "('ā', 'f')", "('2', '{')", "('W', 'R')", "('–', 'G')", "('ý', 'v')", "('.', 'M')", "('t', '@')", "('M', 'ü')", "(' ', 'N')", "('x', 'F')", "('ć', '!')", "('C', '/')", "('}', '/')", "('5', 'd')", "('A', 'V')", "('h', 'ſ')", "(' ', '#')", "(':', 'o')", "('Í', 't')", "('I', ',')", "('Ö', 'r')", "('l', '[')", "('É', 'g')", "('ú', ',')", "('m', 'E')", "('d', 'ě')", "('e', '0')", "('Ŝ', 'a')", "('9', '9')", "('G', 'p')", "('n', 'ý')", "('_', 'd')", "('l', 'ä')", "('ą', 'ś')", "('[', 'e')", "('S', 'ū')", "('&', '1')", "('M', 'K')", "('y', '»')", "('o', 'û')", "('@', 'b')", "(':', 'H')", "('M', 'ā')", "('l', 'F')", "('Z', 'ę')", "('m', 'ü')", "('Y', 'S')", "('⌈', 'c')", "('X', 'X')", "('Z', 'm')", "('Q', 'u')", "('U', 'd')", "('[', 'n')", "('3', ')')", "('s', 'ř')", "('n', '@')", "('!', 'C')", "(',', '`')", "('>', 'L')", "('ą', 't')", "('#', 'a')", "('’', 'k')", "('6', '.')", "('3', '4')", "('ê', 'c')", "('-', 't')", "('É', 'n')", "('V', 'l')", "('7', ';')", "('é', 'b')", "(',', '.')", "('d', 'E')", "('⌈', 'd')", "('ū', 'f')", "('H', 'K')", "('k', 'á')", "('m', 'ē')", "('(', 'N')", "('j', 'ú')", "('5', '_')", "('V', 'g')", "('O', 'b')", "('š', '⌉')", "('à', 'n')", "('G', 'm')", "('ĥ', 'a')", "('S', 'ã')", "('C', 'z')", "('G', 'H')", '(\'H\', "\'")', '(\'K\', \'"\')', "('ž', ',')", "('S', 'ł')", "('Š', 'ķ')", "('1', ',')", "('è', 'a')", "('T', '0')", "(',', '»')", "('S', 'o')", "('E', 'N')", "('I', 'D')", "('\\t', 'm')", "('ū', ' ')", "('w', 'ȝ')", "('ē', 'ž')", "('ü', ',')", "(')', 'š')", "('k', 'D')", "('A', 'a')", "('ø', 'y')", "('Ā', 'c')", "('_', 'I')", "(')', 'I')", "('ě', ')')", "('E', 'v')", "('A', 'y')", "('a', 'á')", "('E', 'U')", "('N', 'r')", "('g', 'æ')", "('ż', '!')", "('L', '/')", "('A', 'T')", "('[', 'I')", "('o', 'ä')", "('/', 'l')", "(':', 'x')", "('O', 'n')", "('P', 'Z')", "('`', ']')", "('Y', 'm')", "(' ', '“')", '(\'"\', \'*\')', "('l', ':')", "('-', 'i')", "('a', ':')", "('ņ', 'd')", "('»', 'D')", '(\'a\', \'"\')', "('r', 'U')", "('5', 'B')", "('u', '”')", "('N', 'ý')", "('C', 'p')", "('r', '}')", "('ȝ', '.')", "('h', '`')", "('ě', 't')", "('[', 'p')", "('y', '_')", "('*', ')')", "('H', 'a')", "('\\xa0', 'y')", "('r', 'P')", "('”', '!')", "(':', 'A')", "('s', 'J')", "('K', 'î')", "('à', ',')", "('A', 'ž')", "('a', 'ñ')", "('r', 'ú')", "('ņ', '?')", "('A', '(')", "('f', '.')", "('0', 'd')", "('k', '?')", "('8', '1')", "('H', 'L')", "('„', 'J')", "('ſ', 'u')", "('@', 'u')", "('k', '1')", "('p', ')')", "('t', '6')", '("\'", \'=\')', '(\'"\', "\'")', "('c', 'è')", "('ö', 'j')", "('\\xa0', 'ž')", "('ê', '-')", "('/', '5')", "('l', 'A')", "('a', '-')", "('u', 'ſ')", "('d', '@')", "('j', 'ą')", "('“', 'L')", "('{', ' ')", "('d', 'ö')", "('e', '>')", "('ï', 'n')", "('y', 'Ü')", "('C', 'h')", "('O', 'T')", "('D', '-')", "('`', 'Ȝ')", "('f', 'ö')", "('-', 'z')", "('Ā', 'z')", "('{', 'M')", "(']', '\\\\')", "('ī', 'e')", "('o', 'A')", "('>', 'r')", "('Y', 'E')", "('\\\\', 'T')", "('Á', 'g')", "('⌈', 'U')", "('\\\\', '/')", "('o', 'è')", "('K', 'ö')", "('0', 'c')", "('M', 'ě')", "('k', '\\xa0')", '("\'", \'C\')', "('a', 'ļ')", "('T', 'y')", "('ě', 'd')", "('t', 'Y')", "('<', 'P')", "('y', '=')", "('[', 'Ž')", "('.', 'h')", "('Z', '-')", "('E', 'j')", "('e', 'ę')", "('č', '.')", "('a', 'ĉ')", "('⌈', 'j')", "('i', 'ź')", "('$', 'z')", "('(', '2')", "('W', 'ę')", "('b', 'ú')", "('é', 'k')", "('»', 'j')", "('Á', 'b')", "('3', 'p')", "('é', 'z')", "('$', 'O')", "('h', '<')", "('ě', 'ď')", "('ŭ', 'o')", "('ø', ',')", "('L', 'â')", "('}', 'q')", "('&', '=')", "('Å', ' ')", "('ķ', 's')", "('«', 'Å')", "('v', 'A')", "('|', '|')", "('+', ',')", "('5', '7')", "('>', '(')", "('—', 't')", "('z', 'ę')", "('ř', 'c')", "('o', 'ř')", "('ü', 'b')", "('’', 's')", "('ż', '?')", "('B', 'M')", "('-', '/')", "('R', '0')", '(\'"\', \'t\')', "('j', 'F')", "('}', '@')", "('?', ']')", '(\'!\', "\'")', "('f', 'ã')", "('ý', '.')", "('.', '&')", "('ē', 'k')", "('l', 'ò')", "('f', 'í')", "('å', '.')", "(')', '!')", "('Š', 'o')", "('ŝ', 'v')", '(\'"\', \'w\')', "('8', ']')", "('\\xa0', '?')", "('ê', 'q')", "('\\xa0', 'L')", "('ķ', 'ē')", "('m', '1')", "('ŝ', 'o')", "('ā', 'c')", "('8', 'k')", "('ū', 'z')", "('o', ')')", "('⌈', 'P')", "(' ', 'ĥ')", "('ſ', 'l')", "('/', 'j')", "('中', '的')", "('Y', 'B')", "('.', 'L')", "('1', 'd')", "('[', 'r')", "('i', '…')", "('u', ',')", "('d', 'I')", "('ĝ', 'i')", "('C', 'E')", "('“', 'F')", "('ä', ',')", "('U', 'c')", "('$', '0')", "('d', 'U')", "(',', '3')", "('t', '}')", "('Z', 'S')", "('⌉', ':')", "('ě', ' ')", "('m', 'R')", '(\'9\', \'"\')', "('#', '7')", "('(', 'Ĥ')", "('4', 'F')", "('{', '@')", "('A', '8')", "('s', 'ķ')", "('c', '\\\\')", "('A', 'P')", "('ä', 'h')", "('.', '\\u202f')", "('Ē', 'l')", "('ä', 'y')", "('(', '8')", "('\\xa0', 'Ó')", "('6', ']')", "('Ö', 'n')", "('-', 'p')", "('Z', 'p')", "('ļ', ':')", "('0', '}')", "('ý', ':')", "('m', 'ā')", "('ú', 'r')", "('C', 'u')", "('T', ')')", "('r', 'ā')", "('3', 'b')", "('k', 'é')", "('ů', ';')", "('{', 'h')", "('t', '3')", "('ť', '!')", "('H', '2')", "('+', '[')", "('Y', '?')", "('ý', 'ř')", "('n', 'ż')", "('B', 'ě')", "('t', 'ī')", "('(', '»')", "('ſ', 'b')", "('c', 'ň')", "('e', '`')", "('«', 'i')", "('(', 'u')", "('f', ',')", "('e', '\\xad')", "('U', 'T')", "('n', 'ĵ')", "('m', 'è')", "('Y', '=')", "('z', 'J')", "('ý', 'c')", "(' ', 'X')", "('[', '7')", "('i', '_')", "('è', '!')", "('ſ', 't')", "(',', ':')", "('ř', 'í')", "('b', '⌉')", "('u', '!')", "('v', '\\xa0')", "('(', 'H')", "(')', '…')", "('í', ')')", "('è', 'y')", "('3', '7')", "('m', '9')", '(\'á\', \'"\')', "(';', '”')", "('f', '1')", "('O', 'v')", "('I', 'H')", "('ë', 'h')", "('»', 'e')", "('6', '5')", "('1', 'e')", "('l', 'ĝ')", "('-', ':')", "('2', '1')", "('P', 'ū')", "('k', '{')", "('C', '4')", "(':', 'P')", "('ê', 'v')", "('ť', 'm')", '("\'", \'!\')', "('ę', ';')", "('i', 'â')", "('»', 'S')", "('ý', 'č')", '("\'", \'d\')', "('F', ')')", "('P', 'é')", "('e', '\\u202f')", '(\'p\', "\'")', "('N', 'ó')", "('i', 'ń')", "('Ķ', 'ē')", "('\\xa0', 'f')", '(\'\\\\\', "\'")', "(']', '!')", "('B', 'C')", "('t', ')')", "(' ', 'ĉ')", "('ȝ', ';')", "('I', 'N')", "('V', 's')", "('O', 'ż')", "('@', 'l')", "('3', '6')", '("\'", \'Y\')', "('\\xa0', 'z')", "('Ô', 'm')", "('ź', '!')", "('T', 'A')", "('h', 'ř')", "('C', 'M')", "('l', '⌉')", "('ç', 'u')", "('6', '(')", '(\'Ç\', "\'")', "('Y', '2')", "('j', 'ů')", "('g', 'L')", "('ļ', 'p')", "('w', 'E')", "('C', 'J')", "('“', 'K')", "('ȝ', '!')", "('j', 'ś')", "(':', 'C')", "('.', ';')", "('S', '.')", "('U', 'x')", "('⌈', 'C')", "('r', ',')", "('ê', '.')", "('F', '4')", '(\'"\', \'/\')', "('o', '$')", "('q', 'û')", "('»', 'n')", "('h', '9')", "('r', 'B')", "('r', '9')", "('\\u202f', 'P')", "('č', ' ')", "('f', 'á')", "('j', 'ã')", "('%', 'b')", "('d', '6')", "('[', 'Ř')", "('a', '\\\\')", "('A', '.')", "('g', 'ê')", "('ò', '.')", '(\']\', \'"\')', "('p', '5')", "('/', 't')", "('F', 'N')", "('0', 'Z')", "('R', 'C')", "('ŝ', 'n')", "('l', 'C')", "('t', '8')", "('n', '|')", "('-', '0')", "('r', 'é')", "('ā', 'č')", "('~', 'u')", "('Z', 'ā')", "('r', 'ģ')", "('r', '1')", "('K', 'é')", "('è', '?')", "('ż', 's')", "('A', 'ȝ')", "('<', 'T')", "(' ', '!')", "('$', 't')", "('ô', 'r')", "('⌈', 'S')", "(' ', 'ä')", "('s', 'V')", "('i', '/')", "('m', '\\u202f')", "('v', ';')", "('h', 'ż')", "('ę', 'p')", "('ź', ';')", "('m', 'œ')", "('s', 'I')", "('+', 'B')", "('S', 'ē')", "('‘', 'P')", "('ë', 'v')", "('i', 'é')", "('R', 'ú')", "('«', 'U')", "('R', ',')", '(\'E\', "\'")', "(' ', 'U')", "('&', 'x')", "('c', 'T')", "('(', 'w')", "('o', 'ģ')", "(':', 'l')", "('C', 'e')", "('[', '-')", "('0', '3')", "('Ȝ', 'i')", "('“', 'O')", "('r', 'ď')", "('⌈', 'p')", "('O', '[')", "('R', 'è')", "(' ', 'H')", "('O', 'e')", "('0', 'b')", "('(', '5')", "('L', 'y')", "('M', 'g')", "('ď', ';')", "('ź', 'ż')", '(\',\', "\'")', "('\\xa0', 'Ú')", "('í', 'e')", "('«', 'v')", "('ą', 'ć')", "('Z', 'ř')", "('[', 't')", "('i', 'O')", "('Ē', 'ģ')", "('č', 'í')", "('A', ']')", "('$', 'B')", "('m', 'ł')", "('y', 'A')", "('ū', 'l')", "('E', 'S')", "('ú', 'd')", "('ĉ', 'e')", "('ź', '?')", "('H', 'ý')", "('J', 'u')", "('8', ')')", "('p', 'ý')", "('t', 'ó')", "('d', 'ā')", "('G', 'K')", "('e', 'ï')", "('m', '’')", "('ł', 'ą')", "('0', 's')", "('ó', 'á')", "('t', 'F')", "('0', 'r')", '(\'"\', \'’\')', "('r', '@')", "('5', ' ')", "('r', 'ļ')", "('v', 'ø')", "('K', 'ò')", "('I', 'c')", "('U', ',')", "('<', '2')", "('r', 'û')", "('I', 'u')", "('s', '”')", "('c', '6')", "(')', 'b')", "('é', ']')", "('ł', 'g')", "(')', 'r')", "('Z', 'č')", "('c', '⌉')", "('\\xa0', 'v')", "('$', 's')", "('â', 'm')", "('ú', 'š')", "('ē', 's')", "('z', 'ã')", "('ſ', 'k')", "('t', '–')", "('-', 'e')", "('A', 'U')", "('l', 'ā')", "('!', 'e')", "('p', 'ł')", "('s', 'ô')", "('Ú', 'l')", "('ć', ';')", "('-', '.')", "('j', 'ö')", "('s', 'ò')", "('m', 'O')", "('}', 'B')", "(')', ',')", "('j', 'ē')", "('`', '@')", "('t', 'á')", "('ć', ',')", "('g', '.')", "('Ä', 'ä')", "('n', '#')", "('D', 'ē')", "('W', 'ł')", "('…', ' ')", "('x', 'á')", "('2', '2')", "('ł', 'ę')", "('þ', '.')", "('S', '=')", "('(', 'L')", "('r', 'ĵ')", "('_', 'y')", "('N', ' ')", "(' ', 'ū')", "('Ģ', 'e')", "('š', ' ')", "('ź', 'ć')", "('ö', '.')", "('g', ']')", "('w', '/')", "('Z', 'í')", '(\'ê\', \'"\')', "('â', 'b')", "('Í', 'l')", '(\'L\', \'"\')', '(\'"\', \'A\')', "('P', 'è')", "('n', '!')", "('I', 'v')", "('R', 'ü')", "('Y', 'K')", "('t', 'ř')", '(\'"\', \'Ó\')', "('I', 'n')", "('S', 'u')", "('ä', ')')", "('o', '>')", "('»', '»')", "(')', 'o')", "('&', 'b')", "('h', 'š')", "('h', 'R')", "('Y', 'r')", "('t', '\\xa0')", "('.', '-')", "('ī', 'v')", "('A', 'w')", "('Ē', 'b')", "('ś', 'd')", "('i', 'ć')", "('_', 'M')", "('ú', 'ů')", "('e', 'S')", "('`', 'þ')", "('/', 'x')", "('[', 'y')", "('\\xa0', 'C')", "('ȝ', 'l')", "('I', 't')", "('/', 'b')", "('Z', 'A')", "('b', 'ã')", "('-', 'r')", "('D', 'ö')", "('ķ', 'i')", "('Z', 'u')", "('8', 'F')", "('⌈', 'Š')", "('t', 'ē')", "('[', 'š')", "('m', 'ö')", "('n', 'Z')", '(\'2\', "\'")', "('Y', ';')", "('R', 'ī')", "('m', '`')", "('{', 'V')", "('z', '’')", "('(', 'W')", "('p', 'è')", "('w', 'G')", "('X', 'P')", "('í', 'j')", "(' ', 'ņ')", "('*', 't')", "('‘', 'N')", "('(', 'B')", "('Y', 'p')", "('o', ';')", "('N', 'S')", "('é', 'r')", "('E', '3')", "('Ô', 'N')", "('M', 'l')", "('U', '?')", "('s', '.')", "('l', '2')", "('.', '“')", "('N', 'ã')", "('o', 'N')", "('s', 'é')", "('E', ')')", "('ī', '?')", "('8', '6')", "('S', 'a')", "('ä', 'd')", "('â', 'n')", "('ý', 'a')", "('`', 'ſ')", "('x', '4')", '(\'8\', \'"\')', "('a', 'ŝ')", "('S', 'N')", "('a', 'D')", "('-', 'G')", "('s', '–')", "('e', 'í')", "('>', 'e')", "('/', '3')", "('P', 'F')", "(' ', 'Ā')", "(' ', '%')", "('f', 'ī')", "('5', '3')", "('*', 'E')", "('/', 'o')", "('U', 'R')", "('x', '=')", "('_', '(')", "(';', '/')", "('N', 'ò')", "('ā', 'k')", "('l', '/')", "('b', 'ĉ')", "(':', '9')", "('*', '|')", "('ï', 'o')", "('t', 'å')", "('æ', 'k')", "(' ', 'ô')", "('é', '–')", "('>', 'T')", '(\'9\', "\'")', "('p', 'G')", "('ě', 'ň')", "('Y', 'd')", "('J', 'd')", "('U', 'w')", "('O', 'l')", "('“', 'P')", "('ã', 'a')", "('“', 'E')", "('E', '(')", "('’', 'e')", "('s', '=')", "('\\xad', 'v')", "('Ô', ' ')", "('ā', 's')", "('b', 'œ')", "('v', 'ě')", "('ł', ',')", '(\'»\', "\'")', "('O', '”')", "('A', 'š')", "('\\xa0', 'Ř')", "('Ó', 'r')", "(' ', 'ú')", "('a', 'ī')", "(')', 'v')", "('l', 'å')", "('j', 'ā')", "('(', 'm')", "('æ', 't')", "('.', 'S')", "('0', 'm')", "('\\xa0', 'j')", "('o', '\\t')", "('y', 'ć')", "('u', '“')", "('ę', ':')", "('ź', 'w')", "('Ž', 'i')", "('z', 'ó')", "('š', 'í')", "('ž', 'z')", "('{', 'f')", "('O', 'ē')", "('.', '3')", "('k', 'ê')", "(':', '6')", "(' ', '/')", "('h', 'ô')", "('o', 'é')", "('ś', 'ń')", "('t', 'T')", "('á', 'r')", "('Ĝ', 'o')", "('B', ' ')", "('ě', 'ž')", "('D', 'j')", "('n', 'ĉ')", "('\\xad', ';')", "('ë', 'c')", "(':', 'c')", "('ĥ', 's')", "('ś', 'm')", "('s', 'N')", '(\'*\', "\'")', "('s', '*')", "('»', 'g')", "('P', 'h')", "('b', 'ļ')", "('å', '’')", "(' ', 'Ē')", "('Z', 'ů')", "('J', 'N')", "('ł', 's')", "('t', '1')", "(' ', '.')", '("\'", \'ô\')', "('«', 'E')", "('Ĥ', 'l')", "('ŭ', '!')", "('á', 'm')", "('$', '1')", "('z', '.')", "('/', '$')", "('O', ' ')", "('_', '1')", "('ø', ';')", "('G', 'O')", "('(', 'f')", '("\'", \'n\')', "('z', 'ä')", "(')', 't')", "('v', 'E')", "('ą', 'c')", "('K', 'u')", "('l', 'ž')", "('r', 'ň')", "('á', 'í')", "('Ø', 'y')", "('Ĥ', 'u')", "('>', 'p')", "('5', '}')", "(',', 'i')", "('u', 'ï')", "('/', '<')", "('$', 'l')", "('v', 'ē')", "('{', 'c')", "('O', 'A')", "('r', 'ĥ')", "('d', ')')", "('x', '^')", '("\'", \'a\')', "('o', 'ļ')", "('f', 'ú')", "('v', '?')", "('\\u202f', 'C')", "('K', 'U')", "('ū', ',')", "('a', 'å')", "('t', 'J')", "('e', 'E')", "('E', 'r')", "('1', 'D')", "('E', 'ĉ')", "('–', 't')", "('z', 'ł')", "('_', 'O')", "('`', 'i')", '(\'0\', \'"\')', "('v', '_')", "('s', '>')", "('V', 'ā')", "('o', 'I')", "('p', '=')", "('的', '页')", "('Z', 'z')", '(\'}\', \'"\')', "('D', 't')", "('T', '(')", "('l', 'à')", "('M', 's')", "('1', '-')", "('r', ')')", "('r', 'ć')", '("\'", \'"\')', "('X', 'I')", "('L', 'ö')", "('ô', 'd')", "('ā', '.')", "('ů', '.')", "('—', 'e')", "('(', 'ņ')", "('*', 'b')", "(' ', 'ň')", "('?', '(')", "('H', 'á')", "('_', 'C')", "('5', ';')", "('ž', '?')", "('–', 'á')", '(\'!\', \'"\')', "('F', '0')", "('e', 'ĵ')", "('<', 'k')", "('c', '4')", "('N', 'o')", "('[', 'é')", "('o', '\\\\')", "('>', 'f')", "('ĥ', '.')", "('»', 'B')", "('b', 'å')", "('-', 'l')", "('p', 'ě')", "('W', ' ')", "('p', 'ä')", "('n', 'ę')", "('o', '—')", "('»', ']')", "('O', 'W')", "('L', '`')", '("\'", \'G\')', "('V', 'w')", "('W', 'z')", "('i', '>')", "('#', 'd')", "('v', 'æ')", "('ņ', 's')", "('R', 'ā')", "('/', '!')", "('ĝ', 'e')", '("\'", \'S\')', "('Z', 'b')", "('g', '_')", "('p', '.')", "('N', '!')", "('y', 'è')", "('I', 'B')", "('T', '1')", "('ȝ', ',')", "('C', 'r')", "(',', ')')", "('/', 'y')", "('\\u202f', 'B')", "('4', '.')", "('i', 'ň')", "('a', 'C')", "('=', 'r')", "('I', 'l')", "('.', '5')", "('x', '6')", "('d', 'H')", "('#', 'B')", "('d', 'ņ')", "('E', 'z')", "(' ', '\\u200b')", "('y', '-')", "('z', 'ń')", "('P', 'ā')", "('b', 'â')", "('R', 'ä')", "('4', '7')", "('h', 'ē')", "('0', '+')", "('d', '.')", "('\\\\', 'F')", "('F', 'K')", "('[', '`')", "('G', 'I')", "('g', 'N')", "('l', 'N')", "('j', '>')", "('F', 'o')", "('á', 'p')", "('F', 'ê')", "('S', 'b')", "('s', 'å')", "('á', 'u')", "('w', 'O')", "('0', '\\\\')", '("\'", \'j\')', "('`', 'v')", "('d', '4')", "('p', 'ī')", "('ē', 'z')", "('n', 'é')", "('g', '!')", "('t', 'ż')", "('A', 'q')", "('`', 'a')", "('ë', 's')", "('ā', 'v')", "('ú', ':')", "('ĥ', '!')", '(\'"\', \'!\')', "('-', '>')", "('⌈', 't')", "('1', 'E')", "('r', 'č')", "('»', ',')", "('D', 'D')", "('ě', 'č')", "('Š', 'ī')", "('n', 'ê')", "('w', 'ſ')", '(\'W\', "\'")', "('s', '<')", "('k', 'ô')", "('r', 'ż')", "('X', '[')", "('ķ', 'm')", "('l', ',')", "('M', 'e')", "('9', ']')", "('H', '5')", '(\'í\', \'"\')', "('ņ', 'o')", "('V', 'a')", "('p', 'ſ')", "('\\xa0', 'o')", "('y', '!')", "('ß', 'e')", '(\')\', "\'")', "('ģ', 'l')", "('r', 'ø')", "('ě', ']')", "('þ', '!')", "('=', 'y')", "('A', 'ſ')", "('V', 'c')", "('<', ':')", "('ö', 'y')", "('D', 'è')", "('(', 'y')", "('8', 'C')", "('0', '(')", "('X', ' ')", "('s', 'æ')", "('r', 'ý')", "('Z', 'á')", "('n', '?')", "('A', 'I')", "('Ū', 'r')", "('“', 'M')", "('-', '{')", "('f', '<')", "('X', '2')", "('F', 'D')", "('“', 'š')", "('ï', 'e')", "('1', 'r')", "('‘', 'Q')", "('ń', 'n')", "('R', '1')", "('ů', 'p')", "('„', 'Z')", "('é', 'é')", "('í', '–')", "('G', 'ę')", "('„', 'Š')", "('ł', 'm')", "('ö', '?')", "('n', 'ã')", "('U', 'D')", "('k', '}')", "('ø', 'k')", "('l', 'ů')", "('1', 'C')", "('u', 'ã')", "('x', '”')", '("\'", \'U\')', "('n', '/')", "('P', 't')", "('5', 'i')", "('P', 'š')", "('0', '`')", '(\'v\', "\'")', "('/', 'c')", "('⌈', 'Z')", "('-', 'k')", "('\\u202f', 'V')", "('r', 'Š')", "(';', 'a')", "('S', 'é')", "('e', 'ď')", "('í', ',')", "('é', 'ç')", "('5', '5')", "('V', 'G')", "('á', '—')", "('p', '<')", "('i', 'H')", "('ū', 'c')", "('ü', 'c')", "('[', '2')", "('D', '7')", "('c', 'ſ')", "('r', 'W')", "('B', ':')", "('I', 'Z')", "('6', '7')", "('o', 'J')", "('F', '5')", "('U', 'š')", "('⌈', 'G')", "('í', 'ď')", "('k', 'ó')", "('5', 'f')", "('n', 'ē')", "('*', '$')", "('–', 'c')", "('ą', '.')", "('g', 'õ')", '(\'J\', \'"\')', "('p', 'ē')", "('p', '%')", "('h', 'N')", "('(', 'x')", "(' ', 'F')", "('D', 'P')", "('r', ']')", "('ŝ', 'm')", "('y', ':')", "('⌈', 'K')", "('a', 'ū')", "('ú', 'f')", "('j', 'á')", "('ů', ')')", '(\'"\', \'(\')', "('Ĝ', 'a')", "('u', 'ŝ')", "('ß', ',')", "('B', 'Y')", "('d', '_')", "('_', 'l')", "('R', 'ö')", '("\'", \' \')', "('þ', 'ſ')", "('z', 'ņ')", "('n', '�')", "('[', '(')", '(\'"\', \'6\')', "('ŭ', 'd')", "('[', 'm')", "('z', '⌉')", "('r', '’')", "('ó', 'ź')", "('b', '6')", "(':', 'h')", "('ů', 'b')", "('ě', 'c')", "(',', 'ż')", "('L', 'G')", '(\'"\', \'T\')', "(',', 'O')", "('L', 'X')", "('9', 'C')", "('N', 'R')", "('A', 'M')", "('*', 'F')", "('ã', 'o')", "('U', 'G')", "('u', 'ń')", "('g', '»')", "('!', '=')", '(\'J\', "\'")', "('@', 'n')", "('`', 'K')", "('D', 'ů')", "('n', '+')", "('&', 'X')", "('9', 'm')", "('e', ':')", "('t', ']')", "('Ģ', 'ē')", "('!', '\\u202f')", "('ě', 's')", "('0', 'N')", "('(', 'Ú')", "('œ', 'u')", "('f', 'ę')", "('<', 'B')", "('C', 'I')", "('ŝ', 'r')", "('ç', 'á')", "('’', 'l')", "('T', 'ł')", "('.', 'Ä')", "('K', 'E')", "('ŭ', 'k')", "('„', 'h')", "('>', 'u')", '(\'"\', \'}\')', "('t', 'A')", "(' ', 'P')", "('Z', 'c')", "('’', '?')", "('l', 'ê')", "('ļ', ',')", "('ĝ', 'b')", "('”', '?')", "('o', 'ĥ')", "('É', 'b')", "('T', 'E')", "('2', ';')", "('(', 'Z')", "('(', '(')", "('#', 'R')", "('n', '9')", "('+', 'd')", "('E', 'ķ')", "('k', '»')", "('Ē', 's')", "('e', 'ň')", "('B', 'T')", "('u', ']')", "('<', 'z')", "('‘', 'T')", "('m', 'ž')", "('i', '*')", "(';', 'p')", "('D', 'ā')", "('在', '这')", "('n', '=')", "('ď', 'o')", "('&', 'W')", "('<', 'R')", "('6', 'f')", "('`', 'j')", "('i', 'ŝ')", "('U', 't')", "('„', 'V')", "('p', 'C')", "('/', 'e')", "('ě', 'ť')", "('!', ';')", "('\\xa0', 'n')", "('n', 'R')", "('G', 'S')", "('é', ' ')", "(' ', 'ī')", "('/', 'm')", "('v', 'ĝ')", "('õ', 'e')", "('Z', 'D')", "(',', 'a')", "('w', '*')", "('B', '3')", "('?', 'G')", "('/', 'W')", "('ó', '—')", "('G', 'A')", "('_', '4')", "('o', 'ē')", "('j', 'ę')", "('\\xa0', 'Ď')", "('ž', 'm')", "('û', ',')", "('ť', 'a')", "('p', 'ķ')", "('k', 'ū')", "('Z', 'é')", "('Å', 'k')", "('d', 'ī')", "('A', 'Ĵ')", "('n', 'P')", "(' ', '6')", "(':', 'T')", "('w', '0')", "('ī', 'b')", "('i', ';')", '(\'"\', \'o\')', "('’', 'n')", "('x', 'è')", "('m', 'ī')", "('À', 'q')", "('<', '0')", "('n', 'ī')", "('ť', ';')", '(\'"\', \'K\')', "('i', 'ä')", "('6', '8')", "('ŭ', 'z')", "('e', 'R')", "('ĵ', 'e')", "('n', 'ą')", "('Ĝ', 'i')", "('ż', 'w')", "('è', 'b')", "('Ȝ', 'y')", "('P', 'L')", "('A', 'ż')", "('.', 'C')", "('H', 'è')", "('T', 'v')", "('d', '3')", "('š', 'b')", "('ć', 'c')", "(']', 's')", '(\'"\', \'n\')', "('Z', 'Z')", "('_', '7')", "('C', 'v')", "('ő', 'w')", "('{', 'T')", "('N', 'u')", "('B', 'á')", "('Á', 'm')", "('ž', 'Z')", "('ź', 'r')", "('⌈', 'H')", "('ā', 'l')", "(';', 'b')", "('D', ' ')", "('–', 'š')", "('-', 'É')", "('ļ', '!')", "('z', '/')", '("\'", \'œ\')', "('A', '\\t')", "(',', '7')", "('*', 'C')", "('#', 'E')", "(',', 'd')", "('„', 'S')", "('å', 'n')", "('š', 'á')", "(' ', '\\xad')", "('i', ':')", "('Y', 's')", "('a', 'ā')", "('ŭ', 'f')", "(' ', '|')", "(' ', 'O')", "('u', '*')", "('h', 'ý')", "('ŭ', '.')", "('T', 'Ä')", "('u', '\\u202f')", "('T', 'W')", "('=', '6')", "('S', 'ý')", "('“', 'n')", "('y', '\\\\')", "('o', 'ȝ')", "('O', 'y')", '("\'", \'é\')', "('r', 'C')", "('-', 'm')", "(':', 'q')", "('J', 'è')", "('O', 'N')", "(' ', 'ģ')", "('h', 'â')", "('[', 'j')", "('l', 'W')", '(\'"\', \':\')', "('=', '4')", "('é', 'i')", "('J', 'y')", "('ô', 'v')", "('ž', 'ī')", "('D', ':')", "('e', 'ż')", "('ý', 'h')", "(',', '4')", "('b', 'W')", "('|', '=')", "('b', '1')", "('0', '.')", "('u', '⌈')", "('í', 'z')", "('(', '\\\\')", "('H', '_')", "('ě', 'p')", "('ď', 't')", "('t', 'è')", "('Î', 'l')", '("\'", \'Å\')', "('L', '7')", "('F', 'L')", "('D', 'a')", "('ņ', 'a')", "('{', '}')", "('o', 'F')", "('S', 'v')", "('o', '“')", "('*', '\\\\')", "('-', 'j')", "('š', 'v')", "('2', '3')", "('.', '4')", "('“', 'C')", '(\' \', "\'")', "('ã', ' ')", "('b', 'I')", "('(', 'ģ')", "('c', 'E')", "('ú', 'c')", "('=', 'T')", "(' ', '?')", "('c', '/')", "('ł', 'l')", "('r', '»')", "('ů', '!')", "('}', '`')", "(' ', '^')", "('š', 'e')", "('m', 'F')", "('\\u202f', 'p')", "('H', 'H')", "('y', 'H')", "('ê', ' ')", "('t', '!')", "('ř', 'b')", "('ń', '?')", "('ę', 't')", "('ā', 'a')", "('Č', 'a')", "('e', '9')", "('-', 'J')", "(' ', '>')", "('ö', 'l')", "('ž', 'í')", "('ź', 'n')", "('ž', 'r')", "('ř', 'č')", "('E', 'ū')", "('E', 'L')", "('q', '1')", "('q', '2')", "('ç', 'â')", "('i', 'ö')", "(')', '>')", "('«', 'Ø')", "('l', 'õ')", "('i', 'ç')", "('J', ' ')", "('ø', 'f')", "('S', ':')", "('0', 'w')", "('A', 's')", "('Æ', 'v')", "(')', '`')", "(',', '6')", "('A', 't')", "('g', ':')", "('M', 'ý')", "('û', 'r')", "('e', 'W')", "('t', 'ę')", "('K', 'm')", "('ȝ', 'y')", "('ě', '⌉')", "('b', 'T')", "('[', 'V')", "(',', 'f')", "('e', '–')", "('v', ',')", "('W', 'h')", "(')', '\\t')", "('Ķ', 'i')", "('a', '4')", "('W', 'G')", "('{', 'E')", "('/', 'f')", "('S', 'p')", "('_', 'p')", "('!', 'r')", "(';', 'u')", "('.', '/')", "('ŝ', ';')", "('Z', 'U')", "('d', 'č')", "('r', '\\\\')", "('p', 'ü')", "('h', 'è')", "('ę', '.')", "('Ä', 'M')", '(\'Z\', "\'")', "('7', ',')", "('h', 'ň')", "('r', ';')", "('–', 's')", "('W', 'Z')", "('L', 'N')", "('4', '(')", "('@', 'k')", "('ö', 'h')", "('k', 'ż')", "('&', 'd')", "('B', 'y')", "('ĝ', 'r')", "('l', 'ó')", "('„', '[')", "('T', '`')", "('`', '`')", '(\'d\', "\'")', "('(', '$')", "(' ', 'Ȝ')", "('a', 'ü')", "('C', 'L')", "('q', 't')", "('i', 'ó')", "('K', '%')", "('Ȝ', 'u')", "('Z', ' ')", "('ř', '⌉')", "('Ž', 'v')", "('\\\\', ' ')", "('í', ']')", "('ć', 's')", "('ê', 'b')", "('B', 'D')", "('*', 's')", "('X', '_')", "('Z', '\\xa0')", "('-', 'g')", "('ä', 'f')", "('(', 'J')", "('d', 'ò')", "('S', 'c')", "('H', 'l')", "('J', 'ę')", "(' ', 'î')", '(\'K\', "\'")', "('A', 'J')", "('-', 'W')", "('⌈', 'ú')", "('–', 'v')", "('x', '}')", "(';', '1')", "('P', 'w')", "('\\xa0', 'č')", "('T', 'ī')", "('s', '-')", "('w', 'ł')", "(']', 'C')", "('K', 'ā')", "('q', ',')", "('-', 'o')", "('a', '0')", "('q', 'y')", "('z', 'ř')", "('Ú', 'e')", "('0', '/')", "('d', '}')", "('Ä', 't')", "('Ó', 'f')", "('r', 'ô')", "('š', 'ů')", "('n', 'ä')", "('’', 'o')", "('B', 'ä')", "('r', 'ķ')", "('*', 'm')", "('H', '6')", "('5', 'C')", "('i', 'è')", "('j', 'ď')", "('æ', 'f')", "(' ', '5')", "('\\xa0', 'd')", "('ĉ', 'r')", "('>', '=')", "('3', '.')", "('ò', '-')", "('f', 'ĥ')", "('P', ':')", "('è', 'j')", "('D', 'ł')", "('4', 'e')", "('m', '|')", "('ó', 'b')", "('>', ' ')", "('ú', 'u')", "('W', 'ó')", "('ś', 'i')", "('M', 'w')", "(',', '1')", "('_', 'e')", "('î', 't')", "('u', 'ķ')", "('6', '3')", "('“', ' ')", "('r', '5')", "('N', 'ø')", "('m', '3')", "(',', '2')", "('p', 'Q')", "('ů', 't')", "('à', '…')", "('č', ',')", "('ć', 'i')", "('d', 'S')", "('ř', 'ů')", "('J', 'o')", "('ś', 'ć')", "('š', '-')", "('t', '_')", "('b', 'ę')", "('ļ', 'ē')", "('N', '(')", "('[', 'Š')", "('2', 'm')", "('ú', 'n')", "('4', '6')", "('4', '8')", "(',', '0')", "('W', 's')", "('^', '7')", "('ď', ',')", "('+', ';')", "('p', '_')", "('á', 'h')", "('%', 'd')", '(\'h\', "\'")', "('>', 'H')", "(' ', 'Z')", "('x', 'C')", "('j', '!')", "('ā', 'g')", "('ů', '⌉')", "('ø', 'n')", "('n', '&')", "('a', '⌉')", "('ſ', 'p')", "('t', 'ě')", '("\'", \'Ä\')', "('/', 'd')", "('r', 'þ')", "('r', 'á')", "('m', '5')", "('ī', 'k')", "('`', 'y')", "('F', '8')", "('.', 'Z')", "('1', '6')", "('“', 'U')", "('7', 'p')", "('a', '\\u202f')", "('H', 'o')", "('í', 't')", '("\'", \';\')', "('K', 'ü')", "('w', ',')", "('G', 'B')", "('ô', 't')", "('(', 'c')", "('F', '1')", "('!', 'z')", "(')', 's')", "('p', 'ą')", "(',', 'z')", "('n', ':')", "(':', '>')", "('r', 'ä')", "('-', 'R')", "('g', '[')", "('&', 'c')", "('U', 'i')", "('8', 'A')", "('⌈', 'u')", "('v', 'M')", "('e', 'ā')", "('”', ';')", "('h', 'ą')", "(':', 'E')", "('^', 'x')", "('j', 'ſ')", "('W', '3')", "('p', 'û')", "('-', 'D')", "('ï', 'k')", "('š', 'y')", '(\'y\', "\'")', "('L', ' ')", "('B', '6')", "('-', '#')", "('/', 'D')", "('A', ')')", "('l', ')')", "('u', '2')", "('–', 'r')", "('r', 'ś')", '(\'B\', "\'")', "('«', 'F')", '(\'/\', "\'")', "('b', 'í')", "(' ', 'Ô')", "('ĵ', 'u')", "('H', 'J')", "('(', 'ĝ')", "('s', '+')", "('s', '…')", "('0', '7')", "('ä', '!')", "('l', 'ę')", "('ž', 'a')", "('d', '⌉')", "('_', 'E')", "('K', 'O')", '(\'1\', \'"\')', "('3', '1')", "('ů', ':')", "('1', ']')", "('H', 'D')", "('.', '7')", "('U', 'z')", "('\\xa0', 'T')", "('a', 'ģ')", "('!', 'p')", "('z', 't')", "('B', 'H')", "('ï', 'a')", "('M', 'i')", "('.', 'K')", "('(', 'É')", "('ě', 'z')", "('J', 'A')", "('S', 'r')", "('t', '’')", "('ż', ':')", "('n', '}')", "('ą', 's')", '(\'-\', "\'")', "(' ', '→')", "('Ú', 'n')", "(';', '2')", "('d', 'T')", "('É', 'd')", "('ö', 'd')", "('L', 'l')", "('é', 't')", "('\\xa0', 'l')", "('Ĥ', 'a')", "(' ', 'é')", "(' ', 'Ļ')", "('3', ';')", "('ļ', 'ņ')", "('-', 'f')", "('v', '4')", "('l', 'D')", "(':', '$')", "(':', '5')", "('d', '\\\\')", "(' ', 'Ī')", "('K', ';')", "('G', '2')", "('P', 'c')", "('(', '-')", "(',', 'b')", "('(', '6')", "('6', '9')", "('“', 'W')", "('i', ')')", "('C', '(')", "('ē', 'm')", '("\'", \'b\')', "('F', 'ī')", "(' ', 'Ê')", "('X', 'B')", "('»', 'F')", "('ò', 'n')", '(\'"\', \'Z\')', "('⌈', 'n')", "('Ś', 'l')", "('[', 'E')", "('ē', 'j')", "('h', 'ł')", "('æ', 'j')", "(' ', 'Å')", "('P', 'g')", "('*', 'W')", "('o', '\\xad')", "('o', 'ņ')", "('S', 'ó')", "('1', '9')", "('\\u202f', 'u')", "('<', 'j')", "('è', 'm')", "('(', 'à')", "('l', 'î')", "('E', 'k')", "('\\xa0', 'N')", "('o', 'ā')", "('L', 'r')", "('þ', 'l')", "(')', 'k')", "('O', 'J')", "('j', '’')", "('„', 'N')", "('ē', 'b')", "('E', 'š')", "('k', '`')", "('’', 'v')", "('ą', '?')", '("\'", \'p\')', "('Ś', 'm')", "('=', '9')", "('p', 'ô')", "('[', 'C')", "('s', ']')", "('z', ',')", "('(', 'l')", "('“', 'Ņ')", "(',', 'w')", "('D', '1')", "('C', 's')", "('{', '\\\\')", "('&', '~')", "('f', 'å')", "('Q', 'U')", "('f', 'ê')", "('ż', 'm')", "('o', 'ś')", "('?', 'r')", "('ž', ':')", "('T', 'í')", "('É', 's')", "('‘', 'E')", "('v', 'å')", "('š', '!')", "(':', 'a')", "('u', ';')", "('B', 's')", "('š', 'a')", "('n', '%')", "('L', 'í')", "('s', 'ŝ')", "('m', 'ø')", "('5', ']')", "('ó', 'c')", "('i', '[')", "('«', 'f')", "('B', 'è')", "('ł', 'k')", '(\']\', "\'")', "('l', 'ô')", "('!', 'D')", "('Þ', 'r')", "('J', 'ā')", "('I', 'G')", "('ū', 's')", "('/', 'i')", "('%', 'i')", "('R', 'I')", "('q', 'm')", "('[', '9')", "('.', 'l')", "('⌉', '\\xa0')", "('d', 'A')", "('W', 'T')", "('b', 'ĥ')", "('L', 'I')", "('L', ';')", "('æ', 'g')", "('e', 'ī')", "('’', 'K')", '(\'"\', \'{\')', "('è', ';')", "('\\u202f', 'A')", "('.', 'p')", "('—', 'c')", "('>', '<')", '(\'"\', \'-\')', "('9', '7')", "('t', 'û')", "('n', 'œ')", "('Ú', 'f')", "('k', 'ņ')", "('ň', ',')", "(',', 'M')", "('`', '<')", "('U', 'K')", "('â', ' ')", "('T', 'C')", "('C', 'T')", "('#', ';')", "('ö', 'f')", "('L', 'O')", "('9', 'F')", "('u', 'š')", "('n', ';')", "('c', '&')", "('h', '—')", "('E', '_')", "('ī', ';')", "('R', 'ū')", "('p', 'ż')", "('4', '9')", "('k', '.')", "('s', 'ī')", "('Z', 'ł')", "(':', '=')", "('Y', '.')", "('ò', 'r')", "('a', 'ł')", "('=', 'q')", "('Ū', 'd')", "('ý', 'p')", "('ŝ', ' ')", "('V', 'ø')", "('ú', 'z')", "('>', 'c')", "('Ó', ',')", "('ý', ';')", "('´', 'a')", "('?', ')')", "('&', 'o')", "('e', 'ȝ')", "('ř', 'á')", "('3', 'c')", "('F', 'é')", "(':', '⌉')", "('r', '⌉')", "('.', '0')", "('相', '当')", "('i', 'ā')", "('P', 'b')", "(' ', 'ł')", "('H', 'ī')", "(';', 'o')", "('ů', 'v')", "('ï', '-')", "('U', 'e')", "('<', 'h')", "('«', 'k')", "('p', 'õ')", "(')', '#')", "('r', 'ö')", "('ā', 'p')", "('p', 'B')", "('“', 'Z')", "('.', '[')", "('x', '>')", "('h', '\\\\')", "('-', 'á')", "('K', 'ř')", "('\\t', '{')", "('<', 'u')", "('i', '<')", "('o', 'ū')", "('s', 'ø')", "('ż', ')')", "('‘', 'Š')", "('T', 'U')", "('q', ':')", "('p', 'Z')", "('H', '1')", "('L', 'U')", "('ò', 'j')", "('S', 'C')", "('ä', 'ä')", "(':', 'b')", "('„', 'Ř')", "('`', ')')", "('ē', ')')", "('M', 'y')", "('\\\\', '$')", "('Ó', 'h')", "('g', '`')", "('”', 'T')", "('x', '[')", "('f', 'ó')", "(',', 'r')", "('M', 'ä')", "('/', 'T')", '("\'", \'$\')', "('ó', 't')", "('ò', 'w')", "('y', 'ź')", "(':', 'Q')", "('E', 'E')", "('u', '–')", "('!', 'Q')", "('Y', 'P')", "('ŭ', 'i')", "('F', 'Z')", "('A', 'g')", "('“', 'V')", "('b', '2')", '(\'"\', \'i\')', "('–', 'd')", "('A', 'l')", "('#', '\\t')", "('ï', '.')", "('„', 'P')", "('g', 'ſ')", "('Š', 'í')", "(' ', '—')", "('/', 'r')", "('á', ';')", "('s', '{')", '(\'X\', \'"\')', "('ļ', 'd')", "('t', 'ĥ')", "('i', 'C')", "('4', ')')", "('P', 'e')", "('(', 'ŝ')", "('D', 'á')", "('„', 'U')", "('R', 'L')", '(\'"\', \'À\')', "('e', '»')", "('m', 'S')", "(':', '”')", "('4', 'N')", "('c', 'ô')", "(',', 'n')", "('(', '3')", "('«', 'K')", "('l', '`')", "(' ', '«')", "('!', 'v')", "('H', 'ü')", "('U', 'l')", "('n', 'ó')", "('H', 'y')", "(' ', 'â')", "('n', 'ķ')", "('i', 'č')", "('d', 'á')", "('4', '=')", "('a', 'ä')", "('f', 'N')", "('r', 'ť')", "('b', 'î')", "('l', ']')", "('w', '@')", "('Q', ':')", "('i', 'L')", "('ń', 'ż')", "('&', 'm')", "('ž', 'c')", "('k', '>')", "('$', 'm')", "('0', 't')", "('ě', 'š')", "('⌈', '.')", "('有', '的')", '(\'u\', "\'")', "('z', 'ż')", "('-', '-')", "('v', 'ö')", "('f', 'ü')", "('D', '0')", "('*', 'k')", "('G', '=')", "('H', 'V')", "('«', 'V')", "('s', 'L')", "('E', '/')", "('M', '(')", "('R', '>')", "('f', 'Y')", "('K', 'v')", "('F', 'm')", "('R', 'Y')", "('Þ', 'i')", "('(', 'M')", "('í', 'c')", "('R', 'Z')", "('ŝ', 'x')", "('ò', 'd')", "('é', ';')", "('p', 'ň')", "('B', 'I')", "('X', 'R')", '("\'", \'<\')', '(\'"\', \'?\')', "('2', 'l')", "('L', 'å')", '(\'#\', "\'")', "('\\u202f', 'Z')", "('–', 'O')", "('s', '@')", "(' ', 'M')", "('E', ':')", "('s', '3')", "('A', ' ')", "('t', 'ů')", "('K', 'ø')", "('Š', 'a')", "('h', 'č')", "('d', '/')", "('á', 'j')", "('J', 'H')", '("\'", \'î\')', "('ŝ', 't')", "('ę', 'ś')", "('á', 'f')", "('j', 'à')", "('É', 'l')", "('y', 'ś')", "('v', '1')", "('=', 'n')", "('O', 'Z')", "('»', '.')", "('ś', 'ą')", "('ē', 'f')", "('.', '#')", "('é', '?')", "('$', ' ')", "('L', 'V')", "('ģ', 'a')", "('‘', 'A')", "('F', '.')", "('v', 'Y')", "('ȝ', '?')", "('ŝ', 'l')", "('O', 'O')", "('c', 'S')", "('+', 's')", "('⌈', 's')", "('â', 'q')", '(\'"\', \'j\')', "('V', 'ö')", "('o', 'ĝ')", "('`', 'M')", "('F', 'M')", "('`', 'p')", "('`', 'C')", '(\'"\', \'s\')', "('ā', ',')", "('I', 'F')", "('i', '=')", "('%', 'p')", "('5', '0')", "('9', 'f')", "('Y', 'i')", "('t', 'S')", "(' ', 'ü')", "('v', 'ů')", "('»', 'U')", "('\\u202f', 'q')", "('ë', 'd')", "('M', 'ī')", "('%', 's')", "('E', 'M')", '(\'b\', \'"\')', '(\';\', "\'")', "('ŭ', ' ')", "('[', '%')", "('Ā', 'r')", "('m', 'â')", "('J', 'p')", "('Ū', 'z')", "('g', 'â')", "('V', 'ē')", "('8', '}')", '("\'", \'D\')', '(\'3\', \'"\')', "(':', 'p')", "('t', '\\u202f')", "('n', 'č')", "('t', 'U')", "('G', 'w')", "('k', '_')", "('ú', 't')", "('v', '»')", "('ò', 'f')", "('œ', 'i')", "('«', 't')", "('š', 'ī')", "('+', 'Q')", "('/', 'E')", '(\'M\', "\'")', "('!', '…')", "('O', 'ā')", "('â', 'p')", "('v', 'ò')", "('<', 'b')", "('t', '9')", "('ń', 'b')", "('=', '1')", "('B', 'ā')", "('ł', 'o')", "('i', '.')", "('%', '.')", "('U', 'E')", "(':', 'r')", "('í', 'i')", "('A', 'č')", "('[', 'M')", "('ȝ', 'o')", "('G', 'a')", "('t', 'V')", "('ť', ':')", "('S', 'h')", "('ž', 'n')", "('t', 'X')", "('H', 'e')", "('<', 'n')", "('r', '*')", "('M', 'D')", "('”', '.')", "('“', 'T')", "('(', 'p')", "('4', 'u')", "(' ', '8')", "('e', 'ū')", "('T', 'q')", "('N', 'q')", "('–', 'E')", "('1', ' ')", "('2', 'f')", "('(', ';')", "('P', 'Å')", "('s', 'ů')", "(' ', 'ï')", "('\\xa0', 'S')", "('⌈', 'O')", "('”', ':')", "('/', 's')", "('ů', 'z')", "('I', 'y')", "(']', '=')", "('«', 'T')", "('!', ']')", "('Y', 'C')", "('+', '6')", "('i', '’')", "('y', ')')", "('@', 'e')", "('x', 'O')", "('n', 'ū')", "('p', '-')", "('.', '’')", "('D', 'G')", "('V', ' ')", '(\'4\', \'"\')', "('!', '!')", '(\'"\', \'q\')', "('I', 'ż')", '(\'^\', \'"\')', "('O', 'z')", "('I', 'š')", "('y', 'X')", "('J', 'ē')", "('{', '1')", "('5', '`')", "('ļ', '.')", "('}', ']')", "('P', 'ý')", "('(', 'g')", '(\'ä\', "\'")', "('ī', '!')", "('T', 'æ')", "('ē', '”')", "('7', 'I')", "('Ú', 'ž')", "('a', 'ž')", "('ŭ', 'b')", "('æ', '!')", "('E', ']')", "('č', '?')", "('{', 's')", "('U', 'O')", "('H', 'ā')", "('e', 'ô')", "('B', 'a')", "('L', 'J')", "('g', ',')", "('’', 'i')", "('d', 'ô')", "('1', '1')", "('Š', 'u')", "('(', '7')", "('X', 'E')", "('ķ', ',')", "('C', 'n')", '(\'"\', \'g\')', "('³', ' ')", "('e', '\\\\')", "('x', 'W')", "('A', '2')", "('⌈', 'ž')", "('W', '_')", "('w', 'W')", "('ě', 'n')", "(' ', 'ķ')", "('û', 'c')", "('ū', 'v')", "('d', '–')", "('I', 'f')", "('Ż', 'a')", "('b', 'C')", "('r', 'ę')", "('Y', 'M')", "('p', 'ņ')", "('U', 'p')", "('v', '(')", "('x', '0')", "('[', 'w')", "('\\u202f', 'S')", "('ä', 'j')", "('c', '-')", "('m', 'ū')", "('ů', 'č')", "('ū', 'g')", "('o', 'ī')", "('h', 'ť')", "('O', 'd')", "('d', 'R')", "('-', 'O')", "('–', 'h')", "('r', '8')", "('-', ',')", "('u', 'þ')", "('.', ' ')", "('ń', 'm')", '(\'?\', \'"\')', "('ö', 'a')", "('e', '=')", "('ě', 'k')", "('»', 'h')", "('T', '2')", "('\\xa0', 'c')", "('g', 'D')", "('n', '[')", "('ż', 'o')", "('è', 'z')", "('i', 'ł')", "(')', '{')", "('&', 'S')", "('U', 'ż')", "('[', ' ')", "('ë', ',')", "('C', '5')", "('T', 'c')", "('Ž', 'n')", "('U', 'I')", "('í', 's')", "('=', '8')", "('D', 'ø')", "('ů', ',')", "('~', '0')", "('V', 'ž')", "('ē', 'v')", "('+', 'k')", "('T', ',')", "('>', 'F')", '("\'", \'r\')', "('`', 'b')", "('D', 'z')", "('+', ')')", "('P', '%')", "('k', '–')", "('M', 'ů')", "('ą', 'w')", "('V', 'æ')", "('b', 'ē')", "('+', '1')", "('-', '\\\\')", "('s', 'M')", "('6', 'M')", "('»', 'J')", "('č', 'a')", "('k', 'ø')", "('$', 'h')", "('2', '6')", "('O', 'ł')", "('ź', 'm')", "('#', 't')", "('.', '*')", "('m', 'ĝ')", "('ç', 'ã')", "('ť', ',')", "('z', 'š')", "('ě', ':')", "('V', 'L')", "('p', 'ã')", "('ž', 'ņ')", "('?', 'J')", "('î', 'c')", "('ē', '“')", "('L', 'è')", "('r', '…')", "('.', '<')", "('g', 'ã')", "('ú', 's')", "('m', '<')", "('2', '5')", "('R', 'ø')", "('<', '(')", "('“', 'k')", "('Ł', 'o')", "('t', '.')", "('h', 'ò')", "('A', 'b')", "('@', 'c')", "('ā', 'z')", "('z', 'å')", "('H', ':')", "('“', 't')", "('\\xa0', 'm')", "('é', 'g')", "('é', 'o')", "('.', ')')", '("\'", \'o\')', "('p', ',')", "('9', 'V')", "('ů', 'ň')", "('n', '\\\\')", "('c', 'ů')", "('c', 'õ')", "('E', 'F')", "('ĉ', 'f')", "('B', 'U')", "('L', '8')", "('w', 'P')", "('.', '+')", "('>', '`')", "(']', '`')", "('4', '0')", "('<', '<')", "('6', ':')", "('M', 'a')", "('d', 'é')", "('ě', 'v')", "('ē', 'r')", "('S', 'ą')", "('3', '[')", "('-', 'Z')", "('\\xad', 's')", '(\'"\', \'v\')', "('i', 'P')", "('2', 'E')", "('c', ',')", "('ä', 'c')", "('k', 'S')", "('w', 'V')", "(']', ']')", "('.', 'R')", "('Y', 'u')", "('p', 'í')", "('U', 'X')", "('a', 'S')", "('J', 'í')", "('s', '⌉')", "('7', ' ')", "('p', '»')", "('Ā', 't')", "('ņ', 'e')", "('t', 'š')", "('S', 'k')", "('K', 'ó')", "('ĵ', 'i')", "('m', '(')", "('c', 'ē')", "(' ', 'S')", "('š', 'ē')", "('–', 'u')", "('Ś', 'w')", "('0', '_')", "('g', '-')", "('g', 'ą')", "('-', 'å')", '("\'", \'Q\')', "('Ż', 'y')", "('F', 'R')", "('r', 'ĝ')", "('g', 'è')", "('n', 'J')", "('E', ';')", "('2', '(')", "('.', 'w')", "('ó', 'e')", "('K', 'ę')", "('}', 'c')", "('ŝ', 'e')", "('å', 'v')", "('ž', 'u')", "('b', 'ŝ')", "('c', '1')", "('}', '\\\\')", "('I', 'Y')", "('L', 'R')", "('*', '/')", "('4', '1')", "('0', '1')", "('h', '2')", '(\')\', \'"\')', "('P', 'í')", "('w', 'þ')", "('é', 'â')", "('T', 'ę')", "('.', 'A')", "('ū', '!')", "('G', 'o')", "('.', 'g')", "('C', 'í')", "('ó', 'p')", "('r', 'V')", "('s', '`')", "('V', 'ý')", "('c', '[')", "('“', 'c')", "('æ', ',')", "('$', 'G')", "('(', '/')", "('»', ';')", "('.', 't')", "('-', 'L')", "('9', 'A')", "('M', 'A')", "('C', '0')", "('ň', 't')", "('u', '>')", "('n', '\\u202f')", "('4', ' ')", "('ó', 'š')", "(' ', '~')", "('s', 'ū')", "('ģ', 'i')", "('ň', ']')", "('ã', ';')", "('Č', 'ū')", "('H', 'ē')", "('g', 'H')", "('ń', 's')", "('4', 'm')", "('é', 'ť')", "('S', 'M')", "('5', '1')", "(']', ')')", "('l', 'ü')", "('L', 'o')", "('ú', 'h')", "('9', '4')", "('–', 'b')", "('_', '5')", "('G', 'Z')", "('G', 'N')", "('«', 'r')", "('H', 'S')", "('h', 'F')", "(' ', '―')", "('E', 'Y')", "('<', '/')", "('I', '»')", "('O', 'P')", "('D', 'L')", "('R', 'A')", "('Ä', 'l')", "('í', 'h')", "('G', 'L')", "('T', 'p')", "('g', 'ł')", "('e', '“')", "('<', ' ')", "('d', ';')", "('ſ', 'a')", "('ë', 'g')", "('4', '4')", "(':', 's')", "('a', 'ř')", "('-', 'Q')", "('u', 'ę')", "('a', '[')", "('Ś', 'n')", "('C', 'S')", "('M', 'F')", "('T', 'P')", "('L', 'f')", "('G', 'y')", "('E', 'd')", "('ż', 'ż')", '(\'ã\', \'"\')', "('*', 'h')", "('P', ' ')", "('i', 'å')", "('p', 'æ')", "('3', 'm')", "('?', 'm')", "('!', '[')", "(']', '“')", "('⌈', 'É')", "('w', 'è')", "('R', ' ')", "('K', 'ä')", "('P', '.')", "('c', '_')", "('Č', 'e')", "('G', '1')", "('t', '+')", "('r', '–')", '(\'4\', "\'")', "('#', '2')", "(' ', 'þ')", "('č', 'l')", "('í', '-')", "('$', '(')", "('š', ',')", "('h', 'O')", "('p', 'š')", "('B', '0')", '("\'", \'_\')', "('l', 'ĵ')", "('N', 'ę')", "('L', 'é')", "(',', 'Ś')", "('N', 'a')", "('S', ' ')", "('}', ',')", "('3', 'R')", "('1', '<')", "('(', 'G')", "('x', '*')", "('p', 'ů')", "('s', 'ĵ')", "('«', 'h')", "('7', '*')", "('&', 't')", "('x', '<')", "('\\u200b', '\\u200b')", "('ä', 'b')", "('[', 'č')", "('ý', '-')", "('u', 'ĉ')", '(\'s\', \'"\')', "('w', 'R')", "('.', 'N')", "('L', 'ò')", "('⌉', ',')", '("\'", \'[\')', "('Z', 'C')", "('0', 'K')", "('ē', 'd')", "('ß', ';')", "('t', '`')", "(']', '⌉')", "('#', 'C')", "('k', ';')", "(':', 'g')", "('a', 'ŭ')", "('[', 'L')", "('ü', 'n')", "('m', '“')", "('ĉ', 'b')", "('ŭ', '?')", "('š', 'ņ')", "('F', 'j')", "('w', 'ä')", "('ī', 'r')", "('ā', 't')", "(' ', '2')", "('e', 'ö')", "('?', '…')", "('ø', 'm')", "('A', 'u')", "('ç', 'õ')", "('Ȝ', 'o')", "('_', 'm')", "('k', 'R')", "('ą', ',')", "('n', 'š')", "('ć', ' ')", "('F', 'ö')", "(' ', 'Y')", "('W', 'A')", "('ſ', 'q')", "('d', 'è')", "('k', '⌉')", "('ý', 'l')", "('😬', ')')", "('8', '0')", '(\'c\', "\'")', "('r', 'ê')", "('Ä', 'n')", "('§', ' ')", "('ň', 'a')", "('ž', 'ū')", "('ż', 'u')", "('ñ', 'e')", "('g', 'š')", "('k', 'ļ')", "('0', '-')", "('–', 'z')", "('t', 'W')", "('S', 'í')", "('ý', 'j')", "('j', 'ū')", "('ſ', 'w')", "('A', 'F')", "('á', 'c')", "('{', '!')", "('⌈', ',')", "('ņ', '(')", "('f', '[')", "('0', ')')", "('H', 'v')", '(\'"\', \'k\')', "('u', 'ģ')", "('–', ':')", "('R', 'T')", "('�', ' ')", "('ó', 'ů')", "('v', 'š')", "('/', 'z')", "('ø', 'p')", "('ą', 'l')", "('ř', ']')", "('7', '5')", "('a', 'š')", "('B', 'r')", "('p', 'T')", "('T', 'I')", "('b', '7')", "('ą', 'ź')", "('g', '–')", "('d', '8')", "(',', ';')", "('š', 'n')", "('L', 'A')", "('p', 'ū')", "('a', 'R')", "('`', '^')", "('s', 'ö')", "('ê', 'n')", "('_', 's')", "(' ', '»')", "('A', 'v')", '("\'", \'q\')', "('0', 'e')", "('&', ' ')", '(\'T\', "\'")', "('É', 'm')", "('_', 'K')", "('š', 'š')", "('f', ')')", "('r', 'ȝ')", "('é', 'L')", "('–', 'j')", "('g', 'ē')", "('Ö', 'y')", "('H', 'M')", "('ē', 'ļ')", "('ń', 'k')", "('l', '0')", "('ņ', 'š')", "('d', 'ū')", "('o', '/')", "('{', 'S')", "('\\u202f', 'i')", "('j', '⌉')", "('D', 'b')", "('j', 'ä')", "('ú', 'ď')", "('ü', 't')", "('_', '3')", "('里', '注')", "('2', 'b')", "('W', 'P')", "('r', '{')", "('b', 'ø')", "('i', '}')", "('\\xa0', 'p')", "('„', 'R')", "('k', 'O')", "('y', 'T')", "('v', ']')", "('g', '=')", "('Þ', 'y')", '(\'P\', \'"\')', '(\'ö\', "\'")', "('A', 'O')", "('Ī', 'z')", "('V', 'è')", "('g', 'á')", "('\\u202f', 'N')", "('«', 'B')", "('R', '-')", "('ř', ',')", "('i', 'ę')", "('y', '5')", "('v', '3')", "('w', '=')", "('ý', ']')", "('?', '’')", '(\'"\', \'z\')', "('s', 'ä')", "('c', '<')", "('E', 'Z')", '(\'页\', "\'")', "('r', '\\t')", "('ï', 'q')", "(',', '9')", "('e', 'P')", "('D', '8')", "('#', 'h')", "(';', ']')", "('æ', ':')", "('-', '4')", "('ī', 'z')", "('8', 'b')", "('ŝ', 'd')", "('«', 'J')", "('i', 'ż')", "('6', ')')", '(\'%\', \'"\')', "('æ', 'd')", "('o', 'ù')", "('þ', ' ')", "('z', '-')", "('k', '/')", "('”', ')')", "('⌈', 'r')", "(' ', ',')", "('}', ')')", "('p', 'W')", "('ř', 'm')", "('s', '(')", "(':', '»')", "('_', 'v')", "('~', '=')", "('$', 'H')", "('ł', 'a')", "('ø', 'ø')", "('B', 'ę')", "('(', 'Q')", "('N', 'E')", "('y', 'ó')", "('h', 'ã')", "('A', '\\xa0')", "('í', '“')", "('—', 'm')", "('|', 'e')", "('ë', 'z')", "('R', 'f')", "('o', '!')", "('c', 'ż')", "('$', 'e')", "('W', 'ü')", "('F', 'a')", "('c', '?')", "(')', 'a')", "('”', '”')", "('=', 'l')", "('K', 'l')", "('r', 'M')", "(':', 'U')", "('ä', 'i')", "('ć', 'm')", "('p', 'A')", "('d', '-')", "('-', 'T')", "('m', 'ŝ')", "('ī', 's')", "('\\xa0', 'P')", "('Z', 'ú')", "('ü', 'l')", "('[', 'i')", "(' ', 'æ')", "('c', 'î')", "('>', 'j')", "('-', 'ê')", "('č', 'o')", "('d', 'ý')", "('\\u202f', 'a')", "('S', 'P')", "(' ', 'Ķ')", "('t', '\\t')", "('A', 'n')", "(';', '\\u202f')", "('ķ', '.')", "('’', ',')", '("\'", \'9\')', "('E', 'R')", "('x', 'ſ')", "('ü', ' ')", "('r', 'ą')", "('k', 'ö')", "('%', 'l')", "('ć', 'b')", "('a', '=')", "('…', ',')", "('[', 'R')", "('C', 'é')", "('e', '\\xa0')", "('V', 'E')", "('Ī', 'j')", "('y', ']')", "('b', '0')", "('â', 'g')", "('…', '.')", "('s', 'ť')", "('|', '-')", "('W', 'i')", "('`', 'F')", "('n', 'C')", "('ź', 'd')", "('u', ')')", "('_', 'L')", "('b', 'F')", "(' ', '7')", "('l', 'ķ')", "(' ', '[')", "('.', 'b')", "('W', 'x')", "('s', 'ý')", "('D', 'å')", "('9', 'B')", "('ö', 'n')", "('b', 'ſ')", "('ś', 'r')", "('*', ',')", "(' ', 'Ĉ')", "('B', '4')", "('å', 'f')", "('4', ';')", "('e', 'N')", "('r', '�')", "('E', 'J')", "('ę', 'b')", "('a', 'ï')", "('[', 'o')", "('p', 'O')", "('D', 'X')", "('w', 'ę')", "('%', ' ')", "(':', 'O')", "('å', 'a')", "('D', 'y')", "('T', ' ')", "('9', '}')", "('e', '-')", "(',', 's')", "('ŝ', 'g')", "('V', 'o')", "('%', '%')", "('þ', ',')", "('«', 'j')", "('_', ' ')", "('–', 'm')", "('Z', 'I')", "('`', 'q')", "('î', 'm')", "('b', 'ä')", "('\\xa0', 'g')", "('ś', ',')", "('N', 'ī')", "('ŝ', '?')", "(';', ')')", "('ā', 'š')", "('~', ']')", "('N', 'ú')", "('O', 'ś')", "('y', 'ȝ')", "('g', '>')", "('1', '_')", "('R', ':')", "('p', ':')", "('ä', 'ß')", "('Z', 'e')", "('ĥ', 'l')", '(\'i\', \'"\')', "('ã', 's')", "('5', 'e')", "('š', 'h')", "('»', 'L')", "(';', ';')", "('ď', 'k')", "('“', 'Š')", "('B', 'w')", "('s', '—')", "('ê', 's')", "('ż', ',')", "('[', 'N')", "('x', '\\\\')", "('R', 'P')", "('$', 'U')", "('É', 'v')", "('1', '0')", "('#', '4')", "('g', 'V')", "('Z', 'g')", "('Â', 'n')", "('r', '2')", "('m', 'ą')", "('ò', 'm')", "('Ś', 'p')", "('M', 'ò')", "('n', ']')", "('e', '…')", "('L', 'Y')", "('O', 'ĥ')", "('A', 'L')", "(':', '4')", "('⌈', 'D')", "('–', 'R')", "('I', 'd')", "('m', 'å')", "('x', '5')", "('k', 'E')", "('S', 'ň')", "('[', 'P')", "('ū', 'p')", "('o', 'L')", "('k', '<')", "('G', 'l')", "('/', 'L')", "('C', 'ú')", '("\'", \'?\')', "('-', '?')", "('ź', 'e')", "('»', '?')", "(',', 'ř')", "('R', 'å')", "('P', 'O')", "('I', 'P')", "('ś', 'l')", "('2', '9')", "('$', 'E')", "('ě', '?')", "('D', '’')", '(\'f\', \'"\')', "('i', 'ú')", "('0', '5')", "('N', 'z')", "('z', 'ģ')", "('*', 'n')", "('S', 'á')", "('N', 'á')", "('ś', 'ż')", "('`', 'f')", '(\'v\', \'"\')', "('-', 'à')", "('ê', 'e')", "('Ŝ', 'o')", "('O', 'x')", "('-', '8')", "('ø', 'b')", '("\'", \'t\')', '("\'", \'E\')', "('_', '6')", "('X', '3')", "(';', 's')", "('f', ':')", "('p', 'â')", "('~', 'T')", "('ą', 'p')", "('À', 's')", "('P', 'n')", "('7', 'f')", "('š', 'r')", "('L', 'æ')", "('ë', 'm')", "('P', 'ä')", "('í', 'p')", "('o', '<')", "('ó', 'ň')", "('ļ', 'm')", "(' ', '’')", "('Ř', 'e')", '(\'"\', \'F\')', "('[', 'A')", "('U', 'L')", "('V', 'h')", "('W', 'B')", "('S', '-')", "('=', '2')", "('m', '4')", "('a', '´')", "('5', 'Z')", "('\\\\', 'e')", "('K', 'G')", "('ř', 'š')", "('h', '(')", "('k', 'X')", "('l', 'á')", "('è', ',')", "('F', '3')", "('D', 'c')", "('B', 'ý')", "('V', 'ů')", "('è', 'n')", "('M', 'R')", "('k', ',')", "('s', 'ž')", "('=', ' ')", "('P', 'o')", "('P', 'X')", "('ą', 'ł')", "('t', '/')", "('?', 'o')", "('f', '0')", "('J', 'f')", "('|', '\\\\')", "(':', 'R')", "('S', 'ò')", "('K', '.')", "('ž', 'b')", "('[', '!')", "('N', 'y')", "('r', '?')", "('v', 'â')", "('b', 'é')", "('u', 'ļ')", "('å', 'r')", "('N', 'j')", "('d', 'N')", "('g', '(')", "('+', '(')", "('A', 'k')", "('ů', ' ')", "('L', 'F')", "(';', '#')", "('î', 'n')", "('å', 'j')", "('i', '\\xa0')", "('&', ']')", "(' ', 'R')", '(\'"\', \'^\')', "('D', 'ä')", "(',', 'P')", "('4', '2')", "('v', '^')", "(' ', '0')", "('A', 'Z')", "('i', '\\xad')", "('ó', 'v')", "('ç', 'a')", "('当', '于')", "(':', ';')", "('#', '-')", "('L', 'S')", "('a', '“')", "('~', 'S')", "('4', 'A')", "('g', 'î')", "('%', 'w')", "('e', '4')", "('i', '(')", '(\'6\', \'"\')', "('2', 'V')", "('l', 'ż')", "('r', 'K')", "('N', 'g')", "('(', '9')", "(':', 'j')", "(' ', '\\xa0')", "('ť', 'ů')", "('L', 'à')", "('v', 'õ')", "('k', 'ü')", '("\'", \'@\')', "('ë', 'n')", "('(', 'd')", "('3', '9')", "('T', 'T')", "('g', 'ó')", "(' ', 'Ž')", "(',', 'C')", "('ŭ', 'h')", "('č', 'e')", "('k', 'ů')", "('ś', 'p')", "('G', 'è')", "('c', ')')", "('ť', ']')", '(\'W\', \'"\')', "('5', '(')", "('y', '(')", "('I', 'O')", "('ż', 'ą')", "('g', 'B')", "('<', 'U')", "('i', 'ĵ')", "('h', 'ü')", "(',', 'B')", "('B', 'R')", "('!', 'u')", "('ů', '?')", '(\'"\', \')\')', "('b', 'č')", "('č', 'ū')", "('i', 'ķ')", "('ä', ':')", "('C', 'm')", "('S', 'ä')", "('ļ', 'g')", "('⌈', 'l')", "('s', 'ł')", "('ô', 'ï')", "('(', '4')", "('_', 'P')", "('\\\\', ')')", "('0', ',')", "('i', 'ſ')", "('V', 'S')", "('ś', 'n')", "('ē', 'č')", "('L', '(')", "('ſ', 'h')", "('Y', 'Z')", "('F', 'u')", '("\'", \'M\')', "('j', 'č')", "('r', '=')", "(' ', 'Ď')", "('D', '9')", "('č', 'ů')", "('m', 'á')", '(\'"\', \'[\')', "('l', 'H')", "('L', 'ē')", "('3', '/')", "('-', 'ĝ')", "('q', 'F')", "('ó', 'z')", "('G', 'j')", "('a', 'ç')", "('_', 'i')", "('\\u202f', 'D')", "('ŭ', 's')", "('è', ' ')", "('j', 'ž')", "('_', 'D')", "('ï', 'd')", "('&', 'e')", "('S', '2')", "('ĉ', 'd')", "('l', 'š')", "('t', '=')", "('z', 'ê')", "('č', 'k')", "('6', '4')", "('1', ')')", "('ņ', 'ķ')", "('r', 'X')", "('f', 'ā')", "('!', 'T')", '("\'", \'h\')', "('`', 'l')", "('o', 'Š')", "('ö', 'r')", "('\\xad', ' ')", "(' ', 'Ĵ')", "('a', 'ó')", "('<', 's')", "('l', '4')", "('ü', 'g')", "('ļ', 'ū')", "('ź', 'b')", "('[', 'x')", '(\'x\', \'"\')', "('f', '>')", "('č', ':')", "('T', 'Y')", '(\'"\', \'e\')', "('⌈', 'Č')", "('.', 'o')", "('L', 'j')", "('<', 'g')", "('p', 'å')", "('%', '0')", '("\'", \'B\')', "('é', 'č')", "('%', '4')", "('i', '”')", "('h', 'Q')", "('(', '%')", "('2', 'D')", "('w', 'S')", "('ĥ', ':')", "('5', 'p')", '("\'", \'-\')', "('\\xad', 'd')", "('_', 'u')", "('A', '1')", "('s', 'ê')", "(':', 'N')", "('1', 'K')", "('o', 'á')", "('ē', 'ņ')", "('é', 'a')", "('F', 'E')", "('6', ';')", "('n', '.')", "('r', 'G')", "('«', 'n')", "('k', 'ā')", "('>', 'x')", "('ó', 'h')", "('á', '?')", "('U', ';')", "('(', '.')", "('c', 'ú')", "('6', 'p')", "('T', 'ē')", "('å', 'p')", "('G', 'h')", "('v', '>')", "('U', 'a')", "('z', 'č')", "('N', 'é')", "('I', 'z')", "('A', '⌉')", "(';', ' ')", "(';', '*')", "('ą', ')')", "('m', '[')", "('W', 'U')", "('„', 'L')", "('J', 'l')", "('4', 'g')", '(\'n\', \'"\')', "('s', 'W')", "('T', 'X')", "(',', '”')", '(\'5\', \'"\')', "('^', '1')", "('C', 'l')", "('ě', 'j')", "('C', 'â')", "('E', '4')", "('$', 'A')", "(')', '?')", "('š', 'é')", "('t', 'D')", "('ż', 'b')", "('\\xa0', 'Z')", "('2', 'v')", "('1', '(')", "('ż', 'k')", "('ż', 'n')", "('l', 'ą')", "('g', 'é')", "('E', 'w')", "('e', '1')", "('e', 'ó')", "('-', ';')", "('U', '.')", "('{', 'e')", "('D', 'l')", "('Y', 'D')", "('f', '?')", "('E', 'D')", "('«', 'l')", "('ó', 'o')", "('b', '’')", "('[', '✔')", "('S', 'L')", "('e', '[')", "('y', 'š')", "('P', 'a')", "('í', 'o')", "('ý', 'd')", "('Æ', 't')", "('Y', 'a')", "('a', 'ĝ')", "('ć', 'k')", "(' ', 'V')", "('ą', 'b')", "('H', 'ã')", "('l', 'ň')", "('5', '8')", "('ä', 's')", "(']', 'e')", "('w', 'ś')", "('’', 'V')", "('s', '[')", "('D', 'S')", "('ú', '.')", "('ā', 'ģ')", "('ò', 'z')", "('b', 'ĵ')", "('-', 'V')", "('=', 'f')", "('w', '+')", "('y', 'ň')", "('m', '”')", "('I', 'g')", "('6', 'C')", '(\'"\', \'J\')', "('ê', ',')", "('y', 'D')", "('k', 'ä')", "('é', 'p')", "('r', 'H')", "('i', 'ô')", "('l', '’')", "('a', 'X')", "('u', 'ň')", "('U', 'j')", "('ŭ', ':')", "(' ', 'ř')", "('á', '!')", "('⌈', 'B')", "('c', '`')", "('C', 'o')", "('t', 'O')", "('E', 'í')", "('6', 'b')", "('Í', 'e')", "('–', 'e')", "('$', 'd')", "(',', 'D')", '(\'"\', \'G\')', "('ů', 'c')", "('>', '.')", "('⌉', ';')", "('⌈', 'V')", "('–', 'k')", "('8', '*')", "('ſ', 'e')", "('R', 'y')", '(\'ã\', "\'")', "('o', '(')", "('O', '=')", "('7', '}')", "('d', 'õ')", "('T', '_')", "('\\xa0', 'é')", "('ĥ', 'm')", "('V', 'á')", "('í', 'ó')", "('U', 'ś')", "('r', 'ſ')", "('X', '1')", "('ę', ' ')", "('P', 'Y')", "('L', '\\\\')", "('ò', 'y')", "('ę', '?')", "('Z', 's')", "('@', 'T')", "('\\\\', '1')", "('o', '*')", "('ï', ',')", "('r', '—')", "('L', 'L')", "('9', ':')", "('t', ';')", "('T', 'V')", "('Ȝ', 'h')", "('ú', 'e')", "('P', 'i')", "('W', 'D')", "('5', ',')", "('P', 'ò')", "('Z', '_')", "('–', 'M')", "('.', '»')", "('6', '*')", "('ê', ';')", "('d', 'æ')", "('\\xa0', 'b')", "('$', 'o')", "('d', 'ä')", "('\\xa0', 'I')", "('A', 'D')", "('M', 'z')", "(',', 'h')", "('â', 'o')", "('„', 'K')", "('0', 'F')", "('s', '2')", "('g', 'ů')", "('A', '-')", "('s', '»')", '(\'R\', "\'")', "('H', 'å')", "('L', 'ž')", "('!', '\\\\')", "('\\u202f', 'E')", "('ø', 'd')", "('K', ' ')", "('\\t', '\\t')", "('Z', 'd')", "('}', '<')", "('o', 'ã')", "('-', 'I')", "('í', 'd')", '(\'L\', "\'")', "('g', 'ę')", "('š', 'u')", "('n', 'A')", "('\\u202f', 'T')", "('ȝ', 'h')", "('H', 'F')", "('h', '.')", "('Š', 'ť')", "('0', '&')", "('m', 'ê')", "('ů', 'm')", "('9', '0')", "('I', 'w')", "('n', '<')", "('d', 'P')", "('ï', ']')", "(' ', 'ò')", "('T', 'ø')", "('C', 'f')", "('E', 'T')", "('u', 'ś')", "('T', 'é')", "('T', 'â')", "('v', 'ž')", "(':', 'm')", "('!', ',')", "('ý', '!')", "('x', '`')", "('K', ',')", "('\\u202f', 'O')", "('Y', 'ö')", "('v', 'H')", "('i', 'š')", "('(', ' ')", "('“', 'Ó')", "('n', '>')", "('D', 'ě')", "('7', ')')", "('e', '6')", "(':', '-')", "(':', 'M')", "('m', 'û')", "('&', '&')", "('š', 'i')", "('Á', 'd')", "(':', 't')", '(\'a\', "\'")', "('é', 'm')", "('à', '.')", "('b', '!')", "('R', 'i')", "('O', 'þ')", "('k', 'ň')", "('l', 'E')", "('ļ', ';')", "('x', '-')", "('\\u202f', 'F')", "('’', 'D')", "('[', ':')", "('+', 'x')", "('M', 'á')", "('d', 'å')", "('ů', 'ř')", "('b', '3')", "('f', 'ů')", '("\'", \'7\')', "('e', 'Q')", "('r', '6')", "('7', 'd')", '(\'q\', \'"\')', "('I', 'j')", "('“', 'D')", "('l', '”')", "('i', 'S')", "('E', 'f')", "('S', 'T')", "('!', '/')", '(\'"\', \'x\')', "(':', 'É')", "('`', 'A')", '("\'", \'à\')', "('N', 'p')", "('5', ':')", "('P', 'ł')", "('A', 'j')", "('ē', '!')", "('ȝ', 'ſ')", "('ø', 'v')", "('í', 'n')", "('ß', '.')", "('M', 'ē')", "('j', 'þ')", '("\'", \'e\')', "('W', 'F')", "('ł', 'u')", "('M', 'Y')", "('ť', 't')", "('b', 'ū')", "('u', 'Z')", "(':', '2')", "('ó', '?')", "('b', '*')", "('T', 'ã')", "('4', ',')", "('„', 'r')", "('H', 'ä')", "('C', 'V')", "('-', '9')", "('r', 'T')", "(':', 'J')", "('B', 'd')", "('ů', 'h')", "('_', '_')", "('T', 'w')", "('ć', '.')", "(':', '{')", "('⌈', 'T')", "(']', 'f')", "('ò', 's')", "('r', 'è')", "('ž', 'l')", "('V', 'ř')", "('d', '[')", "('ł', 'ń')", "('e', 'T')", "('L', 'C')", "('U', 'F')", "('}', 'u')", "('l', 'R')", "('ā', 'ē')", "('O', 'U')", "('`', 'Z')", "('W', 'n')", '(\'o\', "\'")', "('$', 'g')", "('š', 'd')", "('9', 'T')", "('A', 'ĥ')", "('h', '!')", "('ä', '-')", "('d', 'ř')", "('p', '(')", '(\'I\', "\'")', "('„', 'M')", "('q', 'S')", '(\'"\', \'&\')', "('I', 'M')", "('h', '1')", "(':', '7')", "('9', '3')", "('ö', 'p')", "('t', 'ū')", "(';', '-')", "('/', 'O')", "('I', 'ŝ')", "('m', ')')", "('b', ')')", '(\'x\', "\'")', "('#', 'F')", "('Ö', 'm')", "('(', 'I')", "('k', 'H')", "('r', 'Z')", "('i', 'á')", "('Ö', 'g')", "('i', 'X')", "('æ', 'e')", "('n', 'N')", "(':', '~')", "('ý', 't')", "('8', '4')", "('2', 'I')", "('i', '`')", "('ŝ', ':')", "('^', '\\\\')", "('0', '6')", "('0', 'n')", "('n', 'O')", "('r', 'ů')", "('é', 'd')", "('A', 'ģ')", "('ȝ', 'w')", "('d', '`')", "('#', '#')", "('ě', 'ř')", "(',', ',')", '(\'.\', "\'")', "('d', 'ů')", "('ë', 'e')", "('–', '“')", "('b', 'D')", "('K', 'T')", "('ê', 't')", "('h', 'é')", "('⌈', 'č')", "('e', 'ķ')", "('ſ', 'd')", "('u', 'ů')", "('ŭ', 'c')", "('t', 'č')", "('Ł', 'a')", "('ł', 'y')", "('<', '~')", "('ŭ', 'a')", "('{', '.')", "('ž', 'á')", "('S', 'R')", "('2', 'K')", "('/', 'P')", "('[', 'É')", "('W', 'è')", "('.', 'z')", "('’', '-')", "('1', '.')", "('l', '…')", "('ø', 'e')", "('y', '/')", "('p', 'ž')", "('O', ';')", "('ó', '–')", "('J', 'ò')", "('—', ' ')", "('„', 'l')", "('V', '4')", "('J', 'w')", "(' ', 'ć')", "('g', '<')", "('ś', '(')", "('m', 'T')", "('M', '_')", "('s', 'ç')", "('E', 'g')", "('ĥ', 'r')", "('P', 'å')", "('`', 'o')", "('n', '’')", "('x', '3')", "('[', 'v')", "('ź', 'i')", "('7', '0')", "('a', ')')", "('k', 'ł')", "('1', 'A')", "('z', 'Y')", "('@', 'm')", "('2', 'c')", "('N', 'l')", "('ŭ', 'v')", "('é', ')')", "('q', 'B')", "('M', 'G')", "('T', 'ě')", '(\'"\', \'u\')', "('š', 'ū')", "('H', 'i')", "('í', 'r')", "('O', 'k')", "(',', '8')", "('U', 's')", "('ź', 'c')", "(' ', '-')", "('C', 'G')", "('(', 'h')", "('h', '_')", "('š', ']')", "('“', 'G')", "('.', '.')", "('$', 'b')", "('}', ':')", "('O', 'M')", '(\'7\', \'"\')', "('>', 'n')", "('`', 's')", "('_', 'r')", "('Y', 'L')", "('\\xa0', 'K')", "('%', 'Y')", "('E', '.')", "('r', 'F')", "('ů', 's')", "('`', '.')", "('p', '7')", "('>', 'N')", "('\\u200b', 'a')", "(']', '\\u202f')", "('n', 'Ģ')", "('ä', 't')", "('r', 'î')", "('.', 'v')", "('d', 'š')", "('’', 'O')", "('f', 'E')", "(' ', 'ó')", "('u', 'ç')", "('í', 'v')", "('(', 'z')", "('ī', 'g')", "('ô', 'l')", "('ļ', 'ļ')", "('N', '.')", "('h', '*')", "('0', ':')", "('4', ':')", "('D', 'î')", "('(', 'o')", "('ū', '?')", "('T', '=')", "('e', 'ĝ')", "('i', 'ř')", "('\\xad', 'm')", "('š', 'ó')", "('i', '“')", "('d', '(')", "('K', 'e')", "('4', 'p')", "('7', 'B')", "('d', 'ŝ')", "('u', '\\xad')", "(' ', 'Q')", "('r', 'R')", "('ļ', 'o')", "('U', 'b')", "('M', 'X')", "('ě', 'r')", "(' ', 'å')", "('ä', 'm')", "('[', ',')", "('S', 'ê')", "('2', 'p')", "('[', '_')", "('e', 'š')", "('Ķ', 'n')", "('(', 'q')", "('_', 't')", "('b', 'ī')", "('ô', 's')", "('b', 'è')", "('=', 's')", "('ť', 'o')", "(' ', 'Ö')", "('(', 'n')", "('v', 'á')", "('t', 'ň')", "('o', '»')", "('r', 'N')", "(':', '/')", "('r', '<')", '(\'N\', \'"\')', "('ĝ', 'd')", "('“', 'A')", "('k', '�')", "('D', 'ř')", "(' ', 'ſ')", "('8', '3')", "('ĝ', 'l')", "('u', 'ż')", "('l', 'B')", "('j', 'ī')", "('D', 'ò')", "('ā', 'r')", "('a', 'J')", "('<', 'r')", "('á', ',')", "('[', 'q')", "('v', ':')", "('j', 'ż')", "('T', 't')", "('*', ' ')", "('ĥ', 'i')", "('L', ']')", "('»', 'i')", "('*', 'l')", "('⌉', '!')", "('E', 'I')", "('ó', ':')", '(\'k\', \'"\')', "('\\u202f', 'l')", "('r', '\\xad')", "(' ', '=')", "('(', 'a')", "('ï', 's')", "('ā', ':')", "('>', 'v')", "('.', 'j')", "('⌈', 'A')", "(':', ':')", "('j', 'â')", "('@', 'i')", "('ŭ', 'ŝ')", "('f', '5')", "('W', 'J')", "('ř', 'i')", "('L', 'm')", "('$', 'D')", "('&', 'C')", "('H', 'Z')", "('_', 'x')", "('$', 'C')", "('í', 'u')", "('ď', 'a')", "('W', '5')", "('W', 'ż')", "('L', 'p')", "('R', '3')", "('U', 'm')", '(\'?\', "\'")', '(\'R\', \'"\')', "('R', 'D')", "('J', 'S')", "('-', 'C')", "('Y', 'ſ')", "('I', 'T')", "('d', '?')", '(\'l\', "\'")', "('ķ', 'u')", "(')', '[')", "('K', 'í')", "('[', 'H')", "('k', 'J')", '("\'", \'â\')', '(\'"\', \'X\')', "('ĉ', 'u')", "('S', 'z')", '(\'b\', "\'")', "('ĝ', 'o')", "('K', 'H')", "('F', '7')", "('u', 'ē')", "('$', 'I')", "(' ', 'Š')", "('ø', 'a')", '("\'", \'z\')', "('1', 'a')", "(' ', 'ž')", "('«', 'S')", "('(', 'U')", '(\'w\', \'"\')', "('x', 'ú')", "('š', 'ň')", "('i', 'Z')", "('n', 'ô')", '("\'", \'F\')', '("\'", \'w\')', "('C', 'ó')", "('m', 'ż')", "('V', 't')", "('%', '1')", "('V', '-')", "('<', 'C')", "('Z', 'ó')", "(';', '»')", "(',', 'e')", "('t', '>')", "('I', 'k')", '(\'B\', \'"\')', "('⌈', '[')", "('l', '<')", "('ķ', 'ā')", "('s', 'ú')", "('r', 'š')", "('2', '-')", "('h', 'ö')", "('*', '1')", "('h', 'I')", "(';', 't')", "('a', 'ć')", "('þ', 'o')", "('ó', '.')", "('/', ')')", "('O', 'ſ')", "('c', 'ã')", "('T', 'l')", "('ł', 'd')", "('W', ')')", "('`', '_')", "('j', ']')", "('ē', 'g')", "('s', 'õ')", "('I', ' ')", "('ę', ',')", "('.', '⌉')", "('ŝ', 'j')", "('ļ', 'i')", "('Z', 'l')", "('9', '1')", "('X', 'N')", "('N', 'å')", "('š', 'k')", "('C', 'A')", "('S', '_')", "('@', '(')", "('s', 'ē')", "('B', 'ó')", "('ą', ' ')", "('u', '…')", "('-', 'd')", "('[', 'B')", "('}', 'r')", "('l', 'ĥ')", "('g', 'ā')", "('ŝ', 'i')", "(' ', 'K')", "('2', ']')", '(\'[\', "\'")', "('ł', 'ż')", "('\\xa0', 'U')", "('é', 'j')", '(\'r\', \'"\')', '("\'", \'y\')', "('ê', 'x')", "('P', '_')", "('ú', ' ')", "('N', 'ä')", "('U', 'N')", "('.', 'i')", "('q', '_')", "('ù', ' ')", "('2', 'd')", "('A', 'e')", "('ú', 'a')", "('ö', 'g')", "('0', '=')", "('ł', 'e')", "('.', '\\\\')", "('\\xa0', 'H')", "('l', 'ī')", "('u', '’')", "('Ż', 'o')", "('s', 'R')", "('[', 'Þ')", "('H', 'E')", "('G', 'v')", "('#', 's')", "('D', 'H')", "('E', 'ſ')", "('S', 'å')", "('ĥ', ',')", "('Á', 'q')", "('’', 'I')", "('d', 'V')", "('D', 'ú')", "('þ', 'u')", "('d', 'ó')", "(':', '1')", "('=', 'd')", '("\'", \'O\')', "('w', '1')", "('ď', '⌉')", "('Ā', 'm')", "('[', 'u')", "('ö', 'ö')", "('A', 'B')", "('þ', 'h')", "('c', '5')", "('Ī', 'r')", "('t', 'ſ')", "('}', '}')", "('7', 'Z')", "('Ĵ', 'e')", "('v', 'î')", "('s', '\\xa0')", "('«', 'L')", '(\'ó\', "\'")', "('/', ' ')", "('?', '⌉')", "('Ŝ', 'e')", "('(', ',')", "('ĉ', ' ')", "('h', '>')", "('«', '»')", "('$', 'r')", "('H', 'n')", "('p', '[')", "('Ê', 'u')", '(\'t\', \'"\')', "('h', 'æ')", "('I', 'e')", "('T', 'G')", "('L', 'M')", "('?', '!')", "('C', ',')", "('a', 'ť')", "('6', '6')", "(' ', 'á')", "('ž', 'o')", "('i', 'æ')", "('\\u202f', 'v')", "('9', '5')", "('Z', 'ò')", "('ž', 'e')", "('v', '@')", "('7', 'u')", "('n', 'ĝ')", "('ń', ',')", "('ę', 'ź')", "('ć', 'e')", "('e', 'ņ')", "('z', 'ū')", "('I', 'b')", "(')', ')')", "('n', '2')", "('Č', 'l')", "('t', 'æ')", "(' ', 'ì')", "('A', 'p')", "('é', 'î')", "('-', 'í')", "('D', 'C')", "('[', 'ž')", "('d', 'ż')", "('c', 'é')", "('ý', ')')", "('面', '都')", "('C', '1')", '("\'", \'”\')', "('p', 'ā')", "('⌈', 'R')", "('J', 'ô')", "('A', 'ë')", "('t', 'ł')", "('f', 'ô')", "('y', 'ł')", "('á', 'q')", "('3', '2')", "('D', 'é')", "('H', 'W')", "('ñ', 'a')", "('x', '(')", "('H', 'j')", "('g', 'T')", "('x', '?')", '(\'m\', "\'")', "('G', 'ā')", "('ů', 'r')", "('ä', 'e')", "('/', '0')", "('🏴', ' ')", "('í', 'l')", "('G', 'ł')", "('<', 'S')", "('{', 'b')", "('»', 'M')", "('A', 'S')", "('e', 'D')", "('s', '\\\\')", "('V', 'Z')", "('ł', ';')", "('[', 's')", "('N', 'i')", "('}', 'e')", "('D', 'U')", "('q', '<')", '(\';\', \'"\')', "('b', '4')", "('ř', ':')", "('E', 'e')", "('ĝ', 'u')", "('s', 'U')", "('J', 'ö')", '(\'"\', \'>\')', "('ą', '!')", "('N', 'ā')", "('/', '/')", "('\\u202f', 'n')", "('E', 'ú')", "('D', '(')", "('ń', '!')", "('ò', ',')", "('7', '<')", "('M', 'V')", "('S', 'ö')", "('I', '6')", "('f', '(')", "('ī', ')')", "('#', '3')", "('J', 'h')", "('C', 't')", "('y', 'â')", "('X', '(')", "('f', '!')", "('@', 'r')", '(\'V\', \'"\')', "('z', 'ü')", "('!', 'F')", "('ï', 'c')", "('r', '”')", "(' ', 'ȝ')", "('a', '/')", "('ŭ', 'g')", "('I', '’')", "('t', 'ā')", "('F', 'l')", '(\'h\', \'"\')', "('>', '%')", "('Ĝ', 'O')", "('f', 'û')", "('R', 'í')", "('v', 'ī')", "('ý', 'z')", "('ż', ';')", "('[', 'F')", "('(', 'V')", "('É', ' ')", "('Ê', 'f')", "('(', 'Y')", "('g', 'ò')", "('ž', 'd')", "('$', 'v')", "('6', 'Z')", "('é', ':')", '(\'"\', \'=\')', "('k', ']')", "('`', 'r')", "('T', 'D')", "('v', '.')", "('s', 'G')", "('n', 'W')", "('{', '-')", "('G', ',')", "('D', '}')", "('š', 'z')", "('t', 'ü')", "('\\xa0', '!')", "('n', '-')", "('R', 'e')", "('G', ':')", "('(', '_')", "('(', 'k')", "('@', '1')", "('U', 'g')", "(' ', 'Ł')", "('S', 'W')", "('ņ', 'ā')", "('m', 'ſ')", "('R', 'z')", "('p', '2')", "('Q', ' ')", "('2', ' ')", "('J', 'é')", "('#', '5')", "('Ó', '!')", "('Ä', 'r')", "('ö', ',')", "('Š', 'ā')", "('F', 'ā')", "('ł', 'p')", "('2', 'F')", "('é', 'l')", "('n', '_')", "('W', 'L')", "('Y', 'G')", "('Á', 'v')", "('»', 'm')", "('S', 'S')", "('å', 'i')", '(\'F\', \'"\')', "('2', 'C')", "('r', 'ó')", "('t', ':')", "('@', 'O')", "('ę', 'ć')", "('P', 'H')", "('O', 'Y')", "('J', 's')", "('S', 'i')", "('m', 'æ')", "('-', 'Š')", "('»', ')')", '(\'"\', \'C\')', "('Í', 'š')", "('ē', 'n')", "('O', 'E')", "('‘', 'M')", "('o', ']')", "('`', 'B')", "('l', '\\\\')", "('à', 'b')", "('«', 'u')", "('—', 'a')", "('ę', 'w')", "('„', 'C')", "('r', '7')", "('Z', 'K')", "(':', 'd')", "('„', 'd')", "('ē', ';')", "('M', 'Ã')", "('i', 'ȝ')", "('ā', 'm')", "('ī', 'ģ')", "(',', ' ')", "('ī', 'd')", "('ę', 'z')", "('+', '4')", "('R', 'S')", "('þ', 'c')", '("\'", \'N\')', "('\\u202f', 'U')", "('l', 'ſ')", "('r', 'ç')", "('M', 'o')", "('[', 'K')", "('D', 'w')", "('t', '»')", "('X', 'a')", "('þ', 'e')", "('*', 'a')", "('}', '$')", "('3', 'd')", "(']', '–')", "('h', 'ø')", "('{', '[')", "('e', 'ē')", "('Ú', 'p')", "('t', '§')", "('R', '_')", "('g', 'P')", "('E', '1')", "(')', 'l')", "('x', '.')", "('ȝ', 'i')", "('a', 'ś')", '("\'", \',\')', "('u', 'F')", "('(', 'v')", "('x', 'ã')", "('f', 'ò')", "('W', 'O')", "('ī', 'č')", "('y', 'ú')", "('o', 'ê')", "('7', '-')", "('å', 'b')", "('0', ';')", "('ī', '”')", "('r', '4')", "('/', 'v')", "('/', 'n')", "('N', 'A')", "('E', '7')", "('t', 'ø')", "('»', 'p')", '(\'"\', \'5\')', "('»', 'l')", "('D', '.')", "('ž', 'ē')", "('(', 'ĉ')", "('i', 'N')", "('ě', 'h')", "('6', 'd')", "('9', '/')", "('7', '9')", "('k', 'è')", "('F', 'I')", "('y', 'ń')", "('\\\\', '\\\\')", "('\\\\', 'E')", "(' ', 'Ŝ')", "('I', 'ž')", "('3', 'A')", "('V', '[')", "('e', '(')", "('g', 'ū')", "('–', 'J')", "('l', 'ç')", "('Ł', 'u')", "(' ', '<')", "('S', '>')", "('e', ';')", "('-', 'N')", "('U', 'ž')", "('ň', '.')", "('n', 'ů')", "('-', 'ø')", "('M', 'ó')", "('8', '-')", "('>', '@')", '(\':\', \'"\')', '(\'7\', "\'")', "('*', 'T')", "('f', 'S')", "('7', ':')", "('*', 'v')", "('k', '[')", "('ę', 'g')", "('m', 'C')", "('ū', 'ņ')", "('j', '–')", "('r', 'õ')", "('ê', 'u')", "('0', 'p')", "(' ', 'D')", "(' ', 'ê')", "('L', '=')", "('û', 'n')", "('=', '\\\\')", "('ť', 'u')", "(' ', 'J')", "('E', '9')", "('ä', 'u')", "('\\xa0', 'Ž')", "('y', '}')", "('C', ')')", "('P', 'ě')", "('S', 'â')", "('F', 'e')", "('i', 'ą')", "('n', 'G')", "('J', '.')", "('m', '.')", "('ý', 'ž')", "('P', 'ö')", "('T', 'f')", "('W', 'c')", "('r', 'I')", "('k', 'ĥ')", "('G', 'D')", "('i', '⌈')", "('ú', 'l')", "('ó', 'ś')", "('?', '»')", "(';', 'I')", "('z', '”')", "('ò', ' ')", "('ś', 'k')", "('_', 'H')", "('ź', ' ')", "('ú', 'y')", "('_', ')')", "('d', 'O')", "('L', 'Ĉ')", "('!', 'b')", "('k', '0')", "('I', 'C')", "('Ö', 'l')", "('c', '{')", "('ņ', 'p')", "('!', '»')", "('a', 'ô')", "('l', '}')", "('-', ']')", "('5', 'A')", "('u', 'ī')", "('p', 'P')", "('i', 'ž')", "('—', 'E')", "('T', 'á')", "('v', '!')", "('L', 'v')", "('|', '_')", "('C', 'k')", "('n', 'T')", "('r', '.')", "('⌈', 'v')", "('ā', 'j')", "('m', 'ú')", "('w', 'T')", "('/', '[')", "('f', 'î')", "('y', 'S')", "('S', 'ī')", "('\\xa0', 'r')", "('!', ' ')", "('i', 'ê')", "('[', '{')", "('ņ', ' ')", "('(', '!')", "('h', 'B')", "('D', 'i')", "('ú', 'ř')", "('W', 'o')", "('t', '?')", "('(', 'P')", "(' ', '}')", "('h', ']')", "('e', 'ø')", "('B', '.')", "('T', '.')", "('a', 'ß')", "('a', '$')", "('ž', 'ā')", "('ņ', 't')", "('B', 'ø')", "('1', '5')", "('n', 'ŝ')", "('s', ':')", '(\'é\', \'"\')', "('ś', 'c')", "('b', '(')", "('\\xa0', 'D')", "('ž', 'ď')", "('č', 'č')", "('n', 'ò')", "('E', 'ģ')", "('y', 'å')", "('e', 'û')", '(\'ú\', \'"\')', "('N', 'm')", "('(', 'r')", "('5', 'm')", "(';', 'v')", "('–', 'p')", "('e', 'ŝ')", "('2', '}')", '("\'", \'%\')', "('B', 'ö')", "('I', 'X')", "('w', 'H')", "('Y', '/')", "('&', 'D')", "('e', '3')", "('»', 't')", "('ī', ' ')", "(',', 'T')", "('N', 'C')", "('J', 'ø')", "('a', '!')", "('ŭ', 'r')", "('B', 'ú')", "('v', 'ſ')", "('ó', 'm')", "('i', 'M')", "('y', 'ť')", "('w', 'ó')", "('m', 'N')", "('ĉ', 'l')", "('O', 'š')", "('s', '“')", "('n', 'ť')", "(']', 'a')", "('ô', '-')", "('}', 's')", "('i', '1')", '(\'H\', \'"\')', "('ē', 'š')", "('Y', '_')", "(',', '所')", "('t', 'í')", "('r', 'ò')", "('B', 'O')", "('«', 'o')", "('K', 't')", "('>', '/')", "('/', '%')", "('K', 'd')", "('A', '3')", "('ȝ', 'u')", "('k', '-')", "('ī', 'l')", "('o', '⌉')", "('N', 'w')", "('á', ')')", "('N', ')')", "('v', '’')", "('Ł', 'z')", "('p', 'H')", "('é', 'ř')", "('å', 't')", "('v', 'ŝ')", "('m', ']')", "('»', 'u')", '(\'I\', \'"\')', "('ī', 'c')", "('d', 'X')", "('f', '\\\\')", "('w', ';')", "('M', 'I')", "('l', 'ŝ')", "('„', 'a')", "('\\u202f', 's')", "('E', 'P')", "('I', 'ä')", "('-', 'u')", "('P', 'l')", "('_', 'R')", "('?', 'p')", "('-', 'æ')", "('»', 'T')", "('o', '?')", '(\'"\', \'`\')', "('\\u202f', '»')", "('u', '—')", "('t', 'I')", "('<', 'D')", "('P', ',')", "('2', 'N')", "('5', 'F')", "('P', 'ã')", "('t', '*')", "(' ', 'ē')", "('I', 'a')", "('ķ', 'e')", "('ł', ')')", "('x', 'õ')", "('ö', 'ä')", "('|', 'p')", "('í', 'ž')", "('_', 'V')", "('[', 'l')", "('4', '/')", "('ť', '⌉')", "('é', 'ï')", "('k', 'B')", "('%', ';')", "('x', '/')", "('í', 'q')", "('L', 'B')", "(' ', 'Á')", "('i', '+')", "('T', 'L')", "('J', 'm')", "('w', '3')", '(\'=\', "\'")', "('h', 'œ')", "('r', 'ž')", "('ö', 'c')", "('y', 'ž')", "('ý', 's')", "('L', 'ī')", "('Å', 't')", "('A', 'z')", '(\'"\', \'B\')', "('V', 'b')", "('y', 'P')", "('ē', ':')", "('[', '8')", "('Y', 'W')", "('ż', 'r')", "('8', 'H')", "('“', 'e')", "('á', ':')", "('þ', 's')", "('[', 'b')", "('B', 'N')", "('{', 'J')", "('m', '*')", "('o', 'H')", "('–', 'l')", "('x', 'L')", "('í', 'g')", "('ž', ';')", "('`', 'I')", "(' ', '…')", "('s', '$')", "('(', 'ē')", "('2', 'J')", "('S', 'æ')", "('2', '7')", "('1', 'M')", "(' ', 'Ģ')", "('d', 'û')", "('T', ';')", "('c', 'œ')", "('l', '—')", "('ņ', 'k')", "('Z', 'ū')", "('d', 'W')", "('/', '`')", "('ū', '.')", "('ä', 'n')", "('M', 'å')", "('V', 'z')", "('E', 'q')", "('u', 'J')", "('{', 't')", "('ř', 'n')", "('j', '-')", "('C', 'æ')", "('»', 'G')", "('„', 'A')", "('ū', ';')", '("\'", \'R\')', "('“', 'Ķ')", "('ŭ', 't')", "('Í', 'k')", "('t', '{')", "('ě', 'a')", "('+', '7')", "('`', '(')", "('Ā', 'd')", "('A', ',')", "('o', 'X')", "('9', 'n')", "('.', 'É')", "('G', 'T')", "('(', 'S')", "('ĝ', 'a')", "('d', 'L')", "('\\xa0', 'h')", "('?', '\\\\')", "('„', 'D')", '("\'", \')\')', "('ô', 'o')", "('ĉ', 'x')", "('ô', 'm')", "('$', 'N')", "('N', 'M')", "('C', 'H')", "('h', ')')", "('j', '?')", "('K', 'ł')", "('g', '�')", "('é', '-')", "('>', 'o')", "('t', '”')", "('?', 'P')", "('å', 'e')", "('R', 'ô')", "('L', ':')", "('(', '*')", "('9', 'b')", "('E', 'V')", "('k', 'ř')", "('j', 'í')", "('N', 'O')", "('x', 'A')", "('ņ', '!')", "('D', 'ý')", "(':', 'u')", "('c', '!')", "('ů', 'k')", "('A', 'C')", "('Y', 'o')", "('u', 'ë')", "('a', 'ń')", '("\'", \'g\')', "('⌈', 'm')", "('w', ':')", "('e', 'é')", "('#', 'b')", "('B', 'í')", "('ź', '.')", "('Y', 'Y')", "('`', '{')", "('F', 'T')", "('.', '8')", "('3', '(')", "('o', 'E')", "('t', 'ý')", "('\\xa0', 'ú')", "('ø', 't')", "('i', 'ē')", "('e', 'B')", "('č', 'n')", "('I', 'h')", "('H', '8')", "('b', 'á')", "('z', '–')", "('#', 'u')", "('d', ',')", "('L', 'ü')", "('L', '+')", "('B', 'ē')", "('s', 'P')", "('ā', 'ķ')", "('æ', 'n')", "('a', 'ż')", "('/', 'w')", "('a', 'Z')", "('`', 'e')", '(\'"\', \'r\')', "('L', 'ê')", "('0', 'D')", "('p', 'ò')", "('-', '$')", "('\\u202f', 'L')", "('@', 'p')", "('W', 'X')", "(' ', '–')", "('å', '!')", "(':', '8')", "('T', 'ā')", "('y', '?')", "('D', '4')", "('D', '\\\\')", '(\'"\', \'—\')', "('ā', 'ļ')", "('é', '…')", "('s', 'í')", "('l', 'G')", "('<', '>')", "('N', 'T')", "('–', 'K')", "('é', 'f')", "('(', ':')", "('9', ',')", "('í', 'k')", "('l', 'Z')", "('l', 'S')", "('ū', 'b')", "('k', '^')", '("\'", \']\')', "('!', 'c')", "('F', 'ü')", '(\'"\', \'Y\')', '(\'"\', \'S\')', '("\'", \'c\')', "('B', 'é')", "('o', 'ç')", "('z', '{')", "('Á', 'f')", "('Y', 'v')", "(',', '{')", "('M', '-')", "('ĵ', 'o')", "(':', 'k')", "('P', 's')", "('ó', 'x')", "('N', 'è')", "('O', 'm')", "('G', 'd')", "('7', 'C')", "('⌈', 'o')", '(\'2\', \'"\')', "('`', 'ȝ')", "('u', 'è')", "('ķ', 'a')", "('k', 'I')", "('.', 'Q')", "(' ', '@')", "('V', 'n')", "('ņ', ';')", "('ĥ', 'ŝ')", "('e', '{')", "('C', '_')", "('I', '\\\\')", "('á', 'n')", "(' ', '§')", "('3', '}')", "('V', 'ě')", "('!', 'V')", "('*', 'f')", "('ø', 'r')", '(\'~\', \'"\')', "('č', 'c')", "('ż', 'd')", "('{', 'l')", "(')', ';')", "('/', '\\\\')", "('ņ', 'i')", "('3', ',')", "('p', 'ç')", "('Ö', 'd')", "('9', '6')", "(' ', 'Æ')", "('G', 'u')", "('ů', '…')", "('l', '$')", "('H', 'r')", "('ē', 'p')", '("\'", \'`\')', "(',', '’')", "('É', 'f')", "('R', 'E')", "('A', ':')", '("\'", \'*\')', "('Ü', 'i')", "('-', 'M')", "('!', 'B')", "('L', 'Ô')", "(' ', 'Ç')", "('(', 'F')", "('U', 'M')", '(\'"\', \'W\')', "('m', '!')", "('K', 'n')", "('`', 'W')", "('l', '9')", "('e', 'ë')", "('T', 'o')", "('V', 'i')", "('E', 'G')", "('<', 'v')", "('g', 'I')", "(':', 'Z')", "('=', 'a')", "('v', 'ř')", "('e', 'I')", '(\'"\', \'a\')', "('»', ':')", "('!', 'i')", "('8', 'E')", "(' ', 'ö')", "('ň', 'ů')", "('W', 'w')", "('ô', ' ')", "('3', '3')", "('þ', 'd')", "('Š', 'ū')", "('…', '\\u202f')", "('š', 'ú')", "('&', 'g')", "('í', '⌈')", "('ā', ')')", "(',', '5')", "('e', '/')", "('?', '”')", "('m', '—')", "('Š', 'i')", "('ř', 'o')", "('#', '8')", "('8', 'm')", "('?', '\\u202f')", "('č', 'ī')", "('H', 'G')", "('ó', '\\xa0')", "('a', '”')", "('n', '\\xad')", '(\'å\', "\'")', "('H', '9')", "('X', 'u')", "('4', '}')", "('l', '*')", "('“', 'R')", "('s', 'Q')", "('á', '”')", "('“', '⌉')", '("\'", \'W\')', "('o', ',')", "('b', 'ž')", "('b', 'ý')", "('ç', 'o')", "('é', 'š')", "('[', 'ř')", "('u', 'é')", "('À', ' ')", "('m', '=')", '(\'"\', \'#\')', "('c', 'ç')", "('[', 'f')", "('/', '4')", "('Ä', 'g')", '(\'(\', "\'")', "('5', 'k')", "('v', 'œ')", "('„', 'O')", "('n', 'H')", "('—', ',')", "('\\u202f', 'œ')", "('>', 'B')", "('A', 'ť')", "('y', 'é')", "('‘', 'I')", "('7', '1')", "('v', 'W')", "('t', '[')", "('-', 'ŝ')", "('é', '!')", "('L', 'ż')", "('í', 'č')", "('D', 'â')", '(\'"\', \'é\')', "('K', 'Z')", "('0', 'f')", "('O', 'S')", "('ż', 'ł')", "(' ', 'Ó')", "('h', '…')", "('h', 'å')", "('b', 'S')", "('w', 'F')", "(']', '-')", '(\'S\', \'"\')', "('(', 'e')", "('p', '\\\\')", "('1', '%')", "('`', 't')", "('ļ', 'u')", "('u', 'ȝ')", "('V', 'ê')", "('8', '.')", "('`', ';')", "('o', '.')", "('3', 'C')", "('S', '\\xa0')", "('ŝ', 'a')", "('Æ', 'r')", "('[', 'g')", "('h', ',')", "('J', 'ä')", "('S', 'ā')", "('w', 'B')", "('E', '?')", "('_', 'B')", "('K', ':')", "('»', 'd')", "('`', '\\\\')", "('L', '.')", "('a', '»')", "('z', 'ā')", "('‘', 'V')", "('t', 'þ')", "('ĉ', 'v')", "('k', 'ú')", "('û', ' ')", "('i', 'ë')", "('i', 'ò')", "('”', ']')", '(\'"\', \'\\\\\')', "('m', 'ò')", "('1', 'c')", "('x', '2')", "('ô', '.')", "('{', '(')", "('e', 'č')", "('ā', 'h')", "('ŭ', 'n')", "('þ', '?')", "('\\u202f', 'É')", "('e', 'ò')", "('E', '8')", "('ë', ' ')", "('B', '_')", "(',', ']')", "('š', 'ķ')", "('#', '(')", "('}', 'j')", "('_', 'f')", "('6', 'B')", '(\'"\', \'D\')', "('ū', 'k')", "('R', 'a')", "('{', '0')", "('A', 'ķ')", "('Ĉ', 'u')", "('B', 'G')", "('o', 'š')", "('m', '?')", "('ó', ',')", "(')', '%')", "('č', 'r')", "('I', 'V')", "('s', 'F')", "('f', '-')", "('ť', '.')", "('h', 'ê')", "('+', '5')", "('x', 'I')", "('ī', 'š')", "('n', 'ā')", "('(', '[')", '(\'d\', \'"\')', '(\'s\', "\'")', "('M', 'í')", "('V', '_')", '(\'ä\', \'"\')', "('a', 'W')", "('Ā', 'b')", "('l', 'I')", "('l', '+')", '(\'\\\\\', \'"\')', "('/', '*')", "('⌈', 'h')", "('c', 'ł')", "('w', 'ü')", "('-', 'ö')", "('G', 'ó')", "('5', '2')", "('w', '_')", "('é', 'S')", "('l', '!')", "('“', 'B')", "(' ', 'ļ')", "('p', ']')", "('þ', 'a')", "('M', 'J')", "('ã', ',')", "('>', 'w')", "('z', ';')", "('W', 'l')", "('N', '»')", "('R', 'é')", "('è', 'k')", "('0', 'a')", "('u', '_')", "('é', '\\u202f')", "('k', '2')", "('X', 'e')", "('ů', 'd')", '(\'{\', \'"\')', '(\'y\', \'"\')', "(']', 'c')", "('_', 'q')", "('1', 'p')", "('I', '?')", "('}', 'm')", '(\'"\', \'U\')', "('Ķ', 'ī')", "('š', 'ť')", "('K', ')')", "('l', '-')", "('ś', 'b')", "('ø', 'l')", "('“', ',')", '(\'5\', "\'")', "('s', '}')", "('<', 'p')", "('d', 'J')", "('č', ';')", "('s', 'ã')", "('e', 'ů')", "('a', 'ſ')", "('s', 'A')", "('5', 'h')", "('ĵ', 'a')", "('I', '!')", "('J', 'E')", "('_', 'U')", "('N', 'F')", '(\'0\', "\'")', "('&', '!')", "('$', 'w')", "('n', '(')", "('h', 'í')", "('ť', 'á')", "('!', '⌉')", "('4', 'C')", "('=', 'P')", "('t', '⌉')", "('I', 'm')", '(\'U\', \'"\')', "('í', 'y')", "('V', '(')", "('“', '-')", "(',', 'c')", "('O', '.')", "('u', 'ß')", "('(', '1')", "(':', '3')", "('č', '⌉')", "('e', 'ĉ')", "('Y', 'c')", "('.', '9')", "('V', 'N')", "('.', '$')", "('_', 'b')", '(\'k\', "\'")', "('`', 'J')", "('w', 'L')", "('q', 'I')", "('Ó', ' ')", "('R', '6')", "('R', 'æ')", "('所', '有')", "('–', ',')", "('!', 'E')", "('u', 'č')", "('Ý', ' ')", "('2', ':')", "('l', 'ĉ')", "(' ', 'š')", "('A', 'd')", "('ś', '.')", "('ſ', 'y')", "('`', ',')", "('e', 'â')", "('a', 'ň')", "('Z', 'T')", "('B', 'å')", "('Ē', 'r')", '(\'}\', "\'")', "('k', 'P')", '("\'", \'\\\\\')', "('ť', ' ')", "('j', ';')", "('l', 'æ')", "('o', 'P')", "('_', ';')", "('s', 'č')", "('w', 'D')", "('á', 'd')", "('ī', '-')", "('D', 'm')", "('l', 'ú')", "('U', 'ř')", "('$', 'R')", "('\\xa0', 'i')", "('H', '3')", "('X', '.')", "('J', 'K')", '("\'", \'v\')', "('`', 'k')", "('—', '.')", "(']', 'b')", "('w', '!')", "('I', 'L')", "('T', 'j')", "('ø', 'o')", "('ä', ' ')", "('h', ';')", "('.', ',')", "('Í', '–')", "('Y', 'F')", "('d', '”')", "('ß', 't')", "(';', 'P')", "('«', 'p')", "('T', 'r')", "('T', 'O')", "('s', 'â')", "('i', 'ã')", "('x', '9')", "('r', '(')", "('C', 'B')", "('t', 'C')", "(')', 'X')", "('z', 'ē')", "('u', 'í')", "('ĥ', ' ')", "('ſ', 'c')", "('ā', 'ž')", "('D', 'o')", "('O', ',')", "('ł', 'ó')", "('ž', '⌉')", "('⌈', 'Ř')", "('/', 'A')", "(',', '[')", "('P', 'ř')", "('Ó', 'b')", "('e', 'M')", "('1', 'L')", "('e', 'ß')", "('ł', '!')", "('Ä', 'k')", "('0', '9')", "('n', '”')", "('á', ' ')", "('ö', '-')", "('n', 'ě')", "('É', 't')", "(' ', 'ď')", "('„', 'j')", "('l', 'ȝ')", '(\'6\', "\'")', "('u', 'æ')", "(' ', 'ç')", "('o', 'ķ')", "('\\xa0', 's')", "('Z', 'M')", "(':', ']')", "('l', 'ö')", "('$', 'i')", "('e', 'á')", "('a', '?')", "('d', 'D')", "('o', '’')", "('æ', 'a')", "('Š', 'Ī')", "('!', '}')", "('`', 'm')", "('I', 'A')", "('u', 'ú')", "('ŭ', ',')", "('’', ';')", "('u', 'å')", "('r', 'ŝ')", "('(', 'ž')", "('î', 'b')", "('s', '1')", "('t', 'ŝ')", "('k', 'ą')", "('*', 'u')", "('“', 'w')", "('T', 'ä')", "('C', '.')", "('T', 'h')", "('1', '8')", "('-', 's')", '(\'"\', \'V\')', "('>', 'A')", "('y', 'R')", "('u', 'î')", "('3', '\\\\')", "('H', 'ů')", "('Ē', 'f')", "('m', 'ň')", "(':', '«')", "('⌈', 'ó')", '(\'w\', "\'")', "('h', 'ó')", "('^', ' ')", "('d', 'F')", "('f', '$')", "('å', '?')", "('Y', 'l')", "('l', 'í')", "('T', 's')", "('ë', 'r')", '(\'_\', \'"\')', "('a', 'ĥ')", "('r', 'ã')", "('f', '7')", "('-', 'ã')", "('.', '1')", "('ī', ',')", '(\'"\', \'🏴\')', '(\'z\', "\'")', "('(', ')')", "(')', 'e')", "('ĵ', 'd')", "('R', 'ã')", "('/', 'p')", '(\'"\', \'7\')', "('Ĝ', 'e')", "('}', '[')", "('U', 'B')", "('»', 'ä')", "('N', 'Y')", "('}', '.')", "('»', ' ')", "('«', 'O')", "('\\\\', 'n')", "('e', 'ć')", "('⌈', 'š')", "('e', 'K')", "('c', 'ū')", "('p', 'þ')", "('2', 'L')", "('r', 'ī')", "('n', 'V')", "('<', 'm')", "('W', 'S')", "('[', 'S')", "('3', '-')", "('z', 'ý')", "('O', 'R')", "('-', 'Ģ')", "('a', '\\xa0')", "('ć', ':')", "(')', '*')", "('y', 'ď')", "('M', ',')", "('ī', 'ļ')", "('Å', 'r')", "('»', 'K')", "('s', '\\u202f')", "('ï', 'u')", "('»', 'r')", "('s', 'ż')", "('?', ';')", "('N', '-')", "('á', 'ř')", "('K', 'è')", "('>', ',')", "('I', 'I')", "('<', '?')", "(' ', 'Ĝ')", "('„', 't')", "('{', 'W')", "('o', 'ó')", "('f', 'â')", "('w', '\\\\')", "('ī', 'ķ')", "('s', 'B')", "('q', '4')", "('b', ']')", "('(', 'K')", "('ů', 'š')", "('(', 'é')", "('ȝ', 'þ')", "('e', ')')", "('ł', 'w')", '(\'ê\', "\'")', "('R', '=')", "('U', 'Z')", "('j', 'ó')", "('?', 'l')", "('p', 'î')", "('>', 'a')", "('ĥ', 'd')", "('z', 'è')", "('l', '.')", "('b', 'M')", "('o', 'V')", "('z', 'ů')", "('Ā', 'v')", "('>', 'd')", "('_', 'c')", "('D', 'O')", "('å', '-')", "('h', '“')", "('/', 'M')", "('ó', 'k')", "('m', 'I')", "('O', 'ń')", "('V', '\\xa0')", "('R', 'O')", "('M', 'ę')", "('a', '…')", "('R', '/')", "(' ', 'ĝ')", "('N', 'æ')", "('s', '!')", "('J', 'I')", "('R', 'o')", "(':', ')')", "('>', '1')", "('u', 'ž')", "('M', 'C')", "('B', 'o')", '(\'`\', "\'")', "('=', '%')", "('E', '!')", "('U', 'č')", "('w', 'ö')", "('e', ']')", "('E', 'l')", "('S', 'X')", 'label']
--------
uniques:
Index(['Shell', 'Polish', 'Portugese', 'Modern Ecclesiastical Latin', 'Dutch',
       'Haitian', 'Norwegian', 'English', 'Latvian', 'Middle English',
       'Cebuano', 'Esperanto', 'Finnish', 'French', 'Swedish', 'Czech',
       'random', 'Assembly', 'keyboard_mash', 'JSON', 'German', 'GDScript',
       'Lua', 'keyboard_mash_dvorak_simulated', 'Java', 'HTML', 'Typescript',
       'python', 'R', 'cpp', 'Haskell', 'OCaml', 'go', 'Kotlin', 'JS', 'Rust',
       'php', 'ruby', 'sql'],
      dtype='object')
length of uniques: 39
--------
running trial 0
--------
train_y:
[ 2 14 26 ...  2 12  5]
--------
train_X:
       ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                         ...
1001            0           0           0  ...           0           0           0
1002            0           0           0  ...           0           0           0
1003            0           0           0  ...           0           0           0
1004            0           0           0  ...           0           0           0
1005            0           0           0  ...           0           0           0
...           ...         ...         ...  ...         ...         ...         ...
9996            0           0         403  ...           0           0           0
9997            0           0           0  ...           0           0           0
9998            0           0           0  ...           0           0           0
9999            0           0           0  ...           0           0           0
10000           0           0           0  ...           0           0           0

[9000 rows x 9260 columns]
--------
fitting data... (trial 0/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[23  1  2  3  4  2  3  5  3  8  7  8  9 10  4  9 11 12  8  6  3  3  1  2
 18 13  3 12  3 14 11  1  5  1 13  1 15  9  1 15 16  2 10  3 17 11  4  1
 10  2 13  3 11  3 10 13  4 10  7  5  7  3  7 14  3  6 13  3  8 10 14  6
  4  7  3  6  3 10 11  7 11  3 15 15 10  9 16  5  2  3  6 10 12  7  3  3
  8  3  5  8  3 14  3  9 15  5  9  6  3  4  1  4  9  3 14  9 15  3  7  2
  4  3 13 17  7  7  3 15  9  5 17 12 17  2  3 17  3  1  1 13  3 15  2 14
 11  3  9  1  3  3 11  3 15  9  5 10 10  6  4  8  3  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  8  2  6 10  8  3 12  9  1  1  2  9 15  7  6  1 14
 12 10  3  3 12  8 15  3 11  5 15  9  6  1  3  5  5 23  3  1  9 15  3 14
  7  3  3  2  4  7  2  6  2  5  7  3  4  3  3 15 13 16 12  7  4  3 11  1
 14  4  4 16 13  3  5  2  3  3 17  8  3  4 12  4  6  1  6  3 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4  3  3 17
  3  9 11  9  7  3  3  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 17  3  6  8 10  3  6  3  9  6  8 16  1 11  3 14 13  9  9  3  6
  6  3 11 14  5 13 17 14  9  3 15  4 13 16 13  6  4  5 10 11 13 11 30 12
  9  1 13  5  1  3  7  3  9 10  7  7  3  6 13  8 10  3  3 13  9  6  3  8
  4 14 13  3  6  3  5 10  4  4  3  5  1 13  1 11 10  1 17  2  6  6 17  1
 14  3  1  2 14  5  3 12  2  7 14  3  1 10  7 18 12 13  7  6 10 15  2 14
  2  7 11 14  8  1  4  2  8  7  3 12 13 16  6  4  9  3  3 10 15  3  3  3
  7 14  8 10  7 10 13 10  5  2  2  1 10  3 12 10  3  3  9  3  4 14 13 17
 12 14 13 12  9  3  6  9 15 10  2  2  3  6 17 12  3 16 13  3  3  3  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10  4 13 12 14 12  3 23 16 23 11
  5 15  9  3  8 12 11 12  9  9  3 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7  3  1 14 17 14  2  5 20  3 23  7 12  5 14 13 13  5  5
 10 14 17 14  8  2  2 14  6  3 23  8 10 16 14  7  3 12  6  4  9 23  1 10
  9  9  7  9  8  9 15  3  8 16  8 14  5  7  3  1 14  7  5  5  4  3 15 13
  3 14  3  2  3  5  3  3  6  8 17 23  2  8 10 18 15 17  3  7  6 15 23  4
  3 11 10  3 12 14  4  8  2 12  1  3  3 10 17 15 14  3  3  9 22 14 15  3
  3 17  1 13  3  6 13  8  2 12 10  4  9 11 10  6 12 11  3  2 14  8  4  9
 14 15 14 13  3  6  3 11 17  3  3 15 15  3  1 17  6  1  8  6 23  8  3 12
  9  2 13  9 15 17  3  5  1  9  7 12  9  7 14 15 15  9  3 14  7 14  3 15
  9  3  7  9  3  3  1  7 10 13  5  7  3  3  5 14  4 17 10  1  8 23  7  2
 10  3 12  6  8  3 12  6  7  4  6 14 13  3 15 14  4  5  4 14  6 12 12  8
  7  3  7  5 11  9  3 23 12 13  6  7  3  6 10  7  7 13 13  4  3  9 17 12
  1  9 12  7 12  9 14 12 11  7  6 15  8 11  8  3 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13  3 12  5 15  5  6  3  7  5 15 15 23 11 13
  7  3 15  7  2  3 16  3  2  9  3 13 14  3  5  1 12 13  1 14  3 11 17  7
  8  8  8  9 10  3  1  1  4  3  1  3  5 15  8 10  3  3 14  9  8  7  3  3
 15  3  2  9  3  3 11  3  4  6  3  3 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1  3  1 13  3  2  1  3  8 15  9  3  9 13  3
  3  7 12  8 15 11 14  2  8 11  3 14  3 10 13 11 12  8  4  8  2  8  3  3
  7 11  7  3  4 12  7 15 13 14  3 17  2  3 13  1]
--------
train_predict_y:
[ 2 14  3 ...  2 12  5]
--------
train_matching_elements: 7624
train_total_elements: 9000
train_accuracy: 0.8471111111111111
--------
test_matching_elements: 795
test_total_elements: 1000
test_accuracy: 0.795
--------
test params:
trial_num: 0
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 10000, None)
max_depth: 20
use_adaboost: False
adaboost_num_estimators: None
adaboost_learning_rate: None
--------
uniques_subset:
['Shell', 'Polish', 'Portugese', 'Modern Ecclesiastical Latin', 'Dutch', 'Haitian', 'Norwegian', 'English', 'Latvian', 'Middle English', 'Cebuano', 'Esperanto', 'Finnish', 'French', 'Swedish', 'Czech', 'random', 'Assembly', 'keyboard_mash', 'JSON', 'German', 'GDScript', 'Lua', 'keyboard_mash_dvorak_simulated', 'Java', 'HTML', 'Typescript', 'python', 'R', 'cpp', 'Haskell', 'OCaml', 'go', 'Kotlin', 'JS', 'Rust', 'php', 'ruby', 'sql']
length of uniques_subset: 39
--------
plotting decision tree... (trial 0/32)
finish plotting decision tree
running trial 1
--------
train_y:
[ 2 14 26 18 21  5  1  9  9 12  7 13 10  2  1  1 14  6 15 12 10  8 20  2
  9 18  4 14  4  7  9  3  6  5  4 13 18 11  3  1  4 13 14  5  3 19  2 20
 10 10  5  5  6  4  5  4 10  8  3 14 14 13  6  2  4 18 11 14  7 23  1  8
  4 14 12 11 23  3 17  4 13 17 23  8  7 10  5  9  5  6  7  1 13 12 12  1
 15 12 14  9 12  1 18 12  7 23  4 18 14  5  5 16  8 12  4  2 14  3  6 12
  8 13  1  6  1 18  2 11  1  6  8 12 12  8 12  2  1 17  6  2 12  5  4  8
  1  5  6 18 12  7 12 10  7 14  1  6 15  8 13  7  7 12  4  1  9  8  7 15
 14  3 10  8  6  8  1 10  9 10 15 14  3 18  4 15 15  7  4  5 12  8  3  2
 14 13 14 11  8  1  6  5 12  5  4  5 10  6 11  7 12 14  3  3 17 17 14 13
  4  9 10 10 10 10 10  4 13  7  5 17  6  5  4  6  3  7 16 15  9  3  1  7
  4  9  3 10  8 14 12  4  7 10 13  7 10  8  4  7  1  5  2 13  4 14 14  5
  7  6 12  6 10  6 16  4  8 15 13  9  7  7  2  9  5  4  1  7  8 12  9 11
  7  1  4  7  9  1  1 17 12 10  6 12 13  9 15 13  7 11  2 16  2  7 11 12
  7 10  5 11 14 17  8  4  7  3 14  2  4 12  7 17  4  9 20  4  8 15 12 14
 12  9 14  5 15 12 12  7  6 14 11 12  3  7 15  5  7 23  7  2 17  4 11 23
 13 17 10 13  9 11  8  8 13 13 11  9  2 23  7  9 10  4  5  2 15 14  6 13
  6 12  6 12  6 12  3  9  8  7  3  8 13  7  1  3 10 15 13  9  3  3  7  6
  2 12  6 14  3  1 17 15 17 17 12  4  8 14  2  6 11 14  9  4  2  6  4 10
  8 12 15  2  4 15  7  2 14 10 14  9 18 10  7  5  2  5  2 11 12  1  8  8
 13  1  4  1 16 13  9  2 13 12  9 14  6  3 12  1 12 15  3 10 15 12  7  3
 16 15 11 12 11  6 17  2 27 18 14  9  9 18  9  3 17 12  2  2]
--------
train_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1001           0           0           0  ...           0           0           0
1002           0           0           0  ...           0           0           0
1003           0           0           0  ...           0           0           0
1004           0           0           0  ...           0           0           0
1005           0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
1496           0           0           0  ...           0           0           0
1497           0           0           0  ...           0           0           0
1498         643           0           0  ...           0           0           0
1499           0           0           0  ...           0           0           0
1500           0           0         610  ...           0         305           0

[500 rows x 9260 columns]
--------
fitting data... (trial 1/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[ 7 18  7  8  4  4 13  8 13 10  7  4  9 10  4  9 11 12  4  8 18  3  8  2
  8 13  8  4  6 14 11  8  5  8  5  1 15  9  1 15 18  8 10  8 17 11  4  1
 10  3  3 13 11  2 10 13  4 10  7  5  7  3  7 14  5  6 13  8  8 10 14  6
 18  7 14  6 14 10 11  7  2 14 15 15 10  9 18  5  2 14  6 10 12  7  8  3
 18  8  5  8  8 14  8  9 15  5  9 14 13  4  1  4  9  8 14  9 15  8  7  3
  4 13 13 17  7  7  3 15  9  5 17 12 17  3  3  8  8 11  1  2  4 15  3  6
 11  3  9  8  8  8 14  8 15  9  5 10 10  6  4 10  8  8 10 15  9 10  4 11
  8  4  8  5  9  5  5  5  2  6  8  8  8 12  9  8  1  2  9 11  7  6  1  8
 12 10 18  3 12 18  8  6 11  5 15  9  6  8  8  5  5  8 14  1  9 11  3  8
  7 18 11  2  4  7  8 14  2  5  7  8  4  3  8 18  3  1 12  7  4 15  8  1
  6  4  4 18 13 14  4  2 12  8 17  8  1  4 12  4  6  8  6 14 10  8 10  8
 12  8  5 11  2  2  6  4 10  9 10  8 11  6  5  3 17  1  9  9  4  8  8 17
  6  9 11  9  7  8  8  5  4 17  2  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1  7 14  6  8 10  8  6 13  9  6  8 13  1 14  8 14 13  9  9  8  6
  6  8 11  6  5  4 17 14  9  8 12  4  8  2 13  6  4  5 10 11  9 11  8 12
  9  1  2 11  1  6  7 13  9 10  7 13  8  6  3  8 10  3  6 13  9  6  8  8
  4 14 13  6  6  2 18 10  4  4 18  8  8 13  1 11 10  1 17  2  6  6  8 18
 14  3  8  2  8  5  8 12  8  7 14  8  8  8  7 10 12  6  7 18 10 15 18  8
 10  7 11 14  8  8  4  2  8  4  8 12  6  8  6  4  9  6  8 10 15  2 13  8
  7 14 18 10 23 10 13 10  5  2  2  8 10  8 12 10  6  8  9  8  4 14 13 17
 12 14 13 12  9  2  6  9 15  8  2  2  8  6 17 12  4  1 13  8 13  8  3 14
  5 13  4  5  8 18 12  6  1 17  7 14 14 10 18  3  6 14 12  8 23  8 23 11
  5  8  9 13  8 12  8 12  9  9  8 11 15  2  1  4 12  1 17  2  7  3 18  9
  2  3  4 10 11  7  8 18 14 17  6  8  8  8  8 23  7 12  5  8  3  3  5  5
 10  6 17 14  8  2  2 14  6  8  6 18 10  8 14  7  5 12  6  4  9  7  8 10
  9  9  7  9  8  9  8 23  8  1  8  6  5  7 13  1 14  7  8  5  4  8 15 13
  4 14  5  8  2  5  8  6  2  8 17  2 13 10  7 18 15 17  6  7  6 11  8  4
  6 11 10 13 12  8  4  8  2 12  1  6  8 10 17 15  6  2  8  9  9 14 15  8
 13 17 18 13  8  6 13  2 14 12 10  4  9  6  8  6 12 11 23  8 10  8  4  9
 14 15  9 13  3  6  2 11 17  8 11 15 15 14  1 17  6  8  4 10 18  8  6 12
  9  6 13  9 15 17  8  8  8  9  7 12  9  7 18 15 11  9  6 14  7  3  6 15
  9 18  7  9  8  8  2  7 10 13  5  7  6 15  5  6  4 17 10 18  2  6  7  2
  5  3 12  8  8  6 12  6  7  4  6  3 13  8 15 14  4  3  4 14  6 12 12  8
  7  8  7 18 11  9  8  6 12 13  6  7  8 14 10  7  7  5  8  4  8  9 17 12
  1  9 12  7 12  9 14 12 11  6  6 15  8  8  8  8 12 11 12  5 14  9 17  8
  5  8 18 13 17 12  1  8  7  8  6 12  5 15  5  6  2  7  5 18 15  7 11 13
  7 12 18  7  3 12  8  8  2  9  3 13  3  8  5  1 12 13  1 14  8 10 17  7
  8  6  6  9 10  8  1 18  4  3  8  8  5 15 12  8  8  8  6  9  1  7  4  8
 15  8  3  9  3  6 11 12  4 14  8  4  8 12  6  9 10 14  8 14 12  7  8  4
 10 10  7 10  4  7  2 11 10  1  8  8 12 13  3  1 13  3  8  9  8  9 13  8
  3  7 12  8 15 11  6  2  8 11  8  8  6 10 13 11 12  8  8 14  7  8  3 13
  7 11  7 13  4 12  7 15 13  1  6 17  8 13 13  1]
--------
train_predict_y:
[ 2 14  8  8  8  5  1  9  9 12  7 13 10  2  1  1 14  6 15  8 10  8  6  2
  9 18  4 14  8  7  9  3  6  5  4 13 18 11  3  1  4 13 14  5  3  8  2  8
 10 10  5  5  6  4  5  8 10  8  3 14 14 13  6  2  4 18 11 14  7 23  1  8
  4 14 12 11 23  3 17  4 13 17 23  8  7 10  5  9  5  6  7  1 13 12 12  1
 15 12 14  9 12  1 18 12  7 23  4  8 14  5  5  8  8 12  4  2 14  2  6 12
  8 13  1  6  1  8  2 11  1  6  8 12 12  8 12  2  1 17  6  2 12  5  4  8
  1  5  8  8 12  7 12 10  7 14  1  6 15  8 13  7  7 12  4  8  9  8  7 15
 14  3 10  8  6  8  1 10  9 10  8 14  2 18  4 15 15  7  4  5 12  8  3  2
 14 13 14 11  8  8  6  8 12  5  4  5 10  6 11  7 12 14  3  3 17 17 14 13
  4  9 10 10 10 10 10  4 13  7  5 17  6  5  4  6  3  7  8 15  9  3  1  7
  4  9  3 10  8 14 12  4  7 10 13  7 10  8  4  7  1  8  8 13  4 14 14  5
  7  6  8  6 10  6  8  4  8 15 13  9  7  7  2  9  5  8  1  7  8 12  9 11
  7  1  4  7  9  1  1 17 12 10  6 12 13  9 15 13  7 11  2  8  2  7 11 12
  7 10  5 11 14 17  8  4  7  3 14  2  4 12  7 17  4  9  8  4  8 15 12 14
 12  9 14  5 15 12 12  7  6 14 11 12  3  7 15  5  7 23  7  2 17  4  8 23
 13 17 10 13  9 11  8  8 13 13 11  9  2 23  7  9 10  4  5  2 15 14  6 13
  6 12  6 12  6 12  3  9  8  7  3  8 13  7  1  3 10 15  8  9  3  2  7  6
  2 12  6 14  3  1 17 15 17 17 12  4  8 14  2  6 11 14  9  4  2  6  4 10
  8 12 15  2  4 15  7  2 14 10 14  9 18 10  7  5  2  5  2 11 12  1  8  8
 13  1  4  1 16 13  9  2 13 12  9 14  6  3 12  1  8 15  3 10  8 12  7  3
 16  8  8 12 11  6 17  2  8 18 14  9  9 18  9  3 17 12  2  2]
--------
train_matching_elements: 464
train_total_elements: 500
train_accuracy: 0.928
--------
test_matching_elements: 673
test_total_elements: 1000
test_accuracy: 0.673
--------
test params:
trial_num: 1
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 1500, None)
max_depth: 20
use_adaboost: False
adaboost_num_estimators: None
adaboost_learning_rate: None
--------
uniques_subset:
['Polish', 'Portugese', 'Modern Ecclesiastical Latin', 'Dutch', 'Haitian', 'Norwegian', 'English', 'Latvian', 'Middle English', 'Cebuano', 'Esperanto', 'Finnish', 'French', 'Swedish', 'Czech', 'random', 'Assembly', 'keyboard_mash', 'JSON', 'German', 'GDScript', 'keyboard_mash_dvorak_simulated', 'Typescript', 'python']
length of uniques_subset: 24
--------
plotting decision tree... (trial 1/32)
finish plotting decision tree
running trial 2
--------
train_y:
[ 2 14 26 18 21  5  1  9  9 12  7 13 10  2  1  1 14  6 15 12 10  8 20  2
  9 18  4 14  4  7  9  3  6  5  4 13 18 11  3  1  4 13 14  5  3 19  2 20
 10 10  5  5  6  4  5  4 10  8  3 14 14 13  6  2  4 18 11 14  7 23  1  8
  4 14 12 11 23  3 17  4 13 17 23  8  7 10  5  9  5  6  7  1 13 12 12  1
 15 12 14  9 12  1 18 12  7 23  4 18 14  5  5 16  8 12  4  2 14  3  6 12
  8 13  1  6  1 18  2 11  1  6  8 12 12  8 12  2  1 17  6  2 12  5  4  8
  1  5  6 18 12  7 12 10  7 14  1  6 15  8 13  7  7 12  4  1  9  8  7 15
 14  3 10  8  6  8  1 10  9 10 15 14  3 18  4 15 15  7  4  5 12  8  3  2
 14 13 14 11  8  1  6  5 12  5  4  5 10  6 11  7 12 14  3  3 17 17 14 13
  4  9 10 10 10 10 10  4 13  7  5 17  6  5  4  6  3  7 16 15  9  3  1  7
  4  9  3 10  8 14 12  4  7 10 13  7 10  8  4  7  1  5  2 13  4 14 14  5
  7  6 12  6 10  6 16  4  8 15 13  9  7  7  2  9  5  4  1  7  8 12  9 11
  7  1  4  7  9  1  1 17 12 10  6 12 13  9 15 13  7 11  2 16  2  7 11 12
  7 10  5 11 14 17  8  4  7  3 14  2  4 12  7 17  4  9 20  4  8 15 12 14
 12  9 14  5 15 12 12  7  6 14 11 12  3  7 15  5  7 23  7  2 17  4 11 23
 13 17 10 13  9 11  8  8 13 13 11  9  2 23  7  9 10  4  5  2 15 14  6 13
  6 12  6 12  6 12  3  9  8  7  3  8 13  7  1  3 10 15 13  9  3  3  7  6
  2 12  6 14  3  1 17 15 17 17 12  4  8 14  2  6 11 14  9  4  2  6  4 10
  8 12 15  2  4 15  7  2 14 10 14  9 18 10  7  5  2  5  2 11 12  1  8  8
 13  1  4  1 16 13  9  2 13 12  9 14  6  3 12  1 12 15  3 10 15 12  7  3
 16 15 11 12 11  6 17  2 27 18 14  9  9 18  9  3 17 12  2  2  5 11  7 17
 12 10 12  6 14  6  7 10 13 13  6  4 14 10 14 10  4  2  6  9  7  7 10 14
 15 16  5 12 12 13  1 15  7 17 14  1  6 16 13  3 14 14  2 16  4  4  6 15
  5 13 15  6 14 10  2  6 13 15 14 17  3 10 12  1  3  9 16 14  1  3 23 17
 17  5  9  8  6  5 10 11 26  6 14  4 10  1  4 11 19 14  4  7 14 14 15 16
  8 18  9 18 11 12 13 10 15 15  6  9 14  8  6  8  7 14  8 11 15  7  2  1
 12  6  8  8  4 15  6  3  2 13 14  8  1 10  4  1  1 13 11 11  2  2 14 12
  3 16 13  4  5  6  1  6  6  2 18 15 11 11 18  1  2  2 12  6 17 13  8 11
  6  6 12  9  1  6  1  2 14 16  7  1 12  8 11 13 10  1  6  9  6  2  4  3
 14  8 12  7 16  8 12  4  8  3  8  1 14  9  6 14  3 18 12 23  2  2  8 14
 10  9  9 23  8 11 11  4  6 12 15  6 10 17  3  9  7  8 17 14 11  6 12  4
  6  1  9  8  9 12  4  1 15  2  9 13  8  6 16 14  8 10  2  1  3 14  9  2
  7 11 10  9  2  9 11 13  8 15 10  8 14 16  7  5  6  5 11 12 11 17  3  4
 26 14 11 11  9 11  6  6 15  9 25 11 12 12 12 12  3  2 17 28  5  8  3  6
 12  4  5  7  8 23 11  5  5 15  6 12 11 14  7  5 17 10 12 14 15 10  3 15
  5 15  9 10  9  5  9  6  3  2  1 13  5 14 17  4 23 14  3 17  2 11  4  1
  6  9 11  8  6  6 13 17 19  9  9  5 17  3 12  4 18  4  3  1  3 13 13  1
  1 12 10 13 15 15  1 16 15  7  2 11 18 13  3 13  4 14  2 11 10  3 12  5
  1 12  4 11  3  8 12 18  2  2  2  1  7  6  2 11  3  8  1 11  8 12 10  1
  4  1 23 12  3  5  1  9  6  2  1 12  9 18 13  1  1  1 25 12  7 12  4 11
  6  1 12  5 23 12 12  3  1 29  4 11 13  3  2 16  9 13  6  6  8  3 16 17
 10 14  2  9  7 15  9  1 11  3  2  7 15  2  2  1]
--------
train_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1001           0           0           0  ...           0           0           0
1002           0           0           0  ...           0           0           0
1003           0           0           0  ...           0           0           0
1004           0           0           0  ...           0           0           0
1005           0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
1996           0         393           0  ...           0           0           0
1997         547           0           0  ...           0           0           0
1998           0           0         721  ...           0           0           0
1999           0           0           0  ...           0         456           0
2000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
fitting data... (trial 2/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[ 7 18  2  8  4  2 14  8  5 10  7  8  9 10  4  9 11 12  8 14  8  3  8  2
  8 13  8  4 14 14 11  8  5  8  7  1 15  9  1 15 18  2 10  8 17 11  4  1
 10  2  3 13 11  8 10  7  4 10  7  5  7  8  7 14  8  6 13  8  8 10 14  6
  8  7 14  6  8 10 11  7 11  1 15 15 10  9 14  5  2  3  6 10 12  7 18  4
  8  3  5 11  8 14  8  9 15  5  9 13 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  3  3 15  9  5 17 12 17  2  3  8  8 11  1 13  8 15  2 14
 11  3  9  8  8  8  8  8 15  9  5 10 10  6  4 10  8  8 10 15  9 10  4 11
 12  4  8  5  9  5  5  8  2  6  8  8  8 12  9  8  1  2  9 11  7  6  1 14
 12 10  3 13 12 18 15  8 11  5 15  9  6  8  8  5  5  4 14  1  9 11  3 13
  7 11 18  2  4  7  2  8  2  5  7  8  4  3  8  1 13  1 12  7  4  8  1  1
 14  4  4  1 13  1  5  2 12  8 17  8  8  4 12  4  6 14  6 12 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10  8 11  6  5  2 17  1  9  9  4  8  8 17
  8  9 11  9  7  8  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1  7 14  6  8 10  8  6  8  9  6  8 14  1  8  8  6 13  9  9  8  6
  8  8 11 14  5 13 17 14  9 12 15  4  8  8 13  8  4  5 10 11  9 11  8 12
  9  1 13 11  1  8  3  8  9 10  7 13  8  6  2  8 10  8 12  7  9  6  5  8
  4 14 13  8  6 12 18 10  4  4  8  2  8 13  1 11 10  1 17  2  6  1  8 18
  6  3  8  2 12  5  8 12  2  7 14  8  8 12  7 10 12  7  7 14 10 15 18  8
 14  7 11  8  8  8  4 13  8  8  8 12 13  1  6  4  9  3 18 10 14  2 13  8
  7 14  8 10  8 10 13 10  5  2  2  8 10  8 12 10  8  8  9  8  4 13 13 17
 12 14 13 12  9  8  6  9 15  8  2  2  8  6 17 12  8  8 13  3  3  8  8 14
  5  8  4  5  8 11 12  6  8 17  7  2 14 10 18 13  8  1 12  8  8  8  8 11
  5 15  9  8  8 12  8 12  9  9  8 11 15  2  1  4 12  1 17  2  7  3  1  9
  2 13  4 10 11  7  8 18 14 17 14  2  2  4  8  8  7 12  5 14  3 14  5  5
 10 14 17  4  8  2  2 14  6  8  6 11 10 18 14  7  1 12  6  4  9  7  4 10
  9  9  7  9  8  9  8  4  8  1  8 14  5  7  3  1 14  7 13  5  4  8 15 13
  3 14  8  2  3  5  8  6  8  8 17  8  3 10  7 18 15 17  3  7  6 15  8  1
  8 11 10 13 12 14  4  8  2 12  1 14 12 10 17 15 14  8  8  9  9 14 15 12
  3 17  1 13  8  6 13  8  2 12 10  4  9  6  8  6 12 11  1  2 10  8  4  9
 14 15  9 13  8  6 11 11 17 11 11 15 15  8  1 17  6  8  8 10 23  8  8 12
  9  6 13  9 15 17  8  8  8  9  7 12  9  7 18 15 11  9  8 14  7 14  8 15
  9 18  7  9  8  8 14  7 10 13  5  7  3 13  5  8  4 17 10  8  2 23  3  2
  8 13 12  8  8 14 12  6  7  4  6 14 13  8 15 14  4  1  4 14  6 12 12  8
  7  8  7  8 11  9  8  6 12 13  6  7 14  8 10  7  7  8  8  4 11  9 17 12
  1  9 12  7 12  9 12 12 11  8  6 15  8  8  8  8 12 11 12  5 14  9 17  8
  5  2 14 13 17 12  8  8  7 13 14 12  5 15  8  6  8  7  5 18 15  3 11  3
  7  4 11  7  2  2  8  1  2  9  8 13 14  8  5  1 12 13  1 14  8  8 17  7
  8  6  6  9 10  1  1 18  4 13  8  8  5 15  8 12  8 18 14  9  8  7  4  1
 15  8  2  9  3 23 11 12  4 13  8  8  8 12  6  9 10 14  8  3 12  7  8  4
 10 10  7 10  4  7  3 11 10  1  8  8 13 13  2  4 13 14 14  9  8  9 13  8
  3  7 12  8 15 11 14  2  8 11  8 14  8 10  2 11 12  8  8  8  2  8  3  8
  7 11  7  3  4 12  7 15 13  4  8 17 14  3 13  1]
--------
train_predict_y:
[ 2 14  8 18  8  5  1  9  9 12  7 13 10  2  1  8 14  6 15 12 10  8 12  2
  9 18  4 14  8  7  9  3  6  5  4 13 18 11  3  1  4 13 14  5  3  8  2  8
 10 10  5  5  6  4  5  4 10  8  3 14 14 13  6  2  4 18 11 12  7  8  8  8
  4 14 12 11  8  8 17  8 13 17  8  8  7 10  5  9  5  6  7  1 13 12 12  1
 15 12 14  9 12  1 18 12  7 23  4 18  8  5  5  8  8 12  4  2 14  3  6 12
  8 13  1  8  8 18  2 11  1  6  8 12 12  8 12  2  1 17  6  2 12  5  4  8
  8  5  8  8  8  7 12 10  7 14  1  6  8  8 13  7  7 12  4  4  9  8  7 15
 14  3 10  8  6  8  1 10  9 10 15 14  3 18  4 15  8  7  4  5 12  8  8  2
 14 13 14 11  8  4  6  1 12  8  4  8 10  6 11  7 12 14  8  3 17 17 14 13
  4  9 10 10 10 10 10  8 13  8  5 17  6  5  4  6  3  7  8 15  9  3  1  7
  4  9  3 10  8 14 12  4  7 10  3  7 10  8  4  7  1  5  8 13  4  8 14  5
  7  6 12  6 10  6 16  4  8  8 13  9  8  7  2  9  5  8  1  7  8  8  9 11
  7  1  4  7  9  1  1 17 12 10  6 12 13  9 15 13  7 11  2  8  2  7 11 12
  7 10  5 11 14 17  8  4  7  3 14  2  4 12  7 17  4  9  8  4  8 15 12 14
 12  9 14  5 15 12 12  7  6 14 11 12  3  7 15  5  7 23  7  2 17  4 11 23
 13 17 10 13  9 11  8  8 13 13 11  9  2  8  7  9 10  4  5  8 15 14  6 13
  6 12  6 12  6 12  3  9  8  7  3  8 13  7  1  8  8 15 13  9  3  3  7  2
  2 12  6 14  8  1 17 15 17 17 12  8  8 14  2  6 11 14  9  4  2  6  8 10
  8 12 15  8  4 15  7  2 14 10 14  9 18 10  7  5  2  5  2 11 12  8  8  8
 13  1  4  1 16 13  9  2 13 12  9 14  6  3 12  8  8 15  3 10  8 12  7  3
  8  8 11 12 11  6 17  2  8  8 14  9  9 18  9  3 17 12  2  2  5 11  7 17
 12 10 12  6 14  6  7  8 13 13  6  4 14 10 14 10  8  2  6  9  7  7 10 14
 15 16  5 12 12 13  1 15  7 17 14  1  6  8 13  3 14 14  2  8  8  4  6 15
  5 13 15  6 14 10  2  6 13 15 14 17  3 10 12  1  3  9  1  1  1  3 23 17
 17  8  9  8  6  5 10 11  8  8 14  8 10  1  4  8  8 14  4  7 14 14 15  8
  8 18  9 18 11 12 13 10 15 15  6  9 14  8  6  8  8  8  8 11 15  7  2  1
 12  6  8  8  4 15  6  8  2 13  1  8  1 10  4  1  8  8 11 11  2  2 14 12
  3  8 13  4  5  6  1  8  6  2 18 15 11 11 18  1  8  8 12  8 17 13  8 11
  6  6 12  9  8  8  1  2 14 16  7  1 12  8 11 13 10  1  8  9  6  2  4  3
 14  8 12  7 16  8 12  4  8  8  8  1 14  9  6 14  3 18 12 23  2  2  8 14
 10  9  9 23  8 11 11  4  6 12 15  6 10 17  8  9  7  8 17 14 11  8 12  4
  8  1  9  8  9  8  4  1 15  2  9 13  8  6  8 14  8  8  2  1  3  8  9  2
  8 11 10  9  8  9 11 13  8 15 10  8 14  8  7  5  6  1 11 12 11 17  3  4
  8 14 11 11  9 11  8  6 15  9  8 11 12 12 12 12  3  2 17  8  5  8  3  6
 12  4  5  7  8  8 11  8  5  8  6 12 11 14  7  5 17 10 12 14 15 10  3 15
  8 15  9 10  9  8  9  6  3  2  1 13  5 14 17  4 23 14  3 17  2 11  4  8
  6  9 11  8  6  8 13 17  8  9  9  5 17  3 12  4 18  4  8  1  3 13 13  1
  1 12 10 13  8 15  1  1  8  8  2  8 18 13  8 13  4 14  8 11  8  8 12  5
  1 12  4 11  3  8 12 18  2  2  2  8  7  8  2 11  3  8  1 11  8 12 10  8
  4  1 23 12  8  5  1  9  6  8  8 12  9 18 13  1  8  1  4 12  7 12  4 11
  6  1 12  5 23 12  8  3  1  8  4 11 13  3  2  8  9 13  6  8  8  8  8 17
 10 14  8  9  8 15  9  1 11  8  2  7 15  2  2  1]
--------
train_matching_elements: 861
train_total_elements: 1000
train_accuracy: 0.861
--------
test_matching_elements: 729
test_total_elements: 1000
test_accuracy: 0.729
--------
test params:
trial_num: 2
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 2000, None)
max_depth: 20
use_adaboost: False
adaboost_num_estimators: None
adaboost_learning_rate: None
--------
uniques_subset:
['Polish', 'Portugese', 'Modern Ecclesiastical Latin', 'Dutch', 'Haitian', 'Norwegian', 'English', 'Latvian', 'Middle English', 'Cebuano', 'Esperanto', 'Finnish', 'French', 'Swedish', 'Czech', 'random', 'Assembly', 'keyboard_mash', 'JSON', 'German', 'GDScript', 'keyboard_mash_dvorak_simulated', 'HTML', 'Typescript', 'python', 'R', 'cpp']
length of uniques_subset: 27
--------
plotting decision tree... (trial 2/32)
finish plotting decision tree
running trial 3
--------
train_y:
[ 2 14 26 ... 15 10  4]
--------
train_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1001           0           0           0  ...           0           0           0
1002           0           0           0  ...           0           0           0
1003           0           0           0  ...           0           0           0
1004           0           0           0  ...           0           0           0
1005           0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
2996           0           0           0  ...           0           0           0
2997           0           0           0  ...           0           0           0
2998           0           0           0  ...           0           0           0
2999           0           0           0  ...           0           0           0
3000           0           0           0  ...           0           0           0

[2000 rows x 9260 columns]
--------
fitting data... (trial 3/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[ 7 14  2  3  4  2 13 11  5 14  7 13  9 10  4  9 11 12  8  6 11  3  1  2
 11 13 11  4 14 14 11  8  5  1 13  1 15  9  1 15  1  2 10 11 17 11  4  1
 10  2  3  3 11 11 10 13  4 10  7  5  7 13  7 14  6  6 13 11  8 10 11  6
  8  7 14  6  5 10 11  7 11 11 15 15 10  9 18  5  2 11  6 10 12  7 11  3
  8 11  5  8 15 14 11  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7 13 15  9  5 17 12 17  2 13 11  8  4  1 11  6 15  2 14
 11  3  9  1 11 11 11 11 15  9  5 10 10  6  4 10 11  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8 11 12  9 11  1  2  9 11  7  6  1 14
 12 10  3 13 12  8 11 11 11  5 15  9  6  1 12  5  5 11 14  1  9 15  3 14
  7 11 11  2  4  7  2  6  2  5  7 15  4  3 11 15 13  2 12  7  4 15 11  1
 14  4  4  1 13 13  5  2 12 11 17  8  1  4 12  4  6  1  6  4 10  6 10 15
 12  5  5 11  2  2 11  4 10  9 10  8 11  6  5  2 17  1  9  9  4 11 11 17
  6  9 11  9  7 11  8  5  4 17  3  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1  3 14  6  8 10 11  6 13  9  6  8  6  1 15 11 14 13  9  9 15  6
  6 11 11 14  5 13 17 14  9 11 15  4  8 18 13  6  4  5 10 11 13 11 30 12
  9  1  8 11  1  3  7  6  9 10  7 13  3  6  4  8 10  3 11  3  9  6 11  8
  4  4 13 11  6 12  5 10  4  4 11 11  8 13  1 11 10  1 17  2  6  6 17  1
 14  3  5  2 10  5 15 12  2  7  6 11  8 10  7 10 12  3  7  6 10 15 18 10
  2  7 11 14  8  8  4  2  8  4 15 12 13  8  6  4  9 14 18 10 15  2 13 15
  7 14  8 10 11 10 13 10  5  2  2  5 10 11 12 10 12 11  9 11  4 18 13 17
 12 14 13 12  9 11  6  9 15 10  2  2 11  6 17 12  8 18 13 11  3 11  3 14
  5  3  4  5  6  1 12  6  3 17  7  2 14 10 15 13  1 14 12 11 23 16 23  4
  5  6  9  4  8 12  1 12  9  9 11 11 15 13  1  4 12  1 17  2  3  3  1  9
  2  3  4 10 11  7 11 18  6 17 14  2 12  1 11  6  7 12  5 14  3 13  5  5
 10 14 17 14 13  2  2 14  6 11  6  8 10 11 14  7 13 12  6  4  9  7  4 10
  9  9  7  9  8  9  5 11  8  1  8 14  5  7  3  1 14  7 11  5  4 11 15 13
  8 14  4  2 14  5 11  6 20  8 17 23 13 10  7 18 15 17  3  7  6 15 11  4
  3 11 10 13 12 14  4  8  2 12  1 14 11 10 17 15 14 11 11  9  9 14 15 11
  6 17  1 13 11  6 13  8  2 12 10  4  9 11 10  6 12 11  8  2 10  4  4  9
 14 15  9 13 11  6 15 11 17 11 15 15 15 11  1 17 20  1  6 10 23  5 11 12
  9  2 13  9 15 17 11 11  8  9  7 12  9  7  6 15 15  9 12 14  7 14 12 15
  9  1  7  9 15 11  1  7 10 13  5  7  3 13  5  6  4 17 10 15  8 23  7  2
 10 13 12  6  8 14 12  6  7  4 16 14  2 11 15 14  4 14  4 14  6 12 12  8
  7  8  7  5  4  9 11 16 12 13  6  7 14  6 10  7  7 14  6  4 11  9 17 12
  1  9 12  7 12  9 14 12 11  4  6 15  8  8  8 11 12 11 12  5 11  9 17  8
  5  2  6 13 17 12  1  8  7 13 14 12  5 15  6  6 11  7  5  1 15  7 11 13
  7 12  8  7  2 15 16 11  2  9  3 13 14  8  5  1 12 13  1 14  6  3 17  7
  8  8  1  9 10 11  1  1  4 13  1 11  5 15  8 10 11 15 14  9  8  7 11  5
 15 15  2  9  3 23 11 12  4  6 11 14 17 12  6  9 10 14  6  3 12  7 11  4
 10 10  7 10  4  7  8 11 10  1 11  8  3 13  2  1 13  8 14  9 11  9 13 11
  3  7 12  8 15 11 14  2  8 11 11 14 11 10 13 11 12  8  4 20  2  8  3  6
  7 11  7  3  4 12  7 15 13  1 11 17  2  3 13  1]
--------
train_predict_y:
[ 2 14 11 ... 15 10  4]
--------
train_matching_elements: 1804
train_total_elements: 2000
train_accuracy: 0.902
--------
test_matching_elements: 787
test_total_elements: 1000
test_accuracy: 0.787
--------
test params:
trial_num: 3
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 3000, None)
max_depth: 20
use_adaboost: False
adaboost_num_estimators: None
adaboost_learning_rate: None
--------
uniques_subset:
['Polish', 'Portugese', 'Modern Ecclesiastical Latin', 'Dutch', 'Haitian', 'Norwegian', 'English', 'Latvian', 'Middle English', 'Cebuano', 'Esperanto', 'Finnish', 'French', 'Swedish', 'Czech', 'random', 'Assembly', 'keyboard_mash', 'JSON', 'German', 'GDScript', 'keyboard_mash_dvorak_simulated', 'HTML', 'Typescript', 'python', 'R', 'cpp', 'Haskell', 'OCaml']
length of uniques_subset: 29
--------
plotting decision tree... (trial 3/32)
finish plotting decision tree
running trial 4
--------
train_y:
[ 2 14 26 ... 10 22  2]
--------
train_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1001           0           0           0  ...           0           0           0
1002           0           0           0  ...           0           0           0
1003           0           0           0  ...           0           0           0
1004           0           0           0  ...           0           0           0
1005           0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
5996           0           0           0  ...           0           0           0
5997           0           0           0  ...           0           0           0
5998           0           0           0  ...           0           0           0
5999           0           0        5958  ...           0           0           0
6000           0           0           0  ...           0           0           0

[5000 rows x 9260 columns]
--------
fitting data... (trial 4/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[ 3  1  2  3  4  2 13  5  5 26  7  8  9 10  4  9 11 12  8  6  3  3  1  2
  3 13  3  4  3 14 11  4  5  1 13  1 15  9  1 15  1  2 10  5 17 11  4  1
 10  2  7  2 11  3 10 13  4 10  7  5  7  3  7 14  3  6 13  3  8 10 14  6
  4  7  3  6 12 10 11  7 11  3 15 15 10  9 16  5  2  3  6 10 12  7 18  3
  8  3  5  4  3 14  3  9 15  5  9 14 13  4  1  4  9  3 14  9 15  3  7  2
  4  3  3 17  7 16  3 15  9  5 17 12 17  2  3  3  8  1  1  3  5 15  2  6
 11  3  9  1  8  3 11  3 15  9  5 10 10  6  4 26  3  8 10 12  9 10  4 11
 10  4 10  5  9  5  5  8  2  6 10  8  8 12  9 16  1  2  9 15  7  6  1 14
 12 10  3  3 12  8 15  3 11  5 15  9  6  1  3  5  5 16  3  1  9 15  3 14
  7  3  3  2  4  7  2  6  2  5  7  3  4  3  3  1 13 23 12  7  4  3 11  1
 14  4  4 15 13  3  5  2  3  5 17  8  1  4 12  4  6  1  6  3 10  8 10 15
 12  4  5 11  2  2 14  4 10  9 10  1 11  6  5  2 17  1  9  9  4  3  8 17
  8  9 11  9  7  3  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 14  3  6  8 10  3  6  3  9  6  8 16  1  2  5 14  3  9  9  3  6
  6  8 11 14  5 13 17 14  9  5 15  4  8  3  3  6  4  5 10 11 13 11 17 12
  9  1 13 18  1  3  7  3  9 10 16 13  3 14 13  8 10  3  3 13  9  6  5 13
  4 14 13  3  6  3  5 10  4  4  8  5  1  5  1 11 10  1 17  2  6  6 17  1
 14  3  2  2 10  5  3 12  2  7 26  3  1 10  7 10 12 13  7  6 10 15 18  6
  2  7 11 14  8  1  4  3  8 14  5 12 13 12  6  4  9  3  3 10 15  2  3  3
  7 14  8 10  3 10 13 10  5  2  2  1 10  3 12 10  3  3  9  3  4  6 13 17
 12 14 13 12  9  3  3  9 15 10  2 13  8  6 17 12  3 16 13  3 13  3  3 14
  5 13  4  5  6  8 12  6  8 17  7  2 14 10  2  3 12 14 12  3 23 16 23 11
  5 15  9  3  8 12 12 12  9  9  3 11 15  2  1  4 12  8 17  2  7  3  1  9
  2  3  4 10 11  7  3 18 14 17 14  2  5  6  3 23  7 12  5 14 13  5  5  5
 10 14 17 14  8  2  2 14  6  3  6  8 10 16 14  7  3 12  6  4  9  0  1 10
  9  9  7  9  8  9 12  3  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 23  3  5  3  3 18  8 17 23  3 10  7 18 15 17  3  7  6 15  3  4
  3 11 10  3 12 14  4  8  2 12  1  3  3 10 17 15 14  3  8  9 13 14 15  3
  3 17  1 13  3  6 13  8  2 12 10  4  9 11 10  6 12 11  8  2 10  3  4  9
 16 15 14  3  3  6  5 11 17  3  3 15 15  3  1 17 14  1  8  8 23 18  3 12
  9  2 13  9 15 17  3  5  1  9  7 12  9  7 14 15 15  9  3 14  7 14  3 15
  9  1  7  9  5  3  1  7 10  3  5  7  3  5  5 14  4 17 10 18  8 23  7  2
 10  3 12  6  8  3 12  6  7  8 16 14 13  5 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11  6 12  8  3  7  3  6 10  7  7  8  5  4  3  9 17 12
  1  9 12  7 12  9 14 12 11 14  6 15  8  8  8  3 12 11 12  5 14  9 17  8
  5  2  6  2 17 12  1  8  7 13  3 12  5 15  5  6  3  7  5 12 15  7 11 13
  7  5 15  7  2  3 16  3  2  9  3 13 14  8  5  1 12 13  1 14  3 12 17  7
  8  8 13  9 10  3  1  1  4  3  1  3  5 15  8 10  5  3 14  9  8  7  3  5
 15  3  2  9  3  3 11  3  4  6  3  3 17 12  6  9 10 14 10  3 12  7 23  4
 10 10  7 10  4  7 13 11  6  1  3 13 13  3  2  1  1  8 15  9  3  9 13  3
  3  7 12  8 15 11 14  2  8 11  3 14  3 10  5 11 12  8  4 13  2  8  3  3
  7 11  7  3  4 12  7 15 13  1  3 17  2  3 13  1]
--------
train_predict_y:
[ 2 14  3 ... 10  3  3]
--------
train_matching_elements: 4222
train_total_elements: 5000
train_accuracy: 0.8444
--------
test_matching_elements: 788
test_total_elements: 1000
test_accuracy: 0.788
--------
test params:
trial_num: 4
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 6000, None)
max_depth: 20
use_adaboost: False
adaboost_num_estimators: None
adaboost_learning_rate: None
--------
uniques_subset:
['Shell', 'Polish', 'Portugese', 'Modern Ecclesiastical Latin', 'Dutch', 'Haitian', 'Norwegian', 'English', 'Latvian', 'Middle English', 'Cebuano', 'Esperanto', 'Finnish', 'French', 'Swedish', 'Czech', 'random', 'Assembly', 'keyboard_mash', 'JSON', 'German', 'GDScript', 'Lua', 'keyboard_mash_dvorak_simulated', 'Java', 'HTML', 'Typescript', 'python', 'R', 'cpp', 'Haskell', 'OCaml', 'go', 'Kotlin', 'JS', 'Rust']
length of uniques_subset: 36
--------
plotting decision tree... (trial 4/32)
finish plotting decision tree
running trial 5
--------
train_y:
[ 2 14 26 ...  2 12  5]
--------
train_X:
       ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                         ...
1001            0           0           0  ...           0           0           0
1002            0           0           0  ...           0           0           0
1003            0           0           0  ...           0           0           0
1004            0           0           0  ...           0           0           0
1005            0           0           0  ...           0           0           0
...           ...         ...         ...  ...         ...         ...         ...
9996            0           0         403  ...           0           0           0
9997            0           0           0  ...           0           0           0
9998            0           0           0  ...           0           0           0
9999            0           0           0  ...           0           0           0
10000           0           0           0  ...           0           0           0

[9000 rows x 9260 columns]
--------
fitting data... (trial 5/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[23  1  2  3  4  2  3  5  3 12  7  8  9 10  4  9 11 12  8  6  3  3  1  2
 18 13  3 12  3 14 11  1  5  1 13  1 15  9  1 15 16  2 10  3 17 11  4  1
 10  2 13  3 11  3 10 13  4 10  7  5  7  3  7 14  3  6 13  3  8 10 14  6
  4  7  3  6  3 10 11  7 11  3 15 15 10  9 16  5  2  3  6 10 12  7  3  3
  8  3  5  8  3 14  3  9 15  5  9  6  3  4  1  4  9  3 14  9 15  3  7  2
  4  3 13 17  7  7  3 15  9  5 17 12 17  2  3 17  3  1  1 13  3 15  2 14
 11  3  9  1  3  3 11  3 15  9  5 10 10  6  4 12  3  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  8  2  6 10  8  3 12  9  1  1  2  9 15  7  6  1 14
 12 10  3  3 12  8 15  3 11  5 15  9  6  1  3  5  5 23  3  1  9 15  3 14
  7  3  3  2  4  7  2  6  2  5  7  3  4  3  3 15 13 16 12  7  4  3 11  1
 14  4  4 15 13  3  5  2  3  3 17  8  3  4 12  4  6  1  6  3 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4  3  3 17
  3  9 11  9  7  3  3  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1  0  3  6  8 10  3  6  3  9  6  8 16  1 11  3 14 13  9  9  3  6
  6  3 11 14  5 13 17 14  9  3 15  4 13 16 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  3  7  3  9 10  7 13  3  6 13  8 10  3  3 13  9  6  3  8
  4 14 13  3  6  3  5 10  4  4  3  5  1 13  1 11 10  1 17  2  6  6 17  1
 14  3 15  2 14  5  3 12  2  7 14  3  1 10  7 10 12 13  7  6 10 15 15 14
  2  7 11 14  8  1  4  2  8  7  3 12 13 23  6  4  9  3  3 10 15  3  3  3
  7 14  8 10  7 10 13 10  5  2  2  1 10  3 12 10  3  3  9  3  4 14 13 17
 12 14 13 12  9  3  6  9 15 10  2  2  3  6 17 12  3 16 13  3  3  3  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10  4 13 12 14 12  3 23 16 23 11
  5 15  9  3  8 12 15 12  9  9  3 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7  3  1 14 17 14  2  5  4  3 23  7 12  5 14 13 13  5  5
 10 14 17 14  8  2  2 14  6  3 23  8 10 15 14  7  3 12  6  4  9  7  1 10
  9  9  7  9  8  9 15  3  8 23  8 14  5  7  3  1 14  7  5  5  4  3 15 13
  3 14  3  2  3  5  3  3  6  8 17 23  2 10  7 18 15 17  3  7  6 15 18  4
  3 11 10  3 12 14  4  8  2 12  1  3  3 10 17 15 14  3  3  9 22 14 15  3
  3 17  1 13  3  6 13  8  2 12 10  4  9 18 10  6 12 11  3  2 14  8  4  9
 14 15 14 13  3  6  3 11 17  3  3 15 15  3  1 17  6  1  8  7 23  8  3 12
  9  2 13  9 15 17  3  5  1  9  7 12  9  7 23 15 15  9  3 14  7 14  3 15
  9  3  7  9  3  3  1  7 10 13  5  7  3  3  5 14  4 17 10  1  8 23  7  2
 10  3 12  6  8  3 12  6  7  4  6 14 13  3 15 14  4  5  4 14  6 12 12  8
  7  3  7  5 11  9  3 23 12 13  6  7  3  6 10  7  7  6  2  4  3  9 17 12
  1  9 12  7 12  9 14 12 11  7  6 15  8  8  8  3 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13  3 12  5 15  5  6  3  7  5  2 15  7 11 13
  7  3 15  7  2  3 16  3  2  9  3 13 14  3  5  1 12 13  1 14  3  3 17  7
  8  8  8  9 10  3  1  1  4  3  1  3  5 15  8 10  3  3 14  9  8  7  3  3
 15  3  2  9  3  3 11  3  4  6  3  3 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1  3  1 13  3  2  1  3  8 15  9  3  9 13  3
  3  7 12  8 15 11 14  2  8 11  3 14  3 10 13 11 12  8  3  8  2  8  3  3
  7 11  7  3  4 12  7 15 13 14  3 17  2  3 13  1]
--------
train_predict_y:
[ 2 14  3 ...  2 12  5]
--------
train_matching_elements: 7624
train_total_elements: 9000
train_accuracy: 0.8471111111111111
--------
test_matching_elements: 801
test_total_elements: 1000
test_accuracy: 0.801
--------
test params:
trial_num: 5
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 10000, None)
max_depth: 20
use_adaboost: False
adaboost_num_estimators: None
adaboost_learning_rate: None
--------
uniques_subset:
['Shell', 'Polish', 'Portugese', 'Modern Ecclesiastical Latin', 'Dutch', 'Haitian', 'Norwegian', 'English', 'Latvian', 'Middle English', 'Cebuano', 'Esperanto', 'Finnish', 'French', 'Swedish', 'Czech', 'random', 'Assembly', 'keyboard_mash', 'JSON', 'German', 'GDScript', 'Lua', 'keyboard_mash_dvorak_simulated', 'Java', 'HTML', 'Typescript', 'python', 'R', 'cpp', 'Haskell', 'OCaml', 'go', 'Kotlin', 'JS', 'Rust', 'php', 'ruby', 'sql']
length of uniques_subset: 39
--------
plotting decision tree... (trial 5/32)
finish plotting decision tree
running trial 6
--------
train_y:
[ 2 14 26 ...  2 12  5]
--------
train_X:
       ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                         ...
1001            0           0           0  ...           0           0           0
1002            0           0           0  ...           0           0           0
1003            0           0           0  ...           0           0           0
1004            0           0           0  ...           0           0           0
1005            0           0           0  ...           0           0           0
...           ...         ...         ...  ...         ...         ...         ...
9996            0           0         403  ...           0           0           0
9997            0           0           0  ...           0           0           0
9998            0           0           0  ...           0           0           0
9999            0           0           0  ...           0           0           0
10000           0           0           0  ...           0           0           0

[9000 rows x 9260 columns]
--------
fitting data... (trial 6/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[ 7 14 14 14 14 14 14 14 14 10  7 14  9 10 14  9 14 12 14 14 14 14 14 14
 14 14 14 14 14 14 14 14  5 14 14 14 14  9 14 14 14 14 10 14 14 14 14 14
 10 14 14 14 14 14 10 14 14 10  7  5  7 14  7 14 14 14 14 14 14 10 14 14
 14  7 14 14 14 10 14  7 14 14 14 14 10  9 14  5 14 14 14 10 12  7 14 14
 14 14  5 14 14 14 14  9 14  5  9 14 14 14 14 14  9 14 14  9 14 14  7 14
 14 14 14 14  7  7 14 14  9  5 14 12 14 14 14 14 14 14 14 14 14 14 14 14
 14 14  9 14 14 14 14 14 14  9  5 10 10 14 14 10 14 14 10 14  9 10 14 14
 14 14 14  5  9  5  5 14 14 14 10 14 14 12  9 14 14 14  9 14  7 14 14 14
 12 10 14 14 12 14 14 14 14  5 14  9 14 14 14  5  5 14 14 14  9 14 14 14
  7 14 14 14 14  7 14 14 14  5  7 14 14 14 14 14 14 14 12  7 14 14 14 14
 14 14 14 14 14 14  5 14 14 14 14 14 14 14 12 14 14 14 14 14 10 14 10 14
 12 14  5 14 14 14 14 14 10  9 10 14 14 14  5 14 14 14  9  9 14 14 14 14
 14  9 14  9  7 14 14  5 14 14 14 14 14  9 10 14 14 10  9 14 14 14  7  5
 14 14 14  7 14 14 14 10 14 14 14  9 14 14 14 14 14 14 14 14  9  9 14 14
 14 14 14 14  5 14 14 14  9 14 14 14 14 14 14 14 14  5 10 14 13 14 14 12
  9 14 14 14 14 14  7 14  9 10  7 14 14 14 14 14 10 14 14 14  9 14 14 14
 14 14 14 14 14 14 14 10 14 14 14 14 14 14 14 14 10 14 14 14 14 14 14 14
 14 14 14 14 10  5 14 12 14  7 14 14 14 10  7  6 12 14  7 14 10 14 14  6
 14  7 14 14 14 14 14 14 14 14 14 12 14 14 14 14  9 14 14 10 14 14 14 14
  7 14 14 10 14 10 14 10  5 14 14 14 10 14 12 10 14 14  9 14 14 14 14 14
 12 14 14 12  9 14 14  9 14 10 14 14 14 14 14 12 14 14 14 14 14 14 14 14
  5 14 14  5 14 14 12 14 14 14  7 14 14 10 14 14 14 14 12 14 14 14 14 14
  5 14  9 14 14 12 14 12  9  9 14 14 14 14 14 14 12 14 14 14  7 14 14  9
 14 14 14 10 14  7 14 14 14 14 14 14 14 14 14 14  7 12  5 14 14 14  5  5
 10 14 14 14 14 14 14 14 14 14 14 14 10 14 14  7 14 12 14 14  9  7 14 10
  9  9  7  9 14  9 14 14 14 14 14 14  5  7 14 14 14  7 14  5 14 14 14 14
 14 14 14 14 14  5 14 14 14 14 14 14 14  6  7 14 14 14 14  7 14 14 14 14
 14 14 10 14 12 14 14 14 14 12 14 14 14  6 14 14 14 14 14  9 13 14 14 14
 14 14 14 14 14 14 14 14 14 12 10 14  9 14 14 14 12 14 14 14 10 14 14  9
 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14  6 14 14 14 12
  9 14 14  9 14 14 14 14 14  9  7 12  9  7 14 14 14  9 14 14  7 14 14 14
  9 14  7  9 14 14 14  7 10 14  5  7 14 14 14 14 14 14 10 14 14 14  7 14
 14 14 12 14 14 14 12 14  7 14 14 14 14 14 14 14 14 14 14 14 14 12 12 14
  7 14  7 14 14  9 14 14 12 14 14  7 14 14 10  7  7  6 14 14 14  9 14 12
 14  9 12  7 12  9 14 12 14 14 14 14 14 14 14 14 12 14 12  5 14  9 14 14
  5 14 14 14 14 12 14 14  7 14 14 12  5 14 14 14 14  7  5 14 14  7 14 14
  7 14 14  7 14 14 14 14 14  9 14 14 14 14  5 14 12 14 14 14 14 14 14  7
 14 14 14  9 10 14 14 14 14 14 14 14  5 14 14 10 14 14 14  9 14  7 14 14
 14 14 14  9 14 14 14 14 14 14 14 14 14 12 14  9 10 14 14 14 12  7 14 14
 10 10  7 10 14  7 14 14 10 14 14 14 14 14 14 14 14 14 14  9 14  9 14 14
 14  7 12 14 14 14 14 14 14 14 14 14 14 10 14 14 12 14 14 14 14 14 14 14
  7 14  7 14 14 12  7 14 14 14 14 14 14 14 14 14]
--------
train_predict_y:
[14 14 14 ... 14 12  5]
--------
train_matching_elements: 2954
train_total_elements: 9000
train_accuracy: 0.32822222222222225
--------
test_matching_elements: 332
test_total_elements: 1000
test_accuracy: 0.332
--------
test params:
trial_num: 6
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 10000, None)
max_depth: 5
use_adaboost: False
adaboost_num_estimators: None
adaboost_learning_rate: None
--------
uniques_subset:
['Shell', 'Polish', 'Portugese', 'Modern Ecclesiastical Latin', 'Dutch', 'Haitian', 'Norwegian', 'English', 'Latvian', 'Middle English', 'Cebuano', 'Esperanto', 'Finnish', 'French', 'Swedish', 'Czech', 'random', 'Assembly', 'keyboard_mash', 'JSON', 'German', 'GDScript', 'Lua', 'keyboard_mash_dvorak_simulated', 'Java', 'HTML', 'Typescript', 'python', 'R', 'cpp', 'Haskell', 'OCaml', 'go', 'Kotlin', 'JS', 'Rust', 'php', 'ruby', 'sql']
length of uniques_subset: 39
--------
plotting decision tree... (trial 6/32)
finish plotting decision tree
running trial 7
--------
train_y:
[ 2 14 26 ...  2 12  5]
--------
train_X:
       ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                         ...
1001            0           0           0  ...           0           0           0
1002            0           0           0  ...           0           0           0
1003            0           0           0  ...           0           0           0
1004            0           0           0  ...           0           0           0
1005            0           0           0  ...           0           0           0
...           ...         ...         ...  ...         ...         ...         ...
9996            0           0         403  ...           0           0           0
9997            0           0           0  ...           0           0           0
9998            0           0           0  ...           0           0           0
9999            0           0           0  ...           0           0           0
10000           0           0           0  ...           0           0           0

[9000 rows x 9260 columns]
--------
fitting data... (trial 7/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[23  6  2  6  4  2  6  6  6  2  7  6  9 10  4  9 11 12  6  6  6  6  1  2
  6  6  6  4  6 14 11  6  5  6  6  6  6  9  6  6  4  2 10  6 17 11  4  6
 10  2  6  6 11  6 10  6  4 10  7  5  7  6  7 14  6  6  6  6  6 10 14  6
  4  7  6  6  6 10 11  7 11  6  6  6 10  9  6  5  2  6  6 10 12  7  6  6
  4  6  5  4  6 14  6  9  6  5  9  6  6  4  6  4  9  6 14  9  6  6  7  2
  4  6  6 17  7  7  6  6  9  5 17 12 17  2  6 17  6  6  6  6  6  6  6 14
 11  6  9  6  6  6 11  6  6  9  5 10 10  6  4 12  6  6 10 15  9 10  4 11
  6  4  6  5  9  5  5  6  6  6 10  6  6 12  9  1  1  6  9  6  7  6  6  6
 12 10  6  6 12  4  6  6 11  5  6  9  6  6  6  5  5  6  6  6  9  6  6  6
  7  6  6  2  4  7  2  6  6  5  7  6  4  6  6  4  6  6 12  7  4  6 11  6
 14  4  4  6  6  6  5  2  6  6 17  6  6  4 12  4  6  1  6  6 10  6 10 15
 12  4  5 11  2  2 14  4 10  9 10  6 11  6  5  6 17  1  9  9  4  6  6 17
  6  9 11  9  7  6  6  5  4 17  6  6 17  9 10  2  6 10  9  4 17 11  7  5
  6  4  6 17  6  6  4 10  6  6  6  9  6  6  6  1 11  6  6  6  9  9  6  6
  6  6 11 14  5  6 17 14  9  6  6  4  6  6  6  6  4  5 10 11 13 11 17 12
  9  6  6 18  6  6  7  6  9 10  7  6  6  6  6  6 10  6  6  6  9  6  6  6
  4 14  6  6  6  6  4 10  4  4  6  6  6  6  1 11 10  6 17  2  6  6 17  6
  6  6  4  6 14  5  6 12  2  7 14  6  6 10  7  8 12  6  7  6 10  6  4 14
  6  7 11  6  6  6  4  6  6  6  6 12  6 15  6  4  9  6  6 10  6  6  6  6
  7 14  4 10  6 10  6 10  5  6  2  4 10  6 12 10  6  6  9  6  4  6  6 17
 12 14  6 12  9  6  6  9  6 10  2  6  6  6 17 12  6  6  6  6  6  6  6 14
  5  6  4  5  6  4 12  6  6 17  7  2 14 10  4  6  6  6 12  6  6  6  6 11
  5  6  9  6  6 12 15 12  9  9  6 11  6  6  6  4 12  6 17  6  7  6  1  9
  6  6  4 10 11  7  6  4  6 17  6  2  6  6  6  6  7 12  5 14  6  6  5  5
 10 14 17  6  6  2  2 14  6  6  6  4 10  6 12  7  6 12  6  4  9 23  6 10
  9  9  7  9  6  9 15  6  6 15  6 14  5  7  6  6  6  7  6  5  4  6  6  6
  6  6  6  6  6  5  6  6  6  6 17  6  6  8  7  4  6 17  6  7  6  6  6  4
  6 11 10  6 12  6  4  6  2 12  6  6  6 10 17  6 14  6  6  9 17  6  6  6
  6 17  4  6  6  6  6  6  2 12 10  4  9 11  6  6 12 11  6  2 14  6  4  9
 14  6 14  6  6  6  6 11 17  6  6  6  6  6  6 17  6  6  6  6  6  4  6 12
  9  2  6  9  6 17  6  6  6  9  7 12  9  7  6  6  6  9  6 14  7 14  6  6
  9  6  7  9  6  6  6  7 10  6  5  7  6  6  6  6  4 17 10  4 11  6  7  2
  6  6 12  6  6  6 12  6  7  4  6 14  6  6  6  6  4  6  4 14  6 12 12  6
  7  6  7  4 11  9  6  6 12  6  6  7  6  6 10  7  7  6 15  4  6  9 17 12
  6  9 12  7 12  9  6 12 11  6  6  6  6  4  6  6 12 11 12  5 14  9 17  6
  5  6  6  6 17 12  6  6  7  6  6 12  5  6  6  6  6  7  5 15  6  7 11  6
  7  6  4  7  6  6  6  6  2  9  6  6  6  6  5  6 12  6  6 14  6  6 17  7
  6  6  6  9 10  6  6  6  4  6  6  6  5  6  6 10  6  6  6  9  6  7  6  6
  6  6  2  9  6  6 11  6  4  6  6  6 17 12  6  9 10 14  6  6 12  7  6  4
 10 10  7 10  4  7  6 11 10  6  6  1  6  6  2  6  6  6  6  9  6  9  6  6
  6  7 12  6  6 11 14  2  6 11  6 14  6 10  6 11 12  6  6  6  2  6  6  6
  7 11  7  6  4 12  7  6  6  6  6 17  6  6  6  6]
--------
train_predict_y:
[ 2 14  6 ...  2 12  5]
--------
train_matching_elements: 4860
train_total_elements: 9000
train_accuracy: 0.54
--------
test_matching_elements: 523
test_total_elements: 1000
test_accuracy: 0.523
--------
test params:
trial_num: 7
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 10000, None)
max_depth: 10
use_adaboost: False
adaboost_num_estimators: None
adaboost_learning_rate: None
--------
uniques_subset:
['Shell', 'Polish', 'Portugese', 'Modern Ecclesiastical Latin', 'Dutch', 'Haitian', 'Norwegian', 'English', 'Latvian', 'Middle English', 'Cebuano', 'Esperanto', 'Finnish', 'French', 'Swedish', 'Czech', 'random', 'Assembly', 'keyboard_mash', 'JSON', 'German', 'GDScript', 'Lua', 'keyboard_mash_dvorak_simulated', 'Java', 'HTML', 'Typescript', 'python', 'R', 'cpp', 'Haskell', 'OCaml', 'go', 'Kotlin', 'JS', 'Rust', 'php', 'ruby', 'sql']
length of uniques_subset: 39
--------
plotting decision tree... (trial 7/32)
finish plotting decision tree
running trial 8
--------
train_y:
[ 2 14 26 ...  2 12  5]
--------
train_X:
       ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                         ...
1001            0           0           0  ...           0           0           0
1002            0           0           0  ...           0           0           0
1003            0           0           0  ...           0           0           0
1004            0           0           0  ...           0           0           0
1005            0           0           0  ...           0           0           0
...           ...         ...         ...  ...         ...         ...         ...
9996            0           0         403  ...           0           0           0
9997            0           0           0  ...           0           0           0
9998            0           0           0  ...           0           0           0
9999            0           0           0  ...           0           0           0
10000           0           0           0  ...           0           0           0

[9000 rows x 9260 columns]
--------
fitting data... (trial 8/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[ 0  1  2  3  4  2  3  5  3  2  7  8  9 10  4  9 11 12  8  6  3  3  1  2
 18 13  3 12  3 14 11  8  5  1 13  1 15  9  1 15 16  2 10  3 17 11  4  1
 10  2 13  3 11  3 10 13  4 10  7  5  7  3  7 14  3  6 13  3  8 10 14  6
  4  7  3  6  3 10 11  7 11  3 15 15 10  9 16  5  2  3  6 10 12  7  3  3
  8  3  5 11  3 14  3  9 15  5  9  6  3  4  1  4  9  3 14  9 15  3  7  2
  4  3 13 17  7  7  3 15  9  5 17 12 17  2  3 17  3  1  1 13  3 15  2 14
 11  3  9  1  3  3 11  3 15  9  5 10 10  6  4 12  3  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  8  2  6 10  8  3 12  9  1  1  2  9 15  7  6  1 14
 12 10  3  3 12  8 15  3 11  5 15  9  6  1  3  5  5 23  3  1  9 15  3 14
  3  3  3  2  4  7  2  6  2  5  7  3  4  3  3 15 13 16 12  7  4  3 11  1
 14  4  4 15 13  3  5  2  3  3 17  8  3  4 12  4  6  1  6  3 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4  3  3 17
  3  9 11  9  7  3  3  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 23  3  6  8 10  3  6  3  9  6  8 16  1 11  3 14 13  9  9  3  6
  6  3 11 14  5 13 17 14  9  3 15  4 13 16 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  3  7  3  9 10  7 13  3  6 13  8 10  3  3 13  9  6  3  8
  4 14 13  3  6  3 15 10  4  4  3  5  1 13  1 11 10  1 17  2  6  6 17  1
 14  3  1  2 10  5  3 12  2  7 14  3  1 10  7 10 12 13  7  6 10 15 16 14
  2  7 11 14  8  1  4  2  8  7  3 12 13  2  6  4  9  3  3 10 15  3  3  3
  7 14  8 10  7 10 13 10  5  2  2  1 10  3 12 10  3  3  9  3  4 14 13 17
 12 14 13 12  9  3  6  9 15 10  2  2  3  6 17 12  3 16 13  3  3  3  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10  4 13 12 14 12  3 23 16 23 11
  5 15  9  3  8 12 15 12  9  9  3 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7  3  1 14 17 14  2  5 16  3 23  7 12  5 14 13 13  5  5
 10 14 17 14  8  2  2 14  6  3 23  8 10  4 14  7  3 12  6  4  9  7  1 10
  9  9  7  9  8  9 15  3  8 23  8 14  5  7  3  1 14  7  5  5  4  3 15 13
  3 14  3  2  3  5  3  3  6  8 17 23  3 10  7 18 15 17  3  7  6 15 18  4
  3 11 10  3 12 14  4  8  2 12  1  3  3 10 17 15 14  3  3  9 17 14 15  3
  3 17  1 13  3  6 13  8  2 12 10  4  9 18 10  6 12 11  3  2 10  8  4  9
 14 15 14 13  3  6  3 11 17  3  3 15 15  3  1 17  6  1  8  6 23  8  3 12
  9  2 13  9 15 17  3  5  1  9  7 12  9  7 14 15 15  9  3 14  7 14  3 15
  9  3  7  9  3  3  1  7 10 13  5  7  3  3  5 14  4 17 10  1  8 23  7  2
 10  3 12  6  8  3 12  6  7  4  6 14 13  3 15 14  4  5  4 14  6 12 12  8
  7  3  7 15 11  9  3 23 12 13  6  7  3  6 10  7  7  6  1  4  3  9 17 12
  1  9 12  7 12  9 14 12 11  7  6 15  8  8  8  3 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13  3 12  5 15  5  6  3  7  5  1 15  7 11 13
  7  3 15  7  2  3 16  3  2  9  3 13 14  3  5  1 12 13  1 14  3  3 17  7
  8  8  8  9 10  3  1  1  4  3  1  3  5 15  8 10  3  3  6  9  8  7  3  3
 15  3  2  9  3  3 11  3  4  6  3  3 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1  3  1 13  3  2  1  3  8 15  9  3  9 13  3
  3  7 12  8 15 11 14  2  8 11  3 14  3 10 13 11 12  8  4  8  2  8  3  3
  7 11  7  3  4 12  7 15 13 14  3 17  2  3 13  1]
--------
train_predict_y:
[ 2 14  3 ...  2 12  5]
--------
train_matching_elements: 7624
train_total_elements: 9000
train_accuracy: 0.8471111111111111
--------
test_matching_elements: 801
test_total_elements: 1000
test_accuracy: 0.801
--------
test params:
trial_num: 8
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 10000, None)
max_depth: 20
use_adaboost: False
adaboost_num_estimators: None
adaboost_learning_rate: None
--------
uniques_subset:
['Shell', 'Polish', 'Portugese', 'Modern Ecclesiastical Latin', 'Dutch', 'Haitian', 'Norwegian', 'English', 'Latvian', 'Middle English', 'Cebuano', 'Esperanto', 'Finnish', 'French', 'Swedish', 'Czech', 'random', 'Assembly', 'keyboard_mash', 'JSON', 'German', 'GDScript', 'Lua', 'keyboard_mash_dvorak_simulated', 'Java', 'HTML', 'Typescript', 'python', 'R', 'cpp', 'Haskell', 'OCaml', 'go', 'Kotlin', 'JS', 'Rust', 'php', 'ruby', 'sql']
length of uniques_subset: 39
--------
plotting decision tree... (trial 8/32)
finish plotting decision tree
running trial 9
--------
train_y:
[ 2 14 26 ...  2 12  5]
--------
train_X:
       ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                         ...
1001            0           0           0  ...           0           0           0
1002            0           0           0  ...           0           0           0
1003            0           0           0  ...           0           0           0
1004            0           0           0  ...           0           0           0
1005            0           0           0  ...           0           0           0
...           ...         ...         ...  ...         ...         ...         ...
9996            0           0         403  ...           0           0           0
9997            0           0           0  ...           0           0           0
9998            0           0           0  ...           0           0           0
9999            0           0           0  ...           0           0           0
10000           0           0           0  ...           0           0           0

[9000 rows x 9260 columns]
--------
fitting data... (trial 9/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[ 0  1  2  3  4  2  8  5 12 12  7  8  9 10  4  9 11 12  8  6 11  3 23  2
  5 13 11  5  4 14 11  8  5  1 13  1 15  9  1 15  2  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13 14  8 10 14  6
  4  7  7  6 12 10 11  7 11  3 15 15 10  9 16  5  2  7  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  8 17  8  1  1 13  3 15  2 14
 11  3  9  1  8  6 11 18 15  9  5 10 10  6  4 12 14  3 10 15  9 10  4 11
 10  4 10  5  9  5  5  8  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3  3 12  8 15 14 11  5 15  9  6  1  1  5  5 23 14  1  9 15  3 14
  3 16 18  2  4  7  2  6  2  5  7 15  4  3  6 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  6 17  8 14  4 12  4  6  1  6  6 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 14  8 17
 12  9 11  9  7 14  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 23 14  6  8 10 14  6  3  9  6  8  6  1 11 18 14 13  9  9  2  6
  6  8 11 12  5 13 17 14  9 12 15  4  4 16 13  6  4  5 10 11 22 11 17 12
  9  1 13  5  1  6  7  3  9 10  7 13 14  6 13  8 10  3 13 13  9  6 13  8
  4 12 13 14  6 12  5 10  4  4  8  5  1 13  1 11 10  1 17  2  6  6 17  1
 14  3  1  2 10  5 15 12  2  7 14 14  1 10  7 10 12 13  7 14 10 15 16 14
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  7 14  8 10  7 10 13 10  5  2  2  1 10  1 12 10 12 19  9 18  4  7 13 17
 12 14 13 12  9 14  6  9 15 10  2  2  8  6 17 12  3 16 13 11  3 14  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10  4 13 12 14 12 14 23 16 23 11
  5 15  9  6  8 12 15 12  9  9 14 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7  6 16 14 17 14  2  5 18  2 23  7 12  5 14 13 13  5  5
 10 14 17 14  8  2  2 14  6 14 14  8 10 16 14  7  3 12  6  4  9  0  1 10
  9  9  7  9  8  9 15 15  8 16  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  6 21  3  5  2  3  4  8 17 23  3  8  7 18 15 17  3  7  6 15 18  4
  3 11 10  3 12 14  4  8  2 12  1 14 16 10 17 15 14  7  8  9 13 14 15 11
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 10  6 12 11 11  2 10  8  4  9
 14 15 14 13  2  6  2 11 17 11 14 15 15  7  1 17  6  1  8  6 23  8  4 12
  9  2 13  9 15 17 16  5  1  9  7 12  9  7 14 15 15  9 12 14  7 14 12 15
  9 14  7  9 15 15  1  7 10 13  5  7  3 13  5 14  4 17 10  1  8 23  7  2
 10 13 12  4  8 14 12  6  7  4  6 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  2  4 11  9 17 12
  1  9 12  7 12  9 14 12 11  7  6 15  8  8  8 19 12 11 12  5 12  9 17  8
  5  2  6  3 17 12  1  8  7 13  7 12  5 15  5  6 14  7  5  1 15  7 11 13
  7 14 15  7  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14  4  3 17  7
  8  8  8  9 10 11  1  1  4 13  1 14  5 15  8 10  2 18  6  9  8  7  4 16
 15 18  2  9  3  3 11 12  4  6  6 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 14  1 13 13  2  1 13  8 15  9  2  9 13 12
  3  7 12  8 15 11 14  2  8 11 14 14 16 10 13 11 12  8  4  8  2  8  3  6
  7 11  7  3  4 12  7 15 13  1 14 17  2  3 13  1]
--------
train_predict_y:
[ 2 14 26 ...  2 12  5]
--------
train_matching_elements: 8774
train_total_elements: 9000
train_accuracy: 0.9748888888888889
--------
test_matching_elements: 869
test_total_elements: 1000
test_accuracy: 0.869
--------
test params:
trial_num: 9
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 10000, None)
max_depth: 40
use_adaboost: False
adaboost_num_estimators: None
adaboost_learning_rate: None
--------
uniques_subset:
['Shell', 'Polish', 'Portugese', 'Modern Ecclesiastical Latin', 'Dutch', 'Haitian', 'Norwegian', 'English', 'Latvian', 'Middle English', 'Cebuano', 'Esperanto', 'Finnish', 'French', 'Swedish', 'Czech', 'random', 'Assembly', 'keyboard_mash', 'JSON', 'German', 'GDScript', 'Lua', 'keyboard_mash_dvorak_simulated', 'Java', 'HTML', 'Typescript', 'python', 'R', 'cpp', 'Haskell', 'OCaml', 'go', 'Kotlin', 'JS', 'Rust', 'php', 'ruby', 'sql']
length of uniques_subset: 39
--------
plotting decision tree... (trial 9/32)
finish plotting decision tree
running trial 10
--------
train_y:
[ 2 14 26 ...  2 12  5]
--------
train_X:
       ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                         ...
1001            0           0           0  ...           0           0           0
1002            0           0           0  ...           0           0           0
1003            0           0           0  ...           0           0           0
1004            0           0           0  ...           0           0           0
1005            0           0           0  ...           0           0           0
...           ...         ...         ...  ...         ...         ...         ...
9996            0           0         403  ...           0           0           0
9997            0           0           0  ...           0           0           0
9998            0           0           0  ...           0           0           0
9999            0           0           0  ...           0           0           0
10000           0           0           0  ...           0           0           0

[9000 rows x 9260 columns]
--------
fitting data... (trial 10/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[23  1  2  3  4  2  3  5 12  8  7  8  9 10  4  9 11 12  8  6 11  3  1  2
 10 13 11 12  4 14 11  8  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2 13  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13 13  8 10 14  6
  4  7 14  6 12 10 11  7 11  2 15 15 10  9 16  5  2  7  6 10 12  7 18  3
  8 11  5  8 16 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  4  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  8 17  8  1  1 13  3 15  2 14
 11  3  9  1  8  6 11 18 15  9  5 10 10  6  4 12 10 12 10 15  9 10  4 11
 10  4 10  5  9  5  5  8  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3  3 12  8 15  7 11  5 15  9  6  1  1  5  5 23 14  1  9 15  3 14
  7 16 18  2  4  7  2  6  2  5  7 15  4  3  6 15 13 16 12  7  4 15 11  1
 14  4  4 15 13  3  5  2 12  6 17  8 14  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 14  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 17 14  6  8 10  7  6  3  9  6  8  6  1 11 18 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9  7 15  4 13 16 13  6  4  5 10 11 13 11 30 12
  9  1 13  5  1  6  7  7  9 10  7 13 14  6 13  8 10  3 12 13  9  6 13  8
  4 14 13  4  6 12  5 10  4  4  8  5  1 13  1 11 10  1 17  2  6  6 17  1
 14  3 15  2 14  5 15 12  2  7 14 13  1 10  7 10 12 13  7  6 10 15 15 14
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  3  4  1
  3 14  8 10  7 10 13 10  5  2  2  1 10 15 12 10 12 19  9 16  4  7 13 17
 12 14 13 12  9  4  6  9 15 10  2  2  8  6 17 12  3 16 13 11  3 28  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10  4 13 12 14 12 17 23 16 23 11
  5 15  9  6  8 12 11 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7  6 16 14 17 14  2  5  4  2 23  7 12  5 14 13 13  5  5
 10 14 17 14  8  2  2 14  6 15 14  8 10 15 14  7 30 12  6  4  9  7  1 10
  9  9  7  9  8  9 15  1  8 16  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  6 13  3  5  2  3  6  8 17 23  2  8  7 18 15 17  3  7  6 15 18  4
  3 11 10  3 12 14  4  8  2 12  1 14 14 10 17 15 14  2  8  9 17 14 15 11
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 10  6 12 11 11  2 14  8  4  9
 14 15 14 13  2  6  2 11 17 11  3 15 15  6  1 17  6  1  8  6 23  8  4 12
  9  2 13  9 15 17 22  5  1  9  7 12  9  7 14 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5 14  4 17 10  1  8 23  7  2
 10 13 12  6  8 14 12  6  7  4  6 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 14 12 13  6  7 14  6 10  7  7  6 13  4 11  9 17 12
  1  9 12  7 12  9 14 12 11  7  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13  7 12  5 15  5  6  1  7  5 15 15 23 11 13
  7 11 15  7  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14  4  3 17  7
  8  8  8  9 10 11  1  1  4 13  1  8  5 15  8 10  2 18 14  9  8  7  4 16
 15 18  2  9  3  3 11 12  4  6  6 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13 12
  3  7 12  8 15 11 14  2  8 11 17 14 14 10 13 11 12  8  3  8  2  8  3  7
  7 11  7  3  4 12  7 15 13  1 13 17  2  3 13  1]
--------
train_predict_y:
[ 2 14 26 ...  2 12  5]
--------
train_matching_elements: 8997
train_total_elements: 9000
train_accuracy: 0.9996666666666667
--------
test_matching_elements: 876
test_total_elements: 1000
test_accuracy: 0.876
--------
test params:
trial_num: 10
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 10000, None)
max_depth: None
use_adaboost: False
adaboost_num_estimators: None
adaboost_learning_rate: None
--------
uniques_subset:
['Shell', 'Polish', 'Portugese', 'Modern Ecclesiastical Latin', 'Dutch', 'Haitian', 'Norwegian', 'English', 'Latvian', 'Middle English', 'Cebuano', 'Esperanto', 'Finnish', 'French', 'Swedish', 'Czech', 'random', 'Assembly', 'keyboard_mash', 'JSON', 'German', 'GDScript', 'Lua', 'keyboard_mash_dvorak_simulated', 'Java', 'HTML', 'Typescript', 'python', 'R', 'cpp', 'Haskell', 'OCaml', 'go', 'Kotlin', 'JS', 'Rust', 'php', 'ruby', 'sql']
length of uniques_subset: 39
--------
plotting decision tree... (trial 10/32)
finish plotting decision tree
running trial 11
--------
train_y:
[ 2 14 26 ...  2 12  5]
--------
train_X:
       ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                         ...
1001            0           0           0  ...           0           0           0
1002            0           0           0  ...           0           0           0
1003            0           0           0  ...           0           0           0
1004            0           0           0  ...           0           0           0
1005            0           0           0  ...           0           0           0
...           ...         ...         ...  ...         ...         ...         ...
9996            0           0         403  ...           0           0           0
9997            0           0           0  ...           0           0           0
9998            0           0           0  ...           0           0           0
9999            0           0           0  ...           0           0           0
10000           0           0           0  ...           0           0           0

[9000 rows x 9260 columns]
--------
fitting data... (trial 11/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
 17 13  4  4 14 14 17 17  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 17 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 17 15  9  5 10 10  6  4 10 17  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15 17 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3 17 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 14  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10 17  6  3  9  6  8  6  1 12 15 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 16 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 17  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14 17  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8 17 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 17 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9 13  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 17  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 17 23 16 23 11
  5 15  9  6  8 12 11 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 17 23  8 10 16 14  7 17 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 17  6 12 11 18  2 10 17  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  8 14 23  8  4 12
  9  2 13  9 15 17 25  5  8  9  7 12  9  7 15 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 17  6 10  7  7 14  5  4 11  9 17 12
  1  9 12  7 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15  7  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10 17  1  1  4 17  1  8  5 15  8 10 23 18 14  9  8  7  4  5
 15 17  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9 17  9 13  3
  3  7 12  8 15 11 14  2  8 11 17 14 17 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  8 17  2  3 13  1]
--------
train_predict_y:
[ 2 14 26 ...  2 12  5]
--------
train_matching_elements: 8997
train_total_elements: 9000
train_accuracy: 0.9996666666666667
--------
test_matching_elements: 961
test_total_elements: 1000
test_accuracy: 0.961
--------
test params:
trial_num: 11
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 10000, None)
max_depth: 20
use_adaboost: True
adaboost_num_estimators: 100
adaboost_learning_rate: 1.0
--------
running trial 12
--------
train_y:
[ 2 14 26 18 21  5  1  9  9 12  7 13 10  2  1  1 14  6 15 12 10  8 20  2
  9 18  4 14  4  7  9  3  6  5  4 13 18 11  3  1  4 13 14  5  3 19  2 20
 10 10  5  5  6  4  5  4 10  8  3 14 14 13  6  2  4 18 11 14  7 23  1  8
  4 14 12 11 23  3 17  4 13 17 23  8  7 10  5  9  5  6  7  1 13 12 12  1
 15 12 14  9 12  1 18 12  7 23  4 18 14  5  5 16  8 12  4  2 14  3  6 12
  8 13  1  6  1 18  2 11  1  6  8 12 12  8 12  2  1 17  6  2 12  5  4  8
  1  5  6 18 12  7 12 10  7 14  1  6 15  8 13  7  7 12  4  1  9  8  7 15
 14  3 10  8  6  8  1 10  9 10 15 14  3 18  4 15 15  7  4  5 12  8  3  2
 14 13 14 11  8  1  6  5 12  5  4  5 10  6 11  7 12 14  3  3 17 17 14 13
  4  9 10 10 10 10 10  4 13  7  5 17  6  5  4  6  3  7 16 15  9  3  1  7
  4  9  3 10  8 14 12  4  7 10 13  7 10  8  4  7  1  5  2 13  4 14 14  5
  7  6 12  6 10  6 16  4  8 15 13  9  7  7  2  9  5  4  1  7  8 12  9 11
  7  1  4  7  9  1  1 17 12 10  6 12 13  9 15 13  7 11  2 16  2  7 11 12
  7 10  5 11 14 17  8  4  7  3 14  2  4 12  7 17  4  9 20  4  8 15 12 14
 12  9 14  5 15 12 12  7  6 14 11 12  3  7 15  5  7 23  7  2 17  4 11 23
 13 17 10 13  9 11  8  8 13 13 11  9  2 23  7  9 10  4  5  2 15 14  6 13
  6 12  6 12  6 12  3  9  8  7  3  8 13  7  1  3 10 15 13  9  3  3  7  6
  2 12  6 14  3  1 17 15 17 17 12  4  8 14  2  6 11 14  9  4  2  6  4 10
  8 12 15  2  4 15  7  2 14 10 14  9 18 10  7  5  2  5  2 11 12  1  8  8
 13  1  4  1 16 13  9  2 13 12  9 14  6  3 12  1 12 15  3 10 15 12  7  3
 16 15 11 12 11  6 17  2 27 18 14  9  9 18  9  3 17 12  2  2]
--------
train_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1001           0           0           0  ...           0           0           0
1002           0           0           0  ...           0           0           0
1003           0           0           0  ...           0           0           0
1004           0           0           0  ...           0           0           0
1005           0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
1496           0           0           0  ...           0           0           0
1497           0           0           0  ...           0           0           0
1498         643           0           0  ...           0           0           0
1499           0           0           0  ...           0           0           0
1500           0           0         610  ...           0         305           0

[500 rows x 9260 columns]
--------
fitting data... (trial 12/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[ 7  1  2  3  4  2  4  5  5  3  7 12  9 10  4  9 11 12  8  6  2  3  1  2
  8 13  4  4 14 14 11  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  8 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 15 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4  8  8  1  1 13  7 15  2 14
 11  3  9  1  8  4  8 16 15  9  5 10 10  6  4 10 12  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  8 11  5 15  9  6  1  8  5  5 16 12  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  8 15 13 16 12  7  4 15 11  1
 14  4  4 18 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10  8 11  6  5  2 17  1  9  9  4 21  8 17
 12  9 11  9  7  6  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1  7 14  6  8 10  8  6  3  9  6  8 10  1 12 12 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8  8 13  6  4  5 10 11 13 11  8 12
  9  1 13 11  1 14  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6  6 15  1
 14  3  8  2 10  5 15 12  2  7 14  8  1 10  7 10 12 13  7  6 10 15  8 15
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  8
  7 14  8 10 18 10 13 10  5  2  2  1 10  4 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3  8  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10  4 13 12 14 12  8 23  6 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7  8 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 23 14  7  8 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 18  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 18  4
  3 11 10 13 12 14  4  8  2 12  1  7 12 10 17 15 14  2  8  9  9 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10  7  4  9
  6 15 14 13  2  6  2 11 17 11 11 15 15 12  1 17  6  1  8 14 23  8  4 12
  9  2 13  9 15 17  8  5  8  9  7 12  9  7  6 15 15  9 12 14  7 14 12 15
  9 11  7  9 15 15  1  7 10 13  5  7  3 13  5 14  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14  2 15 15 14  4  5  4 14  6 12 12  8
  7 15  7  5 11  9  7 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12  7 12  9 14 12 11 10  6 15  8  8  8 12 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15  7 11 13
  7 13 15  7  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14  1  3 17  7
  8  8  1  9 10  8  1  1  4 13  1  8  5 15  8 10  2 18 14  9  8  7  4  5
 15 15  2  9  3 23 11 12  4  6  8 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 12  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11  8 14 12 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1 12 17  2  3 13  1]
--------
train_predict_y:
[ 2 14 26 18 21  5  1  9  9 12  7 13 10  2  1  1 14  6 15 12 10  8 20  2
  9 18  4 14  4  7  9  3  6  5  4 13 18 11  3  1  4 13 14  5  3 19  2 20
 10 10  5  5  6  4  5  4 10  8  3 14 14 13  6  2  4 18 11 14  7 23  1  8
  4 14 12 11 23  3 17  4 13 17 23  8  7 10  5  9  5  6  7  1 13 12 12  1
 15 12 14  9 12  1 18 12  7 23  4 18 14  5  5 16  8 12  4  2 14  3  6 12
  8 13  1  6  1 18  2 11  1  6  8 12 12  8 12  2  1 17  6  2 12  5  4  8
  1  5  6 18 12  7 12 10  7 14  1  6 15  8 13  7  7 12  4  1  9  8  7 15
 14  3 10  8  6  8  1 10  9 10 15 14  3 18  4 15 15  7  4  5 12  8  3  2
 14 13 14 11  8  1  6  5 12  5  4  5 10  6 11  7 12 14  3  3 17 17 14 13
  4  9 10 10 10 10 10  4 13  7  5 17  6  5  4  6  3  7 16 15  9  3  1  7
  4  9  3 10  8 14 12  4  7 10 13  7 10  8  4  7  1  5  2 13  4 14 14  5
  7  6 12  6 10  6 16  4  8 15 13  9  7  7  2  9  5  4  1  7  8 12  9 11
  7  1  4  7  9  1  1 17 12 10  6 12 13  9 15 13  7 11  2 16  2  7 11 12
  7 10  5 11 14 17  8  4  7  3 14  2  4 12  7 17  4  9 20  4  8 15 12 14
 12  9 14  5 15 12 12  7  6 14 11 12  3  7 15  5  7 23  7  2 17  4 11 23
 13 17 10 13  9 11  8  8 13 13 11  9  2 23  7  9 10  4  5  2 15 14  6 13
  6 12  6 12  6 12  3  9  8  7  3  8 13  7  1  3 10 15 13  9  3  3  7  6
  2 12  6 14  3  1 17 15 17 17 12  4  8 14  2  6 11 14  9  4  2  6  4 10
  8 12 15  2  4 15  7  2 14 10 14  9 18 10  7  5  2  5  2 11 12  1  8  8
 13  1  4  1 16 13  9  2 13 12  9 14  6  3 12  1 12 15  3 10 15 12  7  3
 16 15 11 12 11  6 17  2 27 18 14  9  9 18  9  3 17 12  2  2]
--------
train_matching_elements: 500
train_total_elements: 500
train_accuracy: 1.0
--------
test_matching_elements: 927
test_total_elements: 1000
test_accuracy: 0.927
--------
test params:
trial_num: 12
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 1500, None)
max_depth: 20
use_adaboost: True
adaboost_num_estimators: 100
adaboost_learning_rate: 1.0
--------
running trial 13
--------
train_y:
[ 2 14 26 18 21  5  1  9  9 12  7 13 10  2  1  1 14  6 15 12 10  8 20  2
  9 18  4 14  4  7  9  3  6  5  4 13 18 11  3  1  4 13 14  5  3 19  2 20
 10 10  5  5  6  4  5  4 10  8  3 14 14 13  6  2  4 18 11 14  7 23  1  8
  4 14 12 11 23  3 17  4 13 17 23  8  7 10  5  9  5  6  7  1 13 12 12  1
 15 12 14  9 12  1 18 12  7 23  4 18 14  5  5 16  8 12  4  2 14  3  6 12
  8 13  1  6  1 18  2 11  1  6  8 12 12  8 12  2  1 17  6  2 12  5  4  8
  1  5  6 18 12  7 12 10  7 14  1  6 15  8 13  7  7 12  4  1  9  8  7 15
 14  3 10  8  6  8  1 10  9 10 15 14  3 18  4 15 15  7  4  5 12  8  3  2
 14 13 14 11  8  1  6  5 12  5  4  5 10  6 11  7 12 14  3  3 17 17 14 13
  4  9 10 10 10 10 10  4 13  7  5 17  6  5  4  6  3  7 16 15  9  3  1  7
  4  9  3 10  8 14 12  4  7 10 13  7 10  8  4  7  1  5  2 13  4 14 14  5
  7  6 12  6 10  6 16  4  8 15 13  9  7  7  2  9  5  4  1  7  8 12  9 11
  7  1  4  7  9  1  1 17 12 10  6 12 13  9 15 13  7 11  2 16  2  7 11 12
  7 10  5 11 14 17  8  4  7  3 14  2  4 12  7 17  4  9 20  4  8 15 12 14
 12  9 14  5 15 12 12  7  6 14 11 12  3  7 15  5  7 23  7  2 17  4 11 23
 13 17 10 13  9 11  8  8 13 13 11  9  2 23  7  9 10  4  5  2 15 14  6 13
  6 12  6 12  6 12  3  9  8  7  3  8 13  7  1  3 10 15 13  9  3  3  7  6
  2 12  6 14  3  1 17 15 17 17 12  4  8 14  2  6 11 14  9  4  2  6  4 10
  8 12 15  2  4 15  7  2 14 10 14  9 18 10  7  5  2  5  2 11 12  1  8  8
 13  1  4  1 16 13  9  2 13 12  9 14  6  3 12  1 12 15  3 10 15 12  7  3
 16 15 11 12 11  6 17  2 27 18 14  9  9 18  9  3 17 12  2  2  5 11  7 17
 12 10 12  6 14  6  7 10 13 13  6  4 14 10 14 10  4  2  6  9  7  7 10 14
 15 16  5 12 12 13  1 15  7 17 14  1  6 16 13  3 14 14  2 16  4  4  6 15
  5 13 15  6 14 10  2  6 13 15 14 17  3 10 12  1  3  9 16 14  1  3 23 17
 17  5  9  8  6  5 10 11 26  6 14  4 10  1  4 11 19 14  4  7 14 14 15 16
  8 18  9 18 11 12 13 10 15 15  6  9 14  8  6  8  7 14  8 11 15  7  2  1
 12  6  8  8  4 15  6  3  2 13 14  8  1 10  4  1  1 13 11 11  2  2 14 12
  3 16 13  4  5  6  1  6  6  2 18 15 11 11 18  1  2  2 12  6 17 13  8 11
  6  6 12  9  1  6  1  2 14 16  7  1 12  8 11 13 10  1  6  9  6  2  4  3
 14  8 12  7 16  8 12  4  8  3  8  1 14  9  6 14  3 18 12 23  2  2  8 14
 10  9  9 23  8 11 11  4  6 12 15  6 10 17  3  9  7  8 17 14 11  6 12  4
  6  1  9  8  9 12  4  1 15  2  9 13  8  6 16 14  8 10  2  1  3 14  9  2
  7 11 10  9  2  9 11 13  8 15 10  8 14 16  7  5  6  5 11 12 11 17  3  4
 26 14 11 11  9 11  6  6 15  9 25 11 12 12 12 12  3  2 17 28  5  8  3  6
 12  4  5  7  8 23 11  5  5 15  6 12 11 14  7  5 17 10 12 14 15 10  3 15
  5 15  9 10  9  5  9  6  3  2  1 13  5 14 17  4 23 14  3 17  2 11  4  1
  6  9 11  8  6  6 13 17 19  9  9  5 17  3 12  4 18  4  3  1  3 13 13  1
  1 12 10 13 15 15  1 16 15  7  2 11 18 13  3 13  4 14  2 11 10  3 12  5
  1 12  4 11  3  8 12 18  2  2  2  1  7  6  2 11  3  8  1 11  8 12 10  1
  4  1 23 12  3  5  1  9  6  2  1 12  9 18 13  1  1  1 25 12  7 12  4 11
  6  1 12  5 23 12 12  3  1 29  4 11 13  3  2 16  9 13  6  6  8  3 16 17
 10 14  2  9  7 15  9  1 11  3  2  7 15  2  2  1]
--------
train_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1001           0           0           0  ...           0           0           0
1002           0           0           0  ...           0           0           0
1003           0           0           0  ...           0           0           0
1004           0           0           0  ...           0           0           0
1005           0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
1996           0         393           0  ...           0           0           0
1997         547           0           0  ...           0           0           0
1998           0           0         721  ...           0           0           0
1999           0           0           0  ...           0         456           0
2000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
fitting data... (trial 13/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[ 7  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  6 13  4  4 14 14 11  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 16 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2  8  6 10 12  7 18  3
  8 11  5  8 16 14  6  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4  8  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10 11  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  7 16 18  2  4  7  2  6  2  5  7 15  4  3  6 15 13  1 12  7  4 15 11  1
 14  4  4 18 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 16 11  6  5  2 17  1  9  9  4 16  8 17
 12  9 11  9  7  8  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1  7 14  6  8 10  8  6  3  9  6  8  6  1 12 12 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11  9 11 16 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13  6  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 10 16  1
 14  3  8  2 10  5 15 12  2  7 14 16  1 10  7 10 12 13  7  6 10 15 18 16
  2  7 11 14  8  1  4  2  8  6 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  7 14  8 10 16 10 13 10  5  2  2  1 10  4 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  8  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3  8  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 16 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7  8 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 18 14  7  8 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9  9 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10  7  4  9
 14 15 14 13  2  6  2 11 17 11 16 15 15 11  1 17  6  1  8 14 23  8  4 12
  9  2 13  9 15 17 25  5  8  9  7 12  9  7  6 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9  7 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12  7 12  9 14 12 11 10  6 15  8  8  8  8 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15  7 11 13
  7 13 15  7  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  1  1  1  4 13  1  8  5 15  8 10 15 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12  8 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 16  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 16 14 12 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  8 17  2  3 13  1]
--------
train_predict_y:
[ 2 14 26 18 21  5  1  9  9 12  7 13 10  2  1  1 14  6 15 12 10  8 20  2
  9 18  4 14  4  7  9  3  6  5  4 13 18 11  3  1  4 13 14  5  3 19  2 20
 10 10  5  5  6  4  5  4 10  8  3 14 14 13  6  2  4 18 11 14  7 23  1  8
  4 14 12 11 23  3 17  4 13 17 23  8  7 10  5  9  5  6  7  1 13 12 12  1
 15 12 14  9 12  1 18 12  7 23  4 18 14  5  5 16  8 12  4  2 14  3  6 12
  8 13  1  6  1 18  2 11  1  6  8 12 12  8 12  2  1 17  6  2 12  5  4  8
  1  5  6 18 12  7 12 10  7 14  1  6 15  8 13  7  7 12  4  1  9  8  7 15
 14  3 10  8  6  8  1 10  9 10 15 14  3 18  4 15 15  7  4  5 12  8  3  2
 14 13 14 11  8  1  6  5 12  5  4  5 10  6 11  7 12 14  3  3 17 17 14 13
  4  9 10 10 10 10 10  4 13  7  5 17  6  5  4  6  3  7 16 15  9  3  1  7
  4  9  3 10  8 14 12  4  7 10 13  7 10  8  4  7  1  5  2 13  4 14 14  5
  7  6 12  6 10  6 16  4  8 15 13  9  7  7  2  9  5  4  1  7  8 12  9 11
  7  1  4  7  9  1  1 17 12 10  6 12 13  9 15 13  7 11  2 16  2  7 11 12
  7 10  5 11 14 17  8  4  7  3 14  2  4 12  7 17  4  9 20  4  8 15 12 14
 12  9 14  5 15 12 12  7  6 14 11 12  3  7 15  5  7 23  7  2 17  4 11 23
 13 17 10 13  9 11  8  8 13 13 11  9  2 23  7  9 10  4  5  2 15 14  6 13
  6 12  6 12  6 12  3  9  8  7  3  8 13  7  1  3 10 15 13  9  3  3  7  6
  2 12  6 14  3  1 17 15 17 17 12  4  8 14  2  6 11 14  9  4  2  6  4 10
  8 12 15  2  4 15  7  2 14 10 14  9 18 10  7  5  2  5  2 11 12  1  8  8
 13  1  4  1 16 13  9  2 13 12  9 14  6  3 12  1 12 15  3 10 15 12  7  3
 16 15 11 12 11  6 17  2 27 18 14  9  9 18  9  3 17 12  2  2  5 11  7 17
 12 10 12  6 14  6  7 10 13 13  6  4 14 10 14 10  4  2  6  9  7  7 10 14
 15 16  5 12 12 13  1 15  7 17 14  1  6 16 13  3 14 14  2 16  4  4  6 15
  5 13 15  6 14 10  2  6 13 15 14 17  3 10 12  1  3  9 16 14  1  3 23 17
 17  5  9  8  6  5 10 11 26  6 14  4 10  1  4 11 19 14  4  7 14 14 15 16
  8 18  9 18 11 12 13 10 15 15  6  9 14  8  6  8  7 14  8 11 15  7  2  1
 12  6  8  8  4 15  6  3  2 13 14  8  1 10  4  1  1 13 11 11  2  2 14 12
  3 16 13  4  5  6  1  6  6  2 18 15 11 11 18  1  2  2 12  6 17 13  8 11
  6  6 12  9  1  6  1  2 14 16  7  1 12  8 11 13 10  1  6  9  6  2  4  3
 14  8 12  7 16  8 12  4  8  3  8  1 14  9  6 14  3 18 12 23  2  2  8 14
 10  9  9 23  8 11 11  4  6 12 15  6 10 17  3  9  7  8 17 14 11  6 12  4
  6  1  9  8  9 12  4  1 15  2  9 13  8  6 16 14  8 10  2  1  3 14  9  2
  7 11 10  9  2  9 11 13  8 15 10  8 14 16  7  5  6  5 11 12 11 17  3  4
 26 14 11 11  9 11  6  6 15  9 25 11 12 12 12 12  3  2 17 28  5  8  3  6
 12  4  5  7  8 23 11  5  5 15  6 12 11 14  7  5 17 10 12 14 15 10  3 15
  5 15  9 10  9  5  9  6  3  2  1 13  5 14 17  4 23 14  3 17  2 11  4  1
  6  9 11  8  6  6 13 17 19  9  9  5 17  3 12  4 18  4  3  1  3 13 13  1
  1 12 10 13 15 15  1 16 15  7  2 11 18 13  3 13  4 14  2 11 10  3 12  5
  1 12  4 11  3  8 12 18  2  2  2  1  7  6  2 11  3  8  1 11  8 12 10  1
  4  1 23 12  3  5  1  9  6  2  1 12  9 18 13  1  1  1 25 12  7 12  4 11
  6  1 12  5 23 12 12  3  1 29  4 11 13  3  2 16  9 13  6  6  8  3 16 17
 10 14  2  9  7 15  9  1 11  3  2  7 15  2  2  1]
--------
train_matching_elements: 1000
train_total_elements: 1000
train_accuracy: 1.0
--------
test_matching_elements: 945
test_total_elements: 1000
test_accuracy: 0.945
--------
test params:
trial_num: 13
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 2000, None)
max_depth: 20
use_adaboost: True
adaboost_num_estimators: 100
adaboost_learning_rate: 1.0
--------
running trial 14
--------
train_y:
[ 2 14 26 ... 15 10  4]
--------
train_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1001           0           0           0  ...           0           0           0
1002           0           0           0  ...           0           0           0
1003           0           0           0  ...           0           0           0
1004           0           0           0  ...           0           0           0
1005           0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
2996           0           0           0  ...           0           0           0
2997           0           0           0  ...           0           0           0
2998           0           0           0  ...           0           0           0
2999           0           0           0  ...           0           0           0
3000           0           0           0  ...           0           0           0

[2000 rows x 9260 columns]
--------
fitting data... (trial 14/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[ 7  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14 11  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14 12  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 26  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10 11  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  8 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  7 18 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10  8 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7  8  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1  8 14  6  8 10  8  6  3  9  6  8  6  1 12 15 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13  8  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14 11  1 10  7 10 12 13  7  6 10 15 18  8
  2  7 11 14  8  1  4  2  8  6 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 14 12 10 12 19  9 16  4  8 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3  8  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 26 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17 21  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6  8 23  8 10 16 14  7  8 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 15  6 13  8  2 12 10  4  9 18  8  6 12 11 18  2 10  8  4  9
 14 15 14 13  2  6  2 11 17 11 11 15 15 14  1 17  6  1  8 14 23  8  4 12
  9  2 13  9 15 17 25  5  8  9  7 12  9  7  6 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12  7 12  9 14 12 11 10  6 15  8  8  8  8 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15  7 11 13
  7 13 15  7  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  8  1  1  4 13  1  8  5 15  8 10  2 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1  8  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 26 14 12 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1 12 17  2  3 13  1]
--------
train_predict_y:
[ 2 14 26 ... 15 10  4]
--------
train_matching_elements: 2000
train_total_elements: 2000
train_accuracy: 1.0
--------
test_matching_elements: 958
test_total_elements: 1000
test_accuracy: 0.958
--------
test params:
trial_num: 14
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 3000, None)
max_depth: 20
use_adaboost: True
adaboost_num_estimators: 100
adaboost_learning_rate: 1.0
--------
running trial 15
--------
train_y:
[ 2 14 26 ... 10 22  2]
--------
train_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1001           0           0           0  ...           0           0           0
1002           0           0           0  ...           0           0           0
1003           0           0           0  ...           0           0           0
1004           0           0           0  ...           0           0           0
1005           0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
5996           0           0           0  ...           0           0           0
5997           0           0           0  ...           0           0           0
5998           0           0           0  ...           0           0           0
5999           0           0        5958  ...           0           0           0
6000           0           0           0  ...           0           0           0

[5000 rows x 9260 columns]
--------
fitting data... (trial 15/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[17  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 17  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 24 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10 17  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  1 11  5 15  9  6  1  8  5  5 17 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3 17 15 13 17 12  7  4 15 11  1
 14  4  4 23 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7  8  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1  8 14  6  8 10 14  6  3  9  6  8  6  1 12 15 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 14  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14 13  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  6 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10  4 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9 11  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 17  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 17 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 17 12  6  4  9  7  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2 17 18  8 17 23  3 10  7 18 15 17  3  7  6 15 17  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 11
  3 17  1 13 19 17 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 17  4  9
 14 15 14 13  2  6  2 11 17 11 16 15 15  6  1 17  6  1 17 14 23  8  4 12
  9  2 13  9 15 17 25  5 17  9  7 12  9  7 15 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12  7 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15  7 11 13
  7 13 15  7  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  1  1  1  4 13  1  8  5 15  8 10 17 18 14  9  8  7  4  5
 15 17  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13 17
  3  7 12  8 15 11 14  2  8 11 17 14 12 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1 17 17  2  3 13  1]
--------
train_predict_y:
[ 2 14 26 ... 10 22  2]
--------
train_matching_elements: 4999
train_total_elements: 5000
train_accuracy: 0.9998
--------
test_matching_elements: 957
test_total_elements: 1000
test_accuracy: 0.957
--------
test params:
trial_num: 15
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 6000, None)
max_depth: 20
use_adaboost: True
adaboost_num_estimators: 100
adaboost_learning_rate: 1.0
--------
running trial 16
--------
train_y:
[ 2 14 26 ...  2 12  5]
--------
train_X:
       ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                         ...
1001            0           0           0  ...           0           0           0
1002            0           0           0  ...           0           0           0
1003            0           0           0  ...           0           0           0
1004            0           0           0  ...           0           0           0
1005            0           0           0  ...           0           0           0
...           ...         ...         ...  ...         ...         ...         ...
9996            0           0         403  ...           0           0           0
9997            0           0           0  ...           0           0           0
9998            0           0           0  ...           0           0           0
9999            0           0           0  ...           0           0           0
10000           0           0           0  ...           0           0           0

[9000 rows x 9260 columns]
--------
fitting data... (trial 16/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[17  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 17  3  1  2
  5 13  4  4 14 14 11  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11 15 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 17 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 18 15  9  5 10 10  6  4 10 17  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15 17 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  7 16 18  2  4  7  2  6  2  5  7 15  4  3 15 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 17  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10 14  6  3  9  6  8  6  1 11 17 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 17  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14 17  8 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  3 15 12 13 16  6  4  9  3 18 10 15  2  4  3
  4 14  8 10 16 10 13 10  5  2  2  1 10 17 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9 17  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 17  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 17 23 16 23 11
  5 15  9  6  8 12 11 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7  8 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 17  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  8 14 23  8  4 12
  9  2 13  9 15 17 25  5  1  9  7 12  9  7 15 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5 14  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 17  6 10  7  7  6 15  4 11  9 17 12
  1  9 12  7 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15  7  2  2 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10 17  1  1  4 13  1  8  5 15  8 10 17 18 14  9  8  7  4  5
 15 17  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 17 14  8 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1 17 17  2  3 13  1]
--------
train_predict_y:
[ 2 14 26 ...  2 12  5]
--------
train_matching_elements: 8997
train_total_elements: 9000
train_accuracy: 0.9996666666666667
--------
test_matching_elements: 958
test_total_elements: 1000
test_accuracy: 0.958
--------
test params:
trial_num: 16
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 10000, None)
max_depth: 20
use_adaboost: True
adaboost_num_estimators: 100
adaboost_learning_rate: 1.0
--------
running trial 17
--------
train_y:
[ 2 14 26 ...  2 12  5]
--------
train_X:
       ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                         ...
1001            0           0           0  ...           0           0           0
1002            0           0           0  ...           0           0           0
1003            0           0           0  ...           0           0           0
1004            0           0           0  ...           0           0           0
1005            0           0           0  ...           0           0           0
...           ...         ...         ...  ...         ...         ...         ...
9996            0           0         403  ...           0           0           0
9997            0           0           0  ...           0           0           0
9998            0           0           0  ...           0           0           0
9999            0           0           0  ...           0           0           0
10000           0           0           0  ...           0           0           0

[9000 rows x 9260 columns]
--------
fitting data... (trial 17/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[16  1  2  3  4  2 13  5  5  6  7  8  9 10  4  9 11 12  8 11 16  3  1  2
 14 13 14  4 14 14 11  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 14 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14 14  9 15  5  6 14 13  4  1  4  9 12 14  9 15  8 23  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2 13 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 14 15  9  5 10 10  6  4 10 16  8 10 15 13 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15 11 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 14 18  2  4  6  2  6  2  5  7 15  4  3 14 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  7  4 12  4  6  1  6  6 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  6  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 14  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10 11  6  3  6  6  8 14  1 11 15 14 13  9  9  2 14
  6  8 11 14  5 13 17 14  9 16 15  4  8 23 13  6  4  5 10 11 13 11 17 12
  9  1 13 14  1  6  7 12  9 10  7 13  3  6  3  8 10  3 12 13  9  6  5  2
  4 14 13 11  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6  6 17  1
 14  3  8  2 10  5 15 12  2  7 14 16  8 10  7 10 12 13  7  6 10 15 18 16
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  6  3 18 10 14  3  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 14 12 10 12 19  6 18  4  4 13 17
 12 14 13 12  9 11  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 14  3 14
  5  8  4  5  6 15 12  6  8 17  7  2 14 10 15 13 14 14 12 16 23 16 23 11
  5 15  9  6  8 12 15 12  9  9 16 11 15  6  1  4 12  1 17  3  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14 13 13  5  5
 10 14 17 14  8  2  2 14  6 16 23  8 10 16 14  7 23 12  6  4  9  7  1 10
  9  6  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 23  8 17 23  3  6  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  6 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 23  6 12 11 18  2 10  3  4  9
  6 15 14 13  2  6  2 11 17 11 23 15 15  6 11 17  6  1  8 14 23  8  4 12
  9  2 13  9 15 17 12  5 11  9  7 12  9  7 14 15 15  9 12 14  7 14 12 15
  9 18  7  9 15 15  1  7 11 13  5  7 13 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 13 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 11  6 10  7  7  6 15  4 11  9 17  3
  1  9 12 16 12  9 14 12 11 14  6 15  8  8  8 19 12 11 12  5  6  9 17  8
  5  2  6  3 17 12 11  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 14 15  7  2 14 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8 12  9 10 11  1  1 14 13  1 16  5 15  8 10  2 18 14  9  8  7  4  5
 15 18  2  9  3 23 11 12  4  6  6 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 16 14 14 10  5 11 12  8  4  4  2  8  3 14
  7 11  7  3  4 12  7 15 13  1  6 17  3  3 13  1]
--------
train_predict_y:
[ 2 14 26 ...  2 12  5]
--------
train_matching_elements: 8631
train_total_elements: 9000
train_accuracy: 0.959
--------
test_matching_elements: 901
test_total_elements: 1000
test_accuracy: 0.901
--------
test params:
trial_num: 17
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 10000, None)
max_depth: 5
use_adaboost: True
adaboost_num_estimators: 100
adaboost_learning_rate: 1.0
--------
running trial 18
--------
train_y:
[ 2 14 26 ...  2 12  5]
--------
train_X:
       ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                         ...
1001            0           0           0  ...           0           0           0
1002            0           0           0  ...           0           0           0
1003            0           0           0  ...           0           0           0
1004            0           0           0  ...           0           0           0
1005            0           0           0  ...           0           0           0
...           ...         ...         ...  ...         ...         ...         ...
9996            0           0         403  ...           0           0           0
9997            0           0           0  ...           0           0           0
9998            0           0           0  ...           0           0           0
9999            0           0           0  ...           0           0           0
10000           0           0           0  ...           0           0           0

[9000 rows x 9260 columns]
--------
fitting data... (trial 18/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[17  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6  3  3  1  2
 16 13 17 14 14 14 17 14  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  3  6 13  3  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10 17  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15 17 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  7 16 18  2  4  7  2  6  2  5  7 15  4  3  3 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7  3  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 17 14  6  8 10 14  6  3  9  6  8  6  1  3 11 14 13  9  9  2  3
  6  8 11 14  5 13 17 14  9 17 15  4  8 16 13  6  4  5 10 11 13 11 17 12
  9  1 13 16  1  6  7 16  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 17  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6  6 17  1
 14  3  8  2 10  5 15 12  2  7 14 17  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  3 15 12 13  3  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10  6 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  3  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 17  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10  3 13 12 14 12 17 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 17 12  6  4  9  3  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15  3
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 17  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 17  1 17  6  1  6  6 23  8  4 12
  9  2 13  9 15 17 25  5 14  9  7 12  9  7  6 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7  3 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12  7 12  9 14 12 11 17  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15  7 11 13
  7 13 15  7  2  3 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  3  1  1  4 13  1  8  5 15  8 10 17 18 14  9  8  7  4  6
 15 16  2  9  3 16 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9 11  9 13  3
  3  7 12  8 15 11 14  2  8 11 17 14 11 10  5 11 12  8  4  4  2  8  3  3
  7 11  7  3  4 12  7 15 13  1 17 17  2  3 13  1]
--------
train_predict_y:
[ 2 14 26 ...  2 12  5]
--------
train_matching_elements: 8997
train_total_elements: 9000
train_accuracy: 0.9996666666666667
--------
test_matching_elements: 942
test_total_elements: 1000
test_accuracy: 0.942
--------
test params:
trial_num: 18
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 10000, None)
max_depth: 10
use_adaboost: True
adaboost_num_estimators: 100
adaboost_learning_rate: 1.0
--------
running trial 19
--------
train_y:
[ 2 14 26 ...  2 12  5]
--------
train_X:
       ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                         ...
1001            0           0           0  ...           0           0           0
1002            0           0           0  ...           0           0           0
1003            0           0           0  ...           0           0           0
1004            0           0           0  ...           0           0           0
1005            0           0           0  ...           0           0           0
...           ...         ...         ...  ...         ...         ...         ...
9996            0           0         403  ...           0           0           0
9997            0           0           0  ...           0           0           0
9998            0           0           0  ...           0           0           0
9999            0           0           0  ...           0           0           0
10000           0           0           0  ...           0           0           0

[9000 rows x 9260 columns]
--------
fitting data... (trial 19/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[17  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13 17  8 10 14  6
  4  7 14  6 12 10 11  7 11  1 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 17 14 17  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 17 15  9  5 10 10  6  4 10 17  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15 17 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3 17 15 13 16 12  7  4 15 11  1
 14  4  4 18 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 25  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 17 14  6  8 10 14  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 16 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 17  6 12 16 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14 17  1 10  7 10 12 13  7  6 10 15 17 17
  2  7 11 14  8  1  4  2  8 17 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10  4 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9 17  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 17  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 17 23 16 23 11
  5 15  9  6  8 12 17 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 17 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 17 23  8 10 16 14  7 17 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2 17 18  8 17 23  3 10  7 18 15 17  3  7  6 15 17  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 17  6 12 11 18  2 10 17  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5 14  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7 14  5  4 11  9 17 12
  1  9 12  7 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15  7  2  2 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10 17  1  1  4 13  1  8  5 15  8 10  2 18 14  9  8  7  4  5
 15 23  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 17 14 16 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1 17 17  2  3 13  1]
--------
train_predict_y:
[ 2 14 26 ...  2 12  5]
--------
train_matching_elements: 8997
train_total_elements: 9000
train_accuracy: 0.9996666666666667
--------
test_matching_elements: 956
test_total_elements: 1000
test_accuracy: 0.956
--------
test params:
trial_num: 19
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 10000, None)
max_depth: 20
use_adaboost: True
adaboost_num_estimators: 100
adaboost_learning_rate: 1.0
--------
running trial 20
--------
train_y:
[ 2 14 26 ...  2 12  5]
--------
train_X:
       ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                         ...
1001            0           0           0  ...           0           0           0
1002            0           0           0  ...           0           0           0
1003            0           0           0  ...           0           0           0
1004            0           0           0  ...           0           0           0
1005            0           0           0  ...           0           0           0
...           ...         ...         ...  ...         ...         ...         ...
9996            0           0         403  ...           0           0           0
9997            0           0           0  ...           0           0           0
9998            0           0           0  ...           0           0           0
9999            0           0           0  ...           0           0           0
10000           0           0           0  ...           0           0           0

[9000 rows x 9260 columns]
--------
fitting data... (trial 20/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[23  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  2 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 17 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10 11  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  6 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 14  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10 14  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 16 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 17  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14 13  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  6 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10  4 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 17  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 17 23 16 23 11
  5 15  9  6  8 12 11 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10  7  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  8 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12  7 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15  7  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10 11  1  1  4 13  1  8  5 15  8 10 23 18 14  9  8  7  4  5
 15 14  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 17 14 12 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
train_predict_y:
[ 2 14 26 ...  2 12  5]
--------
train_matching_elements: 8997
train_total_elements: 9000
train_accuracy: 0.9996666666666667
--------
test_matching_elements: 976
test_total_elements: 1000
test_accuracy: 0.976
--------
test params:
trial_num: 20
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 10000, None)
max_depth: 40
use_adaboost: True
adaboost_num_estimators: 100
adaboost_learning_rate: 1.0
--------
running trial 21
--------
train_y:
[ 2 14 26 ...  2 12  5]
--------
train_X:
       ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                         ...
1001            0           0           0  ...           0           0           0
1002            0           0           0  ...           0           0           0
1003            0           0           0  ...           0           0           0
1004            0           0           0  ...           0           0           0
1005            0           0           0  ...           0           0           0
...           ...         ...         ...  ...         ...         ...         ...
9996            0           0         403  ...           0           0           0
9997            0           0           0  ...           0           0           0
9998            0           0           0  ...           0           0           0
9999            0           0           0  ...           0           0           0
10000           0           0           0  ...           0           0           0

[9000 rows x 9260 columns]
--------
fitting data... (trial 21/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[23  1  2  3  4  2  4  5 12  2  7  8  9 10  4  9 11 12  8  6 11  3  1  2
 15 13 11  4 15 14 11  1  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  1  8 10 14  6
  4  7 14  6 12 10 11  7 11 14 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 16 14 16  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2 13 17  8  1  1 13  3 15  2 14
 11  3  9  1  8  6 11 18 15  9  5 10 10  6  4  2 17 12 10 15  9 10  4 11
 10  4 10  5  9  5  5  8  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  3 11  5 15  9  6  1  8  5  5 23 14  1  9 15  3 14
  7 16 18  2  4  7  2  6  2  5  7 15  4  3  6 15 13 16 12  7  4 15 11  1
 14  4  4 15 13  3  5  2 12  6 17  8 14  4 12  4  6  1  6  6 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 23 14  6  8 10 11  6  3  9  6  8  6  1 11 14 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 15 15  4 13 16 13  6  4  5 10 11 13 11 17 12
  9  1 13  1  1  6  7  7  9 10  7 13  3  6 13  8 10  3 11 13  9  6 13  8
  4 14 13  4  6 12  4 10  4  4  8  5  1 13  1 11 10  1 17  2  6  6 17  1
 14  3  8  2 14  5 15 12  2  7 14 17  1 10  7 10 12 13  7  6 10 15 18 14
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  7 14  8 10  7 10 13 10  5  2  2  1 10 15 12 10 12 19  9 16  4  7 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  3 16 13 11  3 14  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10  4 13 12 14 12 17 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11  1 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 30 12  6  4  9 23  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  6  2  3  5  2  3 18  8 17 23  2 10  7 18 15 17  3  7  6 15 18  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 11
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 10  6 12 11 11  2 14  8  4  9
 14 15 14 13  2  6  2 11 17 11  3 15 15  7  1 17  6  1  8 14 23  8  4 12
  9  2 13  9 15 17 25  5  1  9  7 12  9  7 14 15 15  9 12 14  7 14 12 15
  9 18  7  9 15 14  1  7 10 13  5  7  3 13  5 14  4 17 10  1  8 23  7  2
 10  3 12  6  8 14 12  6  7  4  6 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  4 11  9 11 23 12 13  6  7 14  6 10  7  7  6  4  4 11  9 17 12
  1  9 12  7 12  9 14 12 11  7  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13  4 12  5 15  5  6 13  7  5 15 15  7 11 13
  7 15 15  7  2 12 16 14  2  9  3 13 14  8  5  1 12 13  1 14  4  3 17  7
  8  8  8  9 10 11  1  1  4 13  1  8  5 15  8 10  2 18 14  9  8  7  4 16
 15 18  2  9  3  3 11 12  4  6  6 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9 11  9 13 15
  3  7 12  8 15 11 14  2  8 11 17 14 14 10 13 11 12  8  4  8  2  8  3  6
  7 11  7  3  4 12  7 15 13  1  2 17  2  3 13  1]
--------
train_predict_y:
[ 2 14 26 ...  2 12  5]
--------
train_matching_elements: 8984
train_total_elements: 9000
train_accuracy: 0.9982222222222222
--------
test_matching_elements: 897
test_total_elements: 1000
test_accuracy: 0.897
--------
test params:
trial_num: 21
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 10000, None)
max_depth: None
use_adaboost: True
adaboost_num_estimators: 100
adaboost_learning_rate: 1.0
--------
running trial 22
--------
train_y:
[ 2 14 26 ...  2 12  5]
--------
train_X:
       ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                         ...
1001            0           0           0  ...           0           0           0
1002            0           0           0  ...           0           0           0
1003            0           0           0  ...           0           0           0
1004            0           0           0  ...           0           0           0
1005            0           0           0  ...           0           0           0
...           ...         ...         ...  ...         ...         ...         ...
9996            0           0         403  ...           0           0           0
9997            0           0           0  ...           0           0           0
9998            0           0           0  ...           0           0           0
9999            0           0           0  ...           0           0           0
10000           0           0           0  ...           0           0           0

[9000 rows x 9260 columns]
--------
fitting data... (trial 22/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  6 13 14 12 14 14 11  8  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 18  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  3  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4  3 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  3  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15 14 11  5 15  9  6  1  8  5  5 23 14  1  9 15  3 14
  7 16 18  2  4  7  2  6  2  5  7 15  4  3  3 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7  3  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 17 14  6  8 10 14  6  3  9  6  8  6  1  8  8 14 13  9  9  3  6
  6  8 11 14  5 13 17 14  9 16 15  4  8 16 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10 14 12 13  3  6  5  8
  4 14 13 11  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7  6  3  1 10  7 10 12 13  7  6 10 15 18 16
  2  7 11 14  8  1  4  2  8 15 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 14 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  3  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3  8  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12  3 23 16 23 11
  5 15  9  3  8 12 15 12  9  9  3 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 16 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 23  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 14 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 14  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  8 14 23  8  4 12
  9  2 13  9 15 17 25  5 14  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 23  7  9 23 15  1  7 10 14  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8  6 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6 14  4 11  9 17 12
  1  9 12  7 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15  7 11 13
  7 13 15  7  2  2 16 15  2  9  3 13 14  8  5  1 12 13  1 14  3  3 17  7
  8  8  1  9 10  3  1  1  4 13  1  8  5 15  8 10 23 18 14  9  8  7  4  5
 15 14  2  9  3 23 11 12  4  6  6 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  3  9 13  3
  3  7 12  8 15 11 14  2  8 11  3 14 11 10  5 11 12  8  4  4  2  8  3  3
  7 11  7  3  4 12  7 15 13  1 14 17  2  3 13  1]
--------
train_predict_y:
[ 2 14 26 ...  2 12  5]
--------
train_matching_elements: 8997
train_total_elements: 9000
train_accuracy: 0.9996666666666667
--------
test_matching_elements: 940
test_total_elements: 1000
test_accuracy: 0.94
--------
test params:
trial_num: 22
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 10000, None)
max_depth: 20
use_adaboost: True
adaboost_num_estimators: 25
adaboost_learning_rate: 1.0
--------
running trial 23
--------
train_y:
[ 2 14 26 ...  2 12  5]
--------
train_X:
       ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                         ...
1001            0           0           0  ...           0           0           0
1002            0           0           0  ...           0           0           0
1003            0           0           0  ...           0           0           0
1004            0           0           0  ...           0           0           0
1005            0           0           0  ...           0           0           0
...           ...         ...         ...  ...         ...         ...         ...
9996            0           0         403  ...           0           0           0
9997            0           0           0  ...           0           0           0
9998            0           0           0  ...           0           0           0
9999            0           0           0  ...           0           0           0
10000           0           0           0  ...           0           0           0

[9000 rows x 9260 columns]
--------
fitting data... (trial 23/32)
test_X:
      ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                        ...
1              0           0           0  ...           0           0           0
2              0           0           0  ...           0           0           0
3              0           0           0  ...           0           0           0
4              0           0           0  ...           0           0           0
5              0           0           0  ...           0           0           0
...          ...         ...         ...  ...         ...         ...         ...
996            0           0           0  ...           0           0           0
997            0           0           0  ...           0         643           0
998            0           0           0  ...           0           0           0
999            0           0           0  ...           0           0           0
1000           0           0           0  ...           0           0           0

[1000 rows x 9260 columns]
--------
test_y:
[ 0  1  2  3  4  2  4  5  5  6  7  8  9 10  4  9 11 12  8  6 11  3  1  2
  5 13  4  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  3 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 18 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10  5  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15  7 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 16 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 11  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 10 14  6  8 10  3  6  3  9  6  8  6  1 12  2 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 12  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6 14 17  1
 14  3  8  2 10  5 15 12  2  7 14  4  1 10  7 10 12 13  7  6 10 15 18 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10 16 10 13 10  5  2  2  1 10 20 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9  2  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3 21  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 22 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 15 23  8 10 16 14  7 16 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 16  3  5  2  6 18  8 17 23  3 10  7 18 15 17  3  7  6 15 16  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 16  6 12 11 18  2 10 24  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 14  1 17  6  1  3 14 23  8  4 12
  9  2 13  9 15 17 25  5  6  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 16  7  9 15 15  1  7 10 13  5  7  3 13  5  6  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12 22 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5  2  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15 26  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10  5  1  1  4 13  1 15  5 15  8 10 23 18 14  9  8  7  4  5
 15 16  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13  3
  3  7 12  8 15 11 14  2  8 11 22 14  4 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1  6 17  2  3 13  1]
--------
predict_y:
[23  1  2  3  4  2  4  5  5 14  7  8  9 10  4  9 11 12  8  6  2  3  1  2
  0 13 17  4 14 14  1  4  5  1 13  1 15  9  1 15 16  2 10 15 17 11  4  1
 10  2  3  3 11 18 10 13  4 10  7  5  7  3  7 14  6  6 13  2  8 10 14  6
  4  7 14  6 12 10 11  7 11  2 15 15 10  9 16  5  2 11  6 10 12  7 18  3
  8 11  5  8 17 14  8  9 15  5  9  6 13  4  1  4  9 12 14  9 15  8  7  2
  4 13 13 17  7  7  3 15  9  5 17 12 17  2  4 17  8  1  1 13  7 15  2 14
 11  3  9  1  8  4 11 16 15  9  5 10 10  6  4 10 17  8 10 15  9 10  4 11
 10  4 10  5  9  5  5  4  2  6 10  8  8 12  9  1  1  2  9 15  7  6  1 14
 12 10  3 13 12  8 15 17 11  5 15  9  6  1  8  5  5 16 14  1  9 15  3 14
  4 16 18  2  4  7  2  6  2  5  7 15  4  3  5 15 13 16 12  7  4 15 11  1
 14  4  4 18 13  3  5  2 12  5 17  8  1  4 12  4  6  1  6 14 10  8 10 15
 12  8  5 11  2  2 14  4 10  9 10 19 11  6  5  2 17  1  9  9  4 19  8 17
 12  9 11  9  7 25  8  5  4 17 13  6 17  9 10  2  1 10  9  4 17 11  7  5
 13  4  1 17 14  6  8 10 17  6  3  9  6  8  6  1 11 17 14 13  9  9  2  6
  6  8 11 14  5 13 17 14  9 18 15  4  8 18 13  6  4  5 10 11 13 11 17 12
  9  1 13 15  1  6  7  3  9 10  7 13  3  6 13  8 10  3 12 13  9  6  5  8
  4 14 13 17  6 12 18 10  4  4  8  5  1 13  1 11 10  1 17  2  6  6 17  1
 14  3  8  2 10  5 15 12  2  7 14 17 17 10  7 10 12 13  7  6 10 15 17 18
  2  7 11 14  8  1  4  2  8  7 15 12 13 16  6  4  9  3 18 10 15  2  4  1
  4 14  8 10  0 10 13 10  5  2  2  1 10  0 12 10 12 19  9 16  4  4 13 17
 12 14 13 12  9 17  6  9 15 10  2  2  8  6 17 12  8 16 13 11  3  8  3 14
  5  4  4  5  6 15 12  6  8 17  7  2 14 10 15 13 12 14 12 17 23 16 23 11
  5 15  9  6  8 12  8 12  9  9 15 11 15  2  1  4 12  1 17  2  7  3  1  9
  2  3  4 10 11  7 11 18 14 17 14  2  5  4  2 23  7 12  5 14  3 13  5  5
 10 14 17 14  8  2  2 14  6 17 23  8 10 18 14  7 17 12  6  4  9 10  1 10
  9  9  7  9  8  9 15 16  8  1  8 14  5  7  3  1 14  7  5  5  4  8 15 13
  3 14  4 23  3  5  2  6 23  8 17 23  3  6  7 18 15 17  3  7  6 15 17  4
  3 11 10 13 12 14  4  8  2 12  1  7 11 10 17 15 14  2  8  9 13 14 15 12
  3 17  1 13 19  6 13  8  2 12 10  4  9 18 23  6 12 11 17  2 10  7  4  9
 14 15 14 13  2  6  2 11 17 11 18 15 15 17  1 17  6  1 17 14 23  8  4 12
  9  2 13  9 15 17 17  5 17  9  7 12  9  7 23 15 15  9 12 14  7 14 12 15
  9 17  7  9 15 15  1  7 10 13  5  7  3 13  5 14  4 17 10  1  2 23  7  2
 10  3 12  6  8 14 12  6  7  4 16 14 13 15 15 14  4  5  4 14  6 12 12  8
  7  8  7  5 11  9 11 23 12 13  6  7 14  6 10  7  7  6  5  4 11  9 17 12
  1  9 12  7 12  9 14 12 11 10  6 15  8  8  8 19 12 11 12  5 14  9 17  8
  5 18  6  3 17 12  1  8  7 13 14 12  5 15  5  6  2  7  5 15 15 23 11 13
  7 13 15  7  2 12 16 15  2  9  3 13 14  8  5  1 12 13  1 14 15  3 17  7
  8  8  1  9 10 17  1  1  4 13  1  8  5 15  8 10  0 18 14  9  8  7  4  5
 15 17  2  9  3 23 11 12  4  6 14 12 17 12  6  9 10 14  6  3 12  7 23  4
 10 10  7 10  4  7 13 11 10  1 19  1 13 13  2  1 13  8 15  9  2  9 13 17
  3  7 12  8 15 11 14  2  8 11 17 14 12 10  5 11 12  8  4  4  2  8  3  7
  7 11  7  3  4 12  7 15 13  1 17 17  2  3 13  1]
--------
train_predict_y:
[ 2 14 26 ...  2 12  5]
--------
train_matching_elements: 8984
train_total_elements: 9000
train_accuracy: 0.9982222222222222
--------
test_matching_elements: 948
test_total_elements: 1000
test_accuracy: 0.948
--------
test params:
trial_num: 23
test_id_slice: slice(0, 1000, None)
train_id_slice: slice(1000, 10000, None)
max_depth: 20
use_adaboost: True
adaboost_num_estimators: 50
adaboost_learning_rate: 1.0
--------
running trial 24
--------
train_y:
[ 2 14 26 ...  2 12  5]
--------
train_X:
       ('o', 'h')  ('h', 'r')  ('r', 'n')  ...  ('e', ']')  ('E', 'l')  ('S', 'X')
ID                                         ...
1001            0           0           0  ...           0           0           0
1002            0           0           0  ...           0           0           0
1003            0           0           0  ...           0           0           0
1004            0           0           0  ...           0           0           0
1005            0           0           0  ...           0           0           0
...           ...         ...         ...  ...         ...         ...         ...
9996            0           0         403  ...           0           0           0
9997            0           0           0  ...           0           0           0
9998            0           0           0  ...           0           0           0
9999            0           0           0  ...           0           0           0
10000           0           0           0  ...           0           0           0

[9000 rows x 9260 columns]
--------
fitting data... (trial 24/32)
